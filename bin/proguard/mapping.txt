com.giantrabbit.nagare.CheckThread -> com.giantrabbit.nagare.a:
    com.giantrabbit.nagare.NagareService ns -> a
    boolean running -> b
    com.giantrabbit.nagare.DownloadThread dt -> c
    void run() -> run
com.giantrabbit.nagare.DownloadThread -> com.giantrabbit.nagare.b:
    android.content.Context m_context -> a
    java.lang.String m_errors -> b
    java.net.URL m_url -> c
    com.giantrabbit.nagare.ShoutcastFile m_shoutcast_file -> d
    com.giantrabbit.nagare.NagareService ns -> e
    int loops -> f
    java.net.Socket soc -> g
    java.net.Socket soc2 -> h
    void done() -> a
    java.lang.String errors() -> b
    void run() -> run
com.giantrabbit.nagare.INagareService -> com.giantrabbit.nagare.c:
    void download(java.lang.String) -> a
    java.lang.String errors() -> a
    java.lang.String file_name() -> b
    long position() -> c
    int positionT() -> d
    int duration() -> e
    void stop() -> f
    void seek(int) -> a
    void pause() -> g
    void resume() -> h
    void play(java.lang.String) -> b
    int state() -> i
com.giantrabbit.nagare.INagareService$Stub -> com.giantrabbit.nagare.d:
    com.giantrabbit.nagare.INagareService asInterface(android.os.IBinder) -> a
    android.os.IBinder asBinder() -> asBinder
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.giantrabbit.nagare.INagareService$Stub$Proxy -> com.giantrabbit.nagare.e:
    android.os.IBinder mRemote -> a
    android.os.IBinder asBinder() -> asBinder
    void download(java.lang.String) -> a
    java.lang.String errors() -> a
    java.lang.String file_name() -> b
    long position() -> c
    int positionT() -> d
    int duration() -> e
    void stop() -> f
    void seek(int) -> a
    void pause() -> g
    void resume() -> h
    void play(java.lang.String) -> b
    int state() -> i
com.giantrabbit.nagare.NagareService -> com.giantrabbit.nagare.NagareService:
    java.net.URL m_url -> a
    com.giantrabbit.nagare.DownloadThread m_download_thread -> b
    com.giantrabbit.nagare.CheckThread ct -> t
    android.media.MediaPlayer m_media_player -> c
    boolean plswi -> d
    boolean m_p1_playing -> e
    boolean m_p2_playing -> f
    boolean m_playoff -> g
    android.content.Context m_context -> h
    int m_current_position -> i
    java.lang.String m_errors -> j
    int m_state -> k
    boolean m_scanned -> l
    boolean m_lock -> m
    int repeats -> n
    android.media.MediaScannerConnection m_scanner -> o
    android.net.wifi.WifiManager$WifiLock _wifiLock -> p
    android.os.PowerManager _powerManagement -> q
    android.os.Handler m_handler -> r
    java.lang.Runnable m_run_startplay -> s
    com.giantrabbit.nagare.INagareService$Stub m_binder -> u
    void startplay() -> a
    void download(java.lang.String) -> a
    boolean onError(android.media.MediaPlayer,int,int) -> onError
    java.lang.String errors() -> b
    java.lang.String file_name() -> c
    android.os.IBinder onBind(android.content.Intent) -> onBind
    long position() -> d
    int positionT() -> e
    int duration() -> f
    void seek(int) -> a
    int state() -> g
    void stop() -> h
    void pause() -> i
    void play(java.lang.String) -> b
    void onCompletion(android.media.MediaPlayer) -> onCompletion
    void resume() -> j
    void onBufferingUpdate(android.media.MediaPlayer,int) -> onBufferingUpdate
com.giantrabbit.nagare.NagareService$1 -> com.giantrabbit.nagare.f:
    com.giantrabbit.nagare.NagareService this$0 -> a
    void run() -> run
com.giantrabbit.nagare.NagareService$2 -> com.giantrabbit.nagare.g:
    com.giantrabbit.nagare.NagareService this$0 -> a
    void onPrepared(android.media.MediaPlayer) -> onPrepared
com.giantrabbit.nagare.NagareService$3 -> com.giantrabbit.nagare.h:
    com.giantrabbit.nagare.NagareService this$0 -> a
    void download(java.lang.String) -> a
    java.lang.String errors() -> a
    java.lang.String file_name() -> b
    long position() -> c
    int positionT() -> d
    void seek(int) -> a
    int state() -> i
    void stop() -> f
    int duration() -> e
    void pause() -> g
    void resume() -> h
    void play(java.lang.String) -> b
com.giantrabbit.nagare.ShoutcastFile -> com.giantrabbit.nagare.i:
    android.content.Context m_context -> a
    java.lang.String m_shoutcast_name -> b
    java.lang.String m_file_name -> c
    int m_bitrate -> d
    int inilen -> e
    int repeats -> f
    long m_current_write_pos -> g
    long total_f1 -> h
    long m_buffer_mark_pos -> i
    boolean m_done -> j
    boolean m_notified_buffering_done -> k
    java.lang.String m_errors -> l
    java.io.RandomAccessFile m_file -> m
    java.io.InputStream m_ist -> n
    java.io.File m_nagare_dir -> o
    int m_icyMetaInt -> p
    java.lang.String m_br -> q
    java.util.Hashtable clients -> r
    int id -> s
    int privateid -> t
    com.giantrabbit.nagare.NagareService ns -> u
    void addRadioListener(java.lang.String,org.vradio.io.RadioProxyProducer) -> a
    void removeRadioListener(java.lang.String) -> a
    void send2RadioListeners(byte[],int) -> a
    void build_file_name() -> d
    void done() -> a
    java.lang.String errors() -> b
    void download$7e8117f7() -> c
org.teleal.cling.DefaultUpnpServiceConfiguration -> org.teleal.cling.DefaultUpnpServiceConfiguration:
    java.util.logging.Logger log -> log
    int streamListenPort -> streamListenPort
    java.util.concurrent.Executor defaultExecutor -> defaultExecutor
    org.teleal.cling.transport.spi.DatagramProcessor datagramProcessor -> datagramProcessor
    org.teleal.cling.transport.spi.SOAPActionProcessor soapActionProcessor -> soapActionProcessor
    org.teleal.cling.transport.spi.GENAEventProcessor genaEventProcessor -> genaEventProcessor
    org.teleal.cling.binding.xml.DeviceDescriptorBinder deviceDescriptorBinderUDA10 -> deviceDescriptorBinderUDA10
    org.teleal.cling.binding.xml.ServiceDescriptorBinder serviceDescriptorBinderUDA10 -> serviceDescriptorBinderUDA10
    org.teleal.cling.model.Namespace namespace -> namespace
    org.teleal.cling.transport.spi.DatagramProcessor getDatagramProcessor() -> getDatagramProcessor
    org.teleal.cling.transport.spi.SOAPActionProcessor getSoapActionProcessor() -> getSoapActionProcessor
    org.teleal.cling.transport.spi.GENAEventProcessor getGenaEventProcessor() -> getGenaEventProcessor
    org.teleal.cling.transport.spi.StreamClient createStreamClient() -> createStreamClient
    org.teleal.cling.transport.spi.MulticastReceiver createMulticastReceiver(org.teleal.cling.transport.spi.NetworkAddressFactory) -> createMulticastReceiver
    org.teleal.cling.transport.spi.DatagramIO createDatagramIO(org.teleal.cling.transport.spi.NetworkAddressFactory) -> createDatagramIO
    org.teleal.cling.transport.spi.StreamServer createStreamServer(org.teleal.cling.transport.spi.NetworkAddressFactory) -> createStreamServer
    java.util.concurrent.Executor getMulticastReceiverExecutor() -> getMulticastReceiverExecutor
    java.util.concurrent.Executor getDatagramIOExecutor() -> getDatagramIOExecutor
    java.util.concurrent.Executor getStreamServerExecutor() -> getStreamServerExecutor
    org.teleal.cling.binding.xml.DeviceDescriptorBinder getDeviceDescriptorBinderUDA10() -> getDeviceDescriptorBinderUDA10
    org.teleal.cling.binding.xml.ServiceDescriptorBinder getServiceDescriptorBinderUDA10() -> getServiceDescriptorBinderUDA10
    org.teleal.cling.model.types.ServiceType[] getExclusiveServiceTypes() -> getExclusiveServiceTypes
    int getRegistryMaintenanceIntervalMillis() -> getRegistryMaintenanceIntervalMillis
    java.util.concurrent.Executor getAsyncProtocolExecutor() -> getAsyncProtocolExecutor
    java.util.concurrent.Executor getSyncProtocolExecutor() -> getSyncProtocolExecutor
    org.teleal.cling.model.Namespace getNamespace() -> getNamespace
    java.util.concurrent.Executor getRegistryMaintainerExecutor() -> getRegistryMaintainerExecutor
    java.util.concurrent.Executor getRegistryListenerExecutor() -> getRegistryListenerExecutor
    org.teleal.cling.transport.spi.NetworkAddressFactory createNetworkAddressFactory() -> createNetworkAddressFactory
    void shutdown() -> shutdown
    org.teleal.cling.transport.spi.NetworkAddressFactory createNetworkAddressFactory(int) -> createNetworkAddressFactory
    org.teleal.cling.transport.spi.DatagramProcessor createDatagramProcessor() -> createDatagramProcessor
    org.teleal.cling.transport.spi.SOAPActionProcessor createSOAPActionProcessor() -> createSOAPActionProcessor
    org.teleal.cling.transport.spi.GENAEventProcessor createGENAEventProcessor() -> createGENAEventProcessor
    org.teleal.cling.binding.xml.DeviceDescriptorBinder createDeviceDescriptorBinderUDA10() -> createDeviceDescriptorBinderUDA10
    org.teleal.cling.binding.xml.ServiceDescriptorBinder createServiceDescriptorBinderUDA10() -> createServiceDescriptorBinderUDA10
    org.teleal.cling.model.Namespace createNamespace() -> createNamespace
    java.util.concurrent.Executor getDefaultExecutor() -> getDefaultExecutor
    java.util.concurrent.Executor createDefaultExecutor() -> createDefaultExecutor
    java.util.logging.Logger access$000() -> access$000
org.teleal.cling.DefaultUpnpServiceConfiguration$ClingExecutor -> org.teleal.cling.DefaultUpnpServiceConfiguration$ClingExecutor:
    void afterExecute(java.lang.Runnable,java.lang.Throwable) -> afterExecute
org.teleal.cling.DefaultUpnpServiceConfiguration$ClingExecutor$1 -> org.teleal.cling.DefaultUpnpServiceConfiguration$ClingExecutor$1:
    void rejectedExecution(java.lang.Runnable,java.util.concurrent.ThreadPoolExecutor) -> rejectedExecution
org.teleal.cling.DefaultUpnpServiceConfiguration$ClingThreadFactory -> org.teleal.cling.DefaultUpnpServiceConfiguration$ClingThreadFactory:
    java.lang.ThreadGroup group -> group
    java.util.concurrent.atomic.AtomicInteger threadNumber -> threadNumber
    java.lang.String namePrefix -> namePrefix
    java.lang.Thread newThread(java.lang.Runnable) -> newThread
org.teleal.cling.Main -> org.teleal.cling.Main:
    void main(java.lang.String[]) -> main
org.teleal.cling.Main$1 -> org.teleal.cling.Main$1:
    void remoteDeviceDiscoveryStarted(org.teleal.cling.registry.Registry,org.teleal.cling.model.meta.RemoteDevice) -> remoteDeviceDiscoveryStarted
    void remoteDeviceDiscoveryFailed(org.teleal.cling.registry.Registry,org.teleal.cling.model.meta.RemoteDevice,java.lang.Exception) -> remoteDeviceDiscoveryFailed
    void remoteDeviceAdded(org.teleal.cling.registry.Registry,org.teleal.cling.model.meta.RemoteDevice) -> remoteDeviceAdded
    void remoteDeviceUpdated(org.teleal.cling.registry.Registry,org.teleal.cling.model.meta.RemoteDevice) -> remoteDeviceUpdated
    void remoteDeviceRemoved(org.teleal.cling.registry.Registry,org.teleal.cling.model.meta.RemoteDevice) -> remoteDeviceRemoved
    void localDeviceAdded(org.teleal.cling.registry.Registry,org.teleal.cling.model.meta.LocalDevice) -> localDeviceAdded
    void localDeviceRemoved(org.teleal.cling.registry.Registry,org.teleal.cling.model.meta.LocalDevice) -> localDeviceRemoved
    void beforeShutdown(org.teleal.cling.registry.Registry) -> beforeShutdown
    void afterShutdown() -> afterShutdown
org.teleal.cling.UpnpService -> org.teleal.cling.UpnpService:
    org.teleal.cling.UpnpServiceConfiguration getConfiguration() -> getConfiguration
    org.teleal.cling.controlpoint.ControlPoint getControlPoint() -> getControlPoint
    org.teleal.cling.protocol.ProtocolFactory getProtocolFactory() -> getProtocolFactory
    org.teleal.cling.registry.Registry getRegistry() -> getRegistry
    org.teleal.cling.transport.Router getRouter() -> getRouter
    void shutdown() -> shutdown
org.teleal.cling.UpnpServiceConfiguration -> org.teleal.cling.UpnpServiceConfiguration:
    org.teleal.cling.transport.spi.NetworkAddressFactory createNetworkAddressFactory() -> createNetworkAddressFactory
    org.teleal.cling.transport.spi.DatagramProcessor getDatagramProcessor() -> getDatagramProcessor
    org.teleal.cling.transport.spi.SOAPActionProcessor getSoapActionProcessor() -> getSoapActionProcessor
    org.teleal.cling.transport.spi.GENAEventProcessor getGenaEventProcessor() -> getGenaEventProcessor
    org.teleal.cling.transport.spi.StreamClient createStreamClient() -> createStreamClient
    org.teleal.cling.transport.spi.MulticastReceiver createMulticastReceiver(org.teleal.cling.transport.spi.NetworkAddressFactory) -> createMulticastReceiver
    org.teleal.cling.transport.spi.DatagramIO createDatagramIO(org.teleal.cling.transport.spi.NetworkAddressFactory) -> createDatagramIO
    org.teleal.cling.transport.spi.StreamServer createStreamServer(org.teleal.cling.transport.spi.NetworkAddressFactory) -> createStreamServer
    java.util.concurrent.Executor getMulticastReceiverExecutor() -> getMulticastReceiverExecutor
    java.util.concurrent.Executor getDatagramIOExecutor() -> getDatagramIOExecutor
    java.util.concurrent.Executor getStreamServerExecutor() -> getStreamServerExecutor
    org.teleal.cling.binding.xml.DeviceDescriptorBinder getDeviceDescriptorBinderUDA10() -> getDeviceDescriptorBinderUDA10
    org.teleal.cling.binding.xml.ServiceDescriptorBinder getServiceDescriptorBinderUDA10() -> getServiceDescriptorBinderUDA10
    org.teleal.cling.model.types.ServiceType[] getExclusiveServiceTypes() -> getExclusiveServiceTypes
    int getRegistryMaintenanceIntervalMillis() -> getRegistryMaintenanceIntervalMillis
    java.util.concurrent.Executor getAsyncProtocolExecutor() -> getAsyncProtocolExecutor
    java.util.concurrent.Executor getSyncProtocolExecutor() -> getSyncProtocolExecutor
    org.teleal.cling.model.Namespace getNamespace() -> getNamespace
    java.util.concurrent.Executor getRegistryMaintainerExecutor() -> getRegistryMaintainerExecutor
    java.util.concurrent.Executor getRegistryListenerExecutor() -> getRegistryListenerExecutor
    void shutdown() -> shutdown
org.teleal.cling.UpnpServiceImpl -> org.teleal.cling.UpnpServiceImpl:
    java.util.logging.Logger log -> log
    org.teleal.cling.UpnpServiceConfiguration configuration -> configuration
    org.teleal.cling.controlpoint.ControlPoint controlPoint -> controlPoint
    org.teleal.cling.protocol.ProtocolFactory protocolFactory -> protocolFactory
    org.teleal.cling.registry.Registry registry -> registry
    org.teleal.cling.transport.Router router -> router
    org.teleal.cling.protocol.ProtocolFactory createProtocolFactory() -> createProtocolFactory
    org.teleal.cling.registry.Registry createRegistry(org.teleal.cling.protocol.ProtocolFactory) -> createRegistry
    org.teleal.cling.transport.Router createRouter(org.teleal.cling.protocol.ProtocolFactory,org.teleal.cling.registry.Registry) -> createRouter
    org.teleal.cling.controlpoint.ControlPoint createControlPoint(org.teleal.cling.protocol.ProtocolFactory,org.teleal.cling.registry.Registry) -> createControlPoint
    org.teleal.cling.UpnpServiceConfiguration getConfiguration() -> getConfiguration
    org.teleal.cling.controlpoint.ControlPoint getControlPoint() -> getControlPoint
    org.teleal.cling.protocol.ProtocolFactory getProtocolFactory() -> getProtocolFactory
    org.teleal.cling.registry.Registry getRegistry() -> getRegistry
    org.teleal.cling.transport.Router getRouter() -> getRouter
    void shutdown() -> shutdown
org.teleal.cling.android.AndroidNetworkAddressFactory -> org.teleal.cling.android.AndroidNetworkAddressFactory:
    java.util.logging.Logger log -> log
    java.net.NetworkInterface wifiInterface -> wifiInterface
    java.util.List bindAddresses -> bindAddresses
    void discoverBindAddresses() -> discoverBindAddresses
    boolean isUsableAddress(java.net.InetAddress) -> isUsableAddress
    java.util.List getInetAddresses(java.net.NetworkInterface) -> getInetAddresses
    java.net.InetAddress getMulticastGroup() -> getMulticastGroup
    int getMulticastPort() -> getMulticastPort
    int getStreamListenPort() -> getStreamListenPort
    java.net.NetworkInterface[] getNetworkInterfaces() -> getNetworkInterfaces
    java.net.InetAddress[] getBindAddresses() -> getBindAddresses
    byte[] getHardwareAddress(java.net.InetAddress) -> getHardwareAddress
    java.net.InetAddress getBroadcastAddress(java.net.InetAddress) -> getBroadcastAddress
    java.net.InetAddress getLocalAddress(java.net.NetworkInterface,boolean,java.net.InetAddress) -> getLocalAddress
    java.net.NetworkInterface getWifiNetworkInterface(android.net.wifi.WifiManager) -> getWifiNetworkInterface
    java.net.NetworkInterface getEmulatorWifiNetworkInterface(android.net.wifi.WifiManager) -> getEmulatorWifiNetworkInterface
    java.net.NetworkInterface getRealWifiNetworkInterface(android.net.wifi.WifiManager) -> getRealWifiNetworkInterface
    int byteArrayToInt(byte[],int) -> byteArrayToInt
org.teleal.cling.android.AndroidUpnpService -> org.teleal.cling.android.AndroidUpnpService:
    org.teleal.cling.UpnpService get() -> get
    org.teleal.cling.UpnpServiceConfiguration getConfiguration() -> getConfiguration
    org.teleal.cling.registry.Registry getRegistry() -> getRegistry
    org.teleal.cling.controlpoint.ControlPoint getControlPoint() -> getControlPoint
org.teleal.cling.android.AndroidUpnpServiceConfiguration -> org.teleal.cling.android.AndroidUpnpServiceConfiguration:
    java.util.logging.Logger log -> log
    android.net.wifi.WifiManager wifiManager -> wifiManager
    org.teleal.cling.transport.spi.NetworkAddressFactory createNetworkAddressFactory(int) -> createNetworkAddressFactory
    org.teleal.cling.transport.spi.StreamServer createStreamServer(org.teleal.cling.transport.spi.NetworkAddressFactory) -> createStreamServer
    org.teleal.cling.transport.spi.StreamClient createStreamClient() -> createStreamClient
    org.teleal.cling.binding.xml.DeviceDescriptorBinder createDeviceDescriptorBinderUDA10() -> createDeviceDescriptorBinderUDA10
    org.teleal.cling.binding.xml.ServiceDescriptorBinder createServiceDescriptorBinderUDA10() -> createServiceDescriptorBinderUDA10
    int getRegistryMaintenanceIntervalMillis() -> getRegistryMaintenanceIntervalMillis
    java.util.concurrent.Executor createDefaultExecutor() -> createDefaultExecutor
    java.util.logging.Logger access$000() -> access$000
org.teleal.cling.android.AndroidUpnpServiceConfiguration$1 -> org.teleal.cling.android.AndroidUpnpServiceConfiguration$1:
    org.teleal.cling.android.AndroidUpnpServiceConfiguration this$0 -> this$0
    int getConnectionTimeoutSeconds() -> getConnectionTimeoutSeconds
    int getDataReadTimeoutSeconds() -> getDataReadTimeoutSeconds
    boolean getStaleCheckingEnabled() -> getStaleCheckingEnabled
    int getRequestRetryCount() -> getRequestRetryCount
org.teleal.cling.android.AndroidUpnpServiceConfiguration$2 -> org.teleal.cling.android.AndroidUpnpServiceConfiguration$2:
    org.teleal.cling.android.AndroidUpnpServiceConfiguration this$0 -> this$0
    void beforeExecute(java.lang.Thread,java.lang.Runnable) -> beforeExecute
org.teleal.cling.android.AndroidUpnpServiceConfiguration$3 -> org.teleal.cling.android.AndroidUpnpServiceConfiguration$3:
    org.teleal.cling.android.AndroidUpnpServiceConfiguration this$0 -> this$0
    void rejectedExecution(java.lang.Runnable,java.util.concurrent.ThreadPoolExecutor) -> rejectedExecution
org.teleal.cling.android.AndroidUpnpServiceImpl -> org.teleal.cling.android.AndroidUpnpServiceImpl:
    org.teleal.cling.UpnpService upnpService -> upnpService
    org.teleal.cling.android.AndroidUpnpServiceImpl$Binder binder -> binder
    void onCreate() -> onCreate
    org.teleal.cling.android.AndroidUpnpServiceConfiguration createConfiguration(android.net.wifi.WifiManager) -> createConfiguration
    org.teleal.cling.android.AndroidWifiSwitchableRouter createRouter(org.teleal.cling.UpnpServiceConfiguration,org.teleal.cling.protocol.ProtocolFactory,android.net.wifi.WifiManager,android.net.ConnectivityManager) -> createRouter
    void onDestroy() -> onDestroy
    android.os.IBinder onBind(android.content.Intent) -> onBind
    boolean isListeningForConnectivityChanges() -> isListeningForConnectivityChanges
org.teleal.cling.android.AndroidUpnpServiceImpl$1 -> org.teleal.cling.android.AndroidUpnpServiceImpl$1:
    android.net.wifi.WifiManager val$wifiManager -> val$wifiManager
    android.net.ConnectivityManager val$connectivityManager -> val$connectivityManager
    org.teleal.cling.android.AndroidUpnpServiceImpl this$0 -> this$0
    org.teleal.cling.transport.Router createRouter(org.teleal.cling.protocol.ProtocolFactory,org.teleal.cling.registry.Registry) -> createRouter
org.teleal.cling.android.AndroidUpnpServiceImpl$Binder -> org.teleal.cling.android.AndroidUpnpServiceImpl$Binder:
    org.teleal.cling.android.AndroidUpnpServiceImpl this$0 -> this$0
    org.teleal.cling.UpnpService get() -> get
    org.teleal.cling.UpnpServiceConfiguration getConfiguration() -> getConfiguration
    org.teleal.cling.registry.Registry getRegistry() -> getRegistry
    org.teleal.cling.controlpoint.ControlPoint getControlPoint() -> getControlPoint
org.teleal.cling.android.AndroidWifiSwitchableRouter -> org.teleal.cling.android.AndroidWifiSwitchableRouter:
    java.util.logging.Logger log -> log
    android.content.BroadcastReceiver broadcastReceiver -> broadcastReceiver
    android.net.wifi.WifiManager wifiManager -> wifiManager
    android.net.ConnectivityManager connectivityManager -> connectivityManager
    android.net.wifi.WifiManager$MulticastLock multicastLock -> multicastLock
    android.content.BroadcastReceiver getBroadcastReceiver() -> getBroadcastReceiver
    android.net.wifi.WifiManager getWifiManager() -> getWifiManager
    android.net.ConnectivityManager getConnectivityManager() -> getConnectivityManager
    boolean enable() -> enable
    void handleStartFailure(org.teleal.cling.transport.spi.InitializationException) -> handleStartFailure
    boolean disable() -> disable
    int getLockTimeoutMillis() -> getLockTimeoutMillis
    java.util.logging.Logger access$000() -> access$000
org.teleal.cling.android.AndroidWifiSwitchableRouter$1 -> org.teleal.cling.android.AndroidWifiSwitchableRouter$1:
    org.teleal.cling.android.AndroidWifiSwitchableRouter this$0 -> this$0
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
org.teleal.cling.binding.LocalServiceBinder -> org.teleal.cling.binding.LocalServiceBinder:
    org.teleal.cling.model.meta.LocalService read(java.lang.Class) -> read
    org.teleal.cling.model.meta.LocalService read(java.lang.Class,org.teleal.cling.model.types.ServiceId,org.teleal.cling.model.types.ServiceType,boolean,java.lang.Class[]) -> read
org.teleal.cling.binding.LocalServiceBindingException -> org.teleal.cling.binding.LocalServiceBindingException:
org.teleal.cling.binding.annotations.AnnotationActionBinder -> org.teleal.cling.binding.annotations.AnnotationActionBinder:
    java.util.logging.Logger log -> log
    org.teleal.cling.binding.annotations.UpnpAction annotation -> annotation
    java.lang.reflect.Method method -> method
    java.util.Map stateVariables -> stateVariables
    java.util.Set stringConvertibleTypes -> stringConvertibleTypes
    org.teleal.cling.binding.annotations.UpnpAction getAnnotation() -> getAnnotation
    java.util.Map getStateVariables() -> getStateVariables
    java.lang.reflect.Method getMethod() -> getMethod
    java.util.Set getStringConvertibleTypes() -> getStringConvertibleTypes
    void appendAction(java.util.Map) -> appendAction
    org.teleal.cling.model.action.ActionExecutor createExecutor(java.util.Map) -> createExecutor
    java.util.List createInputArguments() -> createInputArguments
    java.util.Map createOutputArguments() -> createOutputArguments
    org.teleal.cling.model.state.StateVariableAccessor findOutputArgumentAccessor(org.teleal.cling.model.meta.StateVariable,java.lang.String,boolean) -> findOutputArgumentAccessor
    org.teleal.cling.model.meta.StateVariable findRelatedStateVariable(java.lang.String,java.lang.String,java.lang.String) -> findRelatedStateVariable
    void validateType(org.teleal.cling.model.meta.StateVariable,java.lang.Class) -> validateType
    org.teleal.cling.model.meta.StateVariable getStateVariable(java.lang.String) -> getStateVariable
org.teleal.cling.binding.annotations.AnnotationLocalServiceBinder -> org.teleal.cling.binding.annotations.AnnotationLocalServiceBinder:
    java.util.logging.Logger log -> log
    org.teleal.cling.model.meta.LocalService read(java.lang.Class) -> read
    org.teleal.cling.model.meta.LocalService read(java.lang.Class,org.teleal.cling.model.types.ServiceId,org.teleal.cling.model.types.ServiceType,boolean,java.lang.Class[]) -> read
    org.teleal.cling.model.meta.LocalService read(java.lang.Class,org.teleal.cling.model.types.ServiceId,org.teleal.cling.model.types.ServiceType,boolean,java.util.Set) -> read
    java.util.Set readStringConvertibleTypes(java.lang.Class[]) -> readStringConvertibleTypes
    java.util.Map readStateVariables(java.lang.Class,java.util.Set) -> readStateVariables
    java.util.Map readActions(java.lang.Class,java.util.Map,java.util.Set) -> readActions
    java.lang.String toUpnpStateVariableName(java.lang.String) -> toUpnpStateVariableName
    java.lang.String toJavaStateVariableName(java.lang.String) -> toJavaStateVariableName
    java.lang.String toUpnpActionName(java.lang.String) -> toUpnpActionName
    java.lang.String toJavaActionName(java.lang.String) -> toJavaActionName
org.teleal.cling.binding.annotations.AnnotationStateVariableBinder -> org.teleal.cling.binding.annotations.AnnotationStateVariableBinder:
    java.util.logging.Logger log -> log
    org.teleal.cling.binding.annotations.UpnpStateVariable annotation -> annotation
    java.lang.String name -> name
    org.teleal.cling.model.state.StateVariableAccessor accessor -> accessor
    java.util.Set stringConvertibleTypes -> stringConvertibleTypes
    org.teleal.cling.binding.annotations.UpnpStateVariable getAnnotation() -> getAnnotation
    java.lang.String getName() -> getName
    org.teleal.cling.model.state.StateVariableAccessor getAccessor() -> getAccessor
    java.util.Set getStringConvertibleTypes() -> getStringConvertibleTypes
    org.teleal.cling.model.meta.StateVariable createStateVariable() -> createStateVariable
    org.teleal.cling.model.types.Datatype createDatatype() -> createDatatype
    java.lang.String createDefaultValue(org.teleal.cling.model.types.Datatype) -> createDefaultValue
    java.lang.String[] getAllowedValues(java.lang.Class) -> getAllowedValues
    org.teleal.cling.model.meta.StateVariableAllowedValueRange getAllowedValueRange() -> getAllowedValueRange
org.teleal.cling.binding.annotations.UpnpAction -> org.teleal.cling.binding.annotations.UpnpAction:
    java.lang.String name() -> name
    org.teleal.cling.binding.annotations.UpnpOutputArgument[] out() -> out
org.teleal.cling.binding.annotations.UpnpInputArgument -> org.teleal.cling.binding.annotations.UpnpInputArgument:
    java.lang.String name() -> name
    java.lang.String[] aliases() -> aliases
    java.lang.String stateVariable() -> stateVariable
org.teleal.cling.binding.annotations.UpnpOutputArgument -> org.teleal.cling.binding.annotations.UpnpOutputArgument:
    java.lang.String name() -> name
    java.lang.String stateVariable() -> stateVariable
    java.lang.String getterName() -> getterName
org.teleal.cling.binding.annotations.UpnpService -> org.teleal.cling.binding.annotations.UpnpService:
    org.teleal.cling.binding.annotations.UpnpServiceId serviceId() -> serviceId
    org.teleal.cling.binding.annotations.UpnpServiceType serviceType() -> serviceType
    boolean supportsQueryStateVariables() -> supportsQueryStateVariables
    java.lang.Class[] stringConvertibleTypes() -> stringConvertibleTypes
org.teleal.cling.binding.annotations.UpnpServiceId -> org.teleal.cling.binding.annotations.UpnpServiceId:
    java.lang.String namespace() -> namespace
    java.lang.String value() -> value
org.teleal.cling.binding.annotations.UpnpServiceType -> org.teleal.cling.binding.annotations.UpnpServiceType:
    java.lang.String namespace() -> namespace
    java.lang.String value() -> value
    int version() -> version
org.teleal.cling.binding.annotations.UpnpStateVariable -> org.teleal.cling.binding.annotations.UpnpStateVariable:
    java.lang.String name() -> name
    java.lang.String datatype() -> datatype
    java.lang.String defaultValue() -> defaultValue
    java.lang.String[] allowedValues() -> allowedValues
    java.lang.Class allowedValuesEnum() -> allowedValuesEnum
    long allowedValueMinimum() -> allowedValueMinimum
    long allowedValueMaximum() -> allowedValueMaximum
    long allowedValueStep() -> allowedValueStep
    boolean sendEvents() -> sendEvents
    int eventMaximumRateMilliseconds() -> eventMaximumRateMilliseconds
    int eventMinimumDelta() -> eventMinimumDelta
org.teleal.cling.binding.annotations.UpnpStateVariables -> org.teleal.cling.binding.annotations.UpnpStateVariables:
    org.teleal.cling.binding.annotations.UpnpStateVariable[] value() -> value
    boolean preferFields() -> preferFields
org.teleal.cling.binding.staging.MutableAction -> org.teleal.cling.binding.staging.MutableAction:
    java.lang.String name -> name
    java.util.List arguments -> arguments
    org.teleal.cling.model.meta.Action build() -> build
    org.teleal.cling.model.meta.ActionArgument[] createActionArgumennts() -> createActionArgumennts
org.teleal.cling.binding.staging.MutableActionArgument -> org.teleal.cling.binding.staging.MutableActionArgument:
    java.lang.String name -> name
    java.lang.String relatedStateVariable -> relatedStateVariable
    org.teleal.cling.model.meta.ActionArgument$Direction direction -> direction
    boolean retval -> retval
    org.teleal.cling.model.meta.ActionArgument build() -> build
org.teleal.cling.binding.staging.MutableAllowedValueRange -> org.teleal.cling.binding.staging.MutableAllowedValueRange:
    java.lang.Long minimum -> minimum
    java.lang.Long maximum -> maximum
    java.lang.Long step -> step
org.teleal.cling.binding.staging.MutableDevice -> org.teleal.cling.binding.staging.MutableDevice:
    org.teleal.cling.model.types.UDN udn -> udn
    org.teleal.cling.binding.staging.MutableUDAVersion udaVersion -> udaVersion
    java.net.URL baseURL -> baseURL
    java.lang.String deviceType -> deviceType
    java.lang.String friendlyName -> friendlyName
    java.lang.String manufacturer -> manufacturer
    java.net.URI manufacturerURI -> manufacturerURI
    java.lang.String modelName -> modelName
    java.lang.String modelDescription -> modelDescription
    java.lang.String modelNumber -> modelNumber
    java.net.URI modelURI -> modelURI
    java.lang.String serialNumber -> serialNumber
    java.lang.String upc -> upc
    java.net.URI presentationURI -> presentationURI
    java.util.List dlnaDocs -> dlnaDocs
    org.teleal.cling.model.types.DLNACaps dlnaCaps -> dlnaCaps
    java.util.List icons -> icons
    java.util.List services -> services
    java.util.List embeddedDevices -> embeddedDevices
    org.teleal.cling.binding.staging.MutableDevice parentDevice -> parentDevice
    org.teleal.cling.model.meta.Device build(org.teleal.cling.model.meta.Device) -> build
    org.teleal.cling.model.meta.Device build(org.teleal.cling.model.meta.Device,org.teleal.cling.model.meta.UDAVersion,java.net.URL) -> build
    org.teleal.cling.model.meta.UDAVersion createDeviceVersion() -> createDeviceVersion
    org.teleal.cling.model.types.DeviceType createDeviceType() -> createDeviceType
    org.teleal.cling.model.meta.DeviceDetails createDeviceDetails(java.net.URL) -> createDeviceDetails
    org.teleal.cling.model.meta.Icon[] createIcons() -> createIcons
    org.teleal.cling.model.meta.Service[] createServices(org.teleal.cling.model.meta.Device) -> createServices
org.teleal.cling.binding.staging.MutableIcon -> org.teleal.cling.binding.staging.MutableIcon:
    java.lang.String mimeType -> mimeType
    int width -> width
    int height -> height
    int depth -> depth
    java.net.URI uri -> uri
    org.teleal.cling.model.meta.Icon build() -> build
org.teleal.cling.binding.staging.MutableService -> org.teleal.cling.binding.staging.MutableService:
    org.teleal.cling.model.types.ServiceType serviceType -> serviceType
    org.teleal.cling.model.types.ServiceId serviceId -> serviceId
    java.net.URI descriptorURI -> descriptorURI
    java.net.URI controlURI -> controlURI
    java.net.URI eventSubscriptionURI -> eventSubscriptionURI
    java.util.List actions -> actions
    java.util.List stateVariables -> stateVariables
    org.teleal.cling.model.meta.Service build(org.teleal.cling.model.meta.Device) -> build
    org.teleal.cling.model.meta.Action[] createActions() -> createActions
    org.teleal.cling.model.meta.StateVariable[] createStateVariables() -> createStateVariables
org.teleal.cling.binding.staging.MutableStateVariable -> org.teleal.cling.binding.staging.MutableStateVariable:
    java.lang.String name -> name
    org.teleal.cling.model.types.Datatype dataType -> dataType
    java.lang.String defaultValue -> defaultValue
    java.util.List allowedValues -> allowedValues
    org.teleal.cling.binding.staging.MutableAllowedValueRange allowedValueRange -> allowedValueRange
    org.teleal.cling.model.meta.StateVariableEventDetails eventDetails -> eventDetails
    org.teleal.cling.model.meta.StateVariable build() -> build
org.teleal.cling.binding.staging.MutableUDAVersion -> org.teleal.cling.binding.staging.MutableUDAVersion:
    int major -> major
    int minor -> minor
org.teleal.cling.binding.xml.Descriptor -> org.teleal.cling.binding.xml.Descriptor:
org.teleal.cling.binding.xml.Descriptor$Device -> org.teleal.cling.binding.xml.Descriptor$Device:
    java.lang.String NAMESPACE_URI -> NAMESPACE_URI
    java.lang.String DLNA_NAMESPACE_URI -> DLNA_NAMESPACE_URI
    java.lang.String DLNA_PREFIX -> DLNA_PREFIX
org.teleal.cling.binding.xml.Descriptor$Device$ELEMENT -> org.teleal.cling.binding.xml.Descriptor$Device$ELEMENT:
    org.teleal.cling.binding.xml.Descriptor$Device$ELEMENT root -> root
    org.teleal.cling.binding.xml.Descriptor$Device$ELEMENT specVersion -> specVersion
    org.teleal.cling.binding.xml.Descriptor$Device$ELEMENT major -> major
    org.teleal.cling.binding.xml.Descriptor$Device$ELEMENT minor -> minor
    org.teleal.cling.binding.xml.Descriptor$Device$ELEMENT URLBase -> URLBase
    org.teleal.cling.binding.xml.Descriptor$Device$ELEMENT device -> device
    org.teleal.cling.binding.xml.Descriptor$Device$ELEMENT UDN -> UDN
    org.teleal.cling.binding.xml.Descriptor$Device$ELEMENT X_DLNADOC -> X_DLNADOC
    org.teleal.cling.binding.xml.Descriptor$Device$ELEMENT X_DLNACAP -> X_DLNACAP
    org.teleal.cling.binding.xml.Descriptor$Device$ELEMENT deviceType -> deviceType
    org.teleal.cling.binding.xml.Descriptor$Device$ELEMENT friendlyName -> friendlyName
    org.teleal.cling.binding.xml.Descriptor$Device$ELEMENT manufacturer -> manufacturer
    org.teleal.cling.binding.xml.Descriptor$Device$ELEMENT manufacturerURL -> manufacturerURL
    org.teleal.cling.binding.xml.Descriptor$Device$ELEMENT modelDescription -> modelDescription
    org.teleal.cling.binding.xml.Descriptor$Device$ELEMENT modelName -> modelName
    org.teleal.cling.binding.xml.Descriptor$Device$ELEMENT modelNumber -> modelNumber
    org.teleal.cling.binding.xml.Descriptor$Device$ELEMENT modelURL -> modelURL
    org.teleal.cling.binding.xml.Descriptor$Device$ELEMENT presentationURL -> presentationURL
    org.teleal.cling.binding.xml.Descriptor$Device$ELEMENT UPC -> UPC
    org.teleal.cling.binding.xml.Descriptor$Device$ELEMENT serialNumber -> serialNumber
    org.teleal.cling.binding.xml.Descriptor$Device$ELEMENT iconList -> iconList
    org.teleal.cling.binding.xml.Descriptor$Device$ELEMENT icon -> icon
    org.teleal.cling.binding.xml.Descriptor$Device$ELEMENT width -> width
    org.teleal.cling.binding.xml.Descriptor$Device$ELEMENT height -> height
    org.teleal.cling.binding.xml.Descriptor$Device$ELEMENT depth -> depth
    org.teleal.cling.binding.xml.Descriptor$Device$ELEMENT url -> url
    org.teleal.cling.binding.xml.Descriptor$Device$ELEMENT mimetype -> mimetype
    org.teleal.cling.binding.xml.Descriptor$Device$ELEMENT serviceList -> serviceList
    org.teleal.cling.binding.xml.Descriptor$Device$ELEMENT service -> service
    org.teleal.cling.binding.xml.Descriptor$Device$ELEMENT serviceType -> serviceType
    org.teleal.cling.binding.xml.Descriptor$Device$ELEMENT serviceId -> serviceId
    org.teleal.cling.binding.xml.Descriptor$Device$ELEMENT SCPDURL -> SCPDURL
    org.teleal.cling.binding.xml.Descriptor$Device$ELEMENT controlURL -> controlURL
    org.teleal.cling.binding.xml.Descriptor$Device$ELEMENT eventSubURL -> eventSubURL
    org.teleal.cling.binding.xml.Descriptor$Device$ELEMENT deviceList -> deviceList
    org.teleal.cling.binding.xml.Descriptor$Device$ELEMENT[] $VALUES -> $VALUES
    org.teleal.cling.binding.xml.Descriptor$Device$ELEMENT[] values() -> values
    org.teleal.cling.binding.xml.Descriptor$Device$ELEMENT valueOf(java.lang.String) -> valueOf
    org.teleal.cling.binding.xml.Descriptor$Device$ELEMENT valueOrNullOf(java.lang.String) -> valueOrNullOf
    boolean equals(org.w3c.dom.Node) -> equals
org.teleal.cling.binding.xml.Descriptor$Service -> org.teleal.cling.binding.xml.Descriptor$Service:
    java.lang.String NAMESPACE_URI -> NAMESPACE_URI
org.teleal.cling.binding.xml.Descriptor$Service$ATTRIBUTE -> org.teleal.cling.binding.xml.Descriptor$Service$ATTRIBUTE:
    org.teleal.cling.binding.xml.Descriptor$Service$ATTRIBUTE sendEvents -> sendEvents
    org.teleal.cling.binding.xml.Descriptor$Service$ATTRIBUTE[] $VALUES -> $VALUES
    org.teleal.cling.binding.xml.Descriptor$Service$ATTRIBUTE[] values() -> values
    org.teleal.cling.binding.xml.Descriptor$Service$ATTRIBUTE valueOf(java.lang.String) -> valueOf
org.teleal.cling.binding.xml.Descriptor$Service$ELEMENT -> org.teleal.cling.binding.xml.Descriptor$Service$ELEMENT:
    org.teleal.cling.binding.xml.Descriptor$Service$ELEMENT scpd -> scpd
    org.teleal.cling.binding.xml.Descriptor$Service$ELEMENT specVersion -> specVersion
    org.teleal.cling.binding.xml.Descriptor$Service$ELEMENT major -> major
    org.teleal.cling.binding.xml.Descriptor$Service$ELEMENT minor -> minor
    org.teleal.cling.binding.xml.Descriptor$Service$ELEMENT actionList -> actionList
    org.teleal.cling.binding.xml.Descriptor$Service$ELEMENT action -> action
    org.teleal.cling.binding.xml.Descriptor$Service$ELEMENT name -> name
    org.teleal.cling.binding.xml.Descriptor$Service$ELEMENT argumentList -> argumentList
    org.teleal.cling.binding.xml.Descriptor$Service$ELEMENT argument -> argument
    org.teleal.cling.binding.xml.Descriptor$Service$ELEMENT direction -> direction
    org.teleal.cling.binding.xml.Descriptor$Service$ELEMENT relatedStateVariable -> relatedStateVariable
    org.teleal.cling.binding.xml.Descriptor$Service$ELEMENT retval -> retval
    org.teleal.cling.binding.xml.Descriptor$Service$ELEMENT serviceStateTable -> serviceStateTable
    org.teleal.cling.binding.xml.Descriptor$Service$ELEMENT stateVariable -> stateVariable
    org.teleal.cling.binding.xml.Descriptor$Service$ELEMENT dataType -> dataType
    org.teleal.cling.binding.xml.Descriptor$Service$ELEMENT defaultValue -> defaultValue
    org.teleal.cling.binding.xml.Descriptor$Service$ELEMENT allowedValueList -> allowedValueList
    org.teleal.cling.binding.xml.Descriptor$Service$ELEMENT allowedValue -> allowedValue
    org.teleal.cling.binding.xml.Descriptor$Service$ELEMENT allowedValueRange -> allowedValueRange
    org.teleal.cling.binding.xml.Descriptor$Service$ELEMENT minimum -> minimum
    org.teleal.cling.binding.xml.Descriptor$Service$ELEMENT maximum -> maximum
    org.teleal.cling.binding.xml.Descriptor$Service$ELEMENT step -> step
    org.teleal.cling.binding.xml.Descriptor$Service$ELEMENT[] $VALUES -> $VALUES
    org.teleal.cling.binding.xml.Descriptor$Service$ELEMENT[] values() -> values
    org.teleal.cling.binding.xml.Descriptor$Service$ELEMENT valueOf(java.lang.String) -> valueOf
    org.teleal.cling.binding.xml.Descriptor$Service$ELEMENT valueOrNullOf(java.lang.String) -> valueOrNullOf
    boolean equals(org.w3c.dom.Node) -> equals
org.teleal.cling.binding.xml.DescriptorBindingException -> org.teleal.cling.binding.xml.DescriptorBindingException:
org.teleal.cling.binding.xml.DeviceDescriptorBinder -> org.teleal.cling.binding.xml.DeviceDescriptorBinder:
    org.teleal.cling.model.meta.Device describe(org.teleal.cling.model.meta.Device,java.lang.String) -> describe
    org.teleal.cling.model.meta.Device describe(org.teleal.cling.model.meta.Device,org.w3c.dom.Document) -> describe
    java.lang.String generate(org.teleal.cling.model.meta.Device,org.teleal.cling.model.profile.ControlPointInfo,org.teleal.cling.model.Namespace) -> generate
    org.w3c.dom.Document buildDOM(org.teleal.cling.model.meta.Device,org.teleal.cling.model.profile.ControlPointInfo,org.teleal.cling.model.Namespace) -> buildDOM
org.teleal.cling.binding.xml.ServiceDescriptorBinder -> org.teleal.cling.binding.xml.ServiceDescriptorBinder:
    org.teleal.cling.model.meta.Service describe(org.teleal.cling.model.meta.Service,java.lang.String) -> describe
    org.teleal.cling.model.meta.Service describe(org.teleal.cling.model.meta.Service,org.w3c.dom.Document) -> describe
    java.lang.String generate(org.teleal.cling.model.meta.Service) -> generate
    org.w3c.dom.Document buildDOM(org.teleal.cling.model.meta.Service) -> buildDOM
org.teleal.cling.binding.xml.UDA10DeviceDescriptorBinderImpl -> org.teleal.cling.binding.xml.UDA10DeviceDescriptorBinderImpl:
    java.util.logging.Logger log -> log
    org.teleal.cling.model.meta.Device describe(org.teleal.cling.model.meta.Device,java.lang.String) -> describe
    org.teleal.cling.model.meta.Device describe(org.teleal.cling.model.meta.Device,org.w3c.dom.Document) -> describe
    org.teleal.cling.model.meta.Device buildInstance(org.teleal.cling.model.meta.Device,org.teleal.cling.binding.staging.MutableDevice) -> buildInstance
    void hydrateRoot(org.teleal.cling.binding.staging.MutableDevice,org.w3c.dom.Element) -> hydrateRoot
    void hydrateSpecVersion(org.teleal.cling.binding.staging.MutableDevice,org.w3c.dom.Node) -> hydrateSpecVersion
    void hydrateDevice(org.teleal.cling.binding.staging.MutableDevice,org.w3c.dom.Node) -> hydrateDevice
    void hydrateIconList(org.teleal.cling.binding.staging.MutableDevice,org.w3c.dom.Node) -> hydrateIconList
    void hydrateServiceList(org.teleal.cling.binding.staging.MutableDevice,org.w3c.dom.Node) -> hydrateServiceList
    void hydrateDeviceList(org.teleal.cling.binding.staging.MutableDevice,org.w3c.dom.Node) -> hydrateDeviceList
    java.lang.String generate(org.teleal.cling.model.meta.Device,org.teleal.cling.model.profile.ControlPointInfo,org.teleal.cling.model.Namespace) -> generate
    org.w3c.dom.Document buildDOM(org.teleal.cling.model.meta.Device,org.teleal.cling.model.profile.ControlPointInfo,org.teleal.cling.model.Namespace) -> buildDOM
    void generateRoot(org.teleal.cling.model.Namespace,org.teleal.cling.model.meta.Device,org.w3c.dom.Document,org.teleal.cling.model.profile.ControlPointInfo) -> generateRoot
    void generateSpecVersion(org.teleal.cling.model.Namespace,org.teleal.cling.model.meta.Device,org.w3c.dom.Document,org.w3c.dom.Element) -> generateSpecVersion
    void generateDevice(org.teleal.cling.model.Namespace,org.teleal.cling.model.meta.Device,org.w3c.dom.Document,org.w3c.dom.Element,org.teleal.cling.model.profile.ControlPointInfo) -> generateDevice
    void generateIconList(org.teleal.cling.model.Namespace,org.teleal.cling.model.meta.Device,org.w3c.dom.Document,org.w3c.dom.Element) -> generateIconList
    void generateServiceList(org.teleal.cling.model.Namespace,org.teleal.cling.model.meta.Device,org.w3c.dom.Document,org.w3c.dom.Element) -> generateServiceList
    void generateDeviceList(org.teleal.cling.model.Namespace,org.teleal.cling.model.meta.Device,org.w3c.dom.Document,org.w3c.dom.Element,org.teleal.cling.model.profile.ControlPointInfo) -> generateDeviceList
    java.net.URI parseURI(java.lang.String) -> parseURI
org.teleal.cling.binding.xml.UDA10DeviceDescriptorBinderSAXImpl -> org.teleal.cling.binding.xml.UDA10DeviceDescriptorBinderSAXImpl:
    java.util.logging.Logger log -> log
    org.teleal.cling.model.meta.Device describe(org.teleal.cling.model.meta.Device,java.lang.String) -> describe
    java.util.logging.Logger access$000() -> access$000
org.teleal.cling.binding.xml.UDA10DeviceDescriptorBinderSAXImpl$1 -> org.teleal.cling.binding.xml.UDA10DeviceDescriptorBinderSAXImpl$1:
    int[] $SwitchMap$org$teleal$cling$binding$xml$Descriptor$Device$ELEMENT -> $SwitchMap$org$teleal$cling$binding$xml$Descriptor$Device$ELEMENT
org.teleal.cling.binding.xml.UDA10DeviceDescriptorBinderSAXImpl$DeviceDescriptorHandler -> org.teleal.cling.binding.xml.UDA10DeviceDescriptorBinderSAXImpl$DeviceDescriptorHandler:
    void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes) -> startElement
    void endElement(java.lang.String,java.lang.String,java.lang.String) -> endElement
    boolean isLastElement(java.lang.String,java.lang.String,java.lang.String) -> isLastElement
    void startElement(org.teleal.cling.binding.xml.Descriptor$Device$ELEMENT,org.xml.sax.Attributes) -> startElement
    void endElement(org.teleal.cling.binding.xml.Descriptor$Device$ELEMENT) -> endElement
    boolean isLastElement(org.teleal.cling.binding.xml.Descriptor$Device$ELEMENT) -> isLastElement
org.teleal.cling.binding.xml.UDA10DeviceDescriptorBinderSAXImpl$DeviceHandler -> org.teleal.cling.binding.xml.UDA10DeviceDescriptorBinderSAXImpl$DeviceHandler:
    org.teleal.cling.binding.xml.Descriptor$Device$ELEMENT EL -> EL
    void startElement(org.teleal.cling.binding.xml.Descriptor$Device$ELEMENT,org.xml.sax.Attributes) -> startElement
    void endElement(org.teleal.cling.binding.xml.Descriptor$Device$ELEMENT) -> endElement
    boolean isLastElement(org.teleal.cling.binding.xml.Descriptor$Device$ELEMENT) -> isLastElement
org.teleal.cling.binding.xml.UDA10DeviceDescriptorBinderSAXImpl$DeviceListHandler -> org.teleal.cling.binding.xml.UDA10DeviceDescriptorBinderSAXImpl$DeviceListHandler:
    org.teleal.cling.binding.xml.Descriptor$Device$ELEMENT EL -> EL
    void startElement(org.teleal.cling.binding.xml.Descriptor$Device$ELEMENT,org.xml.sax.Attributes) -> startElement
    boolean isLastElement(org.teleal.cling.binding.xml.Descriptor$Device$ELEMENT) -> isLastElement
org.teleal.cling.binding.xml.UDA10DeviceDescriptorBinderSAXImpl$IconHandler -> org.teleal.cling.binding.xml.UDA10DeviceDescriptorBinderSAXImpl$IconHandler:
    org.teleal.cling.binding.xml.Descriptor$Device$ELEMENT EL -> EL
    void endElement(org.teleal.cling.binding.xml.Descriptor$Device$ELEMENT) -> endElement
    boolean isLastElement(org.teleal.cling.binding.xml.Descriptor$Device$ELEMENT) -> isLastElement
org.teleal.cling.binding.xml.UDA10DeviceDescriptorBinderSAXImpl$IconListHandler -> org.teleal.cling.binding.xml.UDA10DeviceDescriptorBinderSAXImpl$IconListHandler:
    org.teleal.cling.binding.xml.Descriptor$Device$ELEMENT EL -> EL
    void startElement(org.teleal.cling.binding.xml.Descriptor$Device$ELEMENT,org.xml.sax.Attributes) -> startElement
    boolean isLastElement(org.teleal.cling.binding.xml.Descriptor$Device$ELEMENT) -> isLastElement
org.teleal.cling.binding.xml.UDA10DeviceDescriptorBinderSAXImpl$RootHandler -> org.teleal.cling.binding.xml.UDA10DeviceDescriptorBinderSAXImpl$RootHandler:
    void startElement(org.teleal.cling.binding.xml.Descriptor$Device$ELEMENT,org.xml.sax.Attributes) -> startElement
    void endElement(org.teleal.cling.binding.xml.Descriptor$Device$ELEMENT) -> endElement
org.teleal.cling.binding.xml.UDA10DeviceDescriptorBinderSAXImpl$ServiceHandler -> org.teleal.cling.binding.xml.UDA10DeviceDescriptorBinderSAXImpl$ServiceHandler:
    org.teleal.cling.binding.xml.Descriptor$Device$ELEMENT EL -> EL
    void endElement(org.teleal.cling.binding.xml.Descriptor$Device$ELEMENT) -> endElement
    boolean isLastElement(org.teleal.cling.binding.xml.Descriptor$Device$ELEMENT) -> isLastElement
org.teleal.cling.binding.xml.UDA10DeviceDescriptorBinderSAXImpl$ServiceListHandler -> org.teleal.cling.binding.xml.UDA10DeviceDescriptorBinderSAXImpl$ServiceListHandler:
    org.teleal.cling.binding.xml.Descriptor$Device$ELEMENT EL -> EL
    void startElement(org.teleal.cling.binding.xml.Descriptor$Device$ELEMENT,org.xml.sax.Attributes) -> startElement
    boolean isLastElement(org.teleal.cling.binding.xml.Descriptor$Device$ELEMENT) -> isLastElement
org.teleal.cling.binding.xml.UDA10DeviceDescriptorBinderSAXImpl$SpecVersionHandler -> org.teleal.cling.binding.xml.UDA10DeviceDescriptorBinderSAXImpl$SpecVersionHandler:
    org.teleal.cling.binding.xml.Descriptor$Device$ELEMENT EL -> EL
    void endElement(org.teleal.cling.binding.xml.Descriptor$Device$ELEMENT) -> endElement
    boolean isLastElement(org.teleal.cling.binding.xml.Descriptor$Device$ELEMENT) -> isLastElement
org.teleal.cling.binding.xml.UDA10ServiceDescriptorBinderImpl -> org.teleal.cling.binding.xml.UDA10ServiceDescriptorBinderImpl:
    java.util.logging.Logger log -> log
    org.teleal.cling.model.meta.Service describe(org.teleal.cling.model.meta.Service,java.lang.String) -> describe
    org.teleal.cling.model.meta.Service describe(org.teleal.cling.model.meta.Service,org.w3c.dom.Document) -> describe
    org.teleal.cling.model.meta.Service buildInstance(org.teleal.cling.model.meta.Service,org.teleal.cling.binding.staging.MutableService) -> buildInstance
    void hydrateBasic(org.teleal.cling.binding.staging.MutableService,org.teleal.cling.model.meta.Service) -> hydrateBasic
    void hydrateRoot(org.teleal.cling.binding.staging.MutableService,org.w3c.dom.Element) -> hydrateRoot
    void hydrateActionList(org.teleal.cling.binding.staging.MutableService,org.w3c.dom.Node) -> hydrateActionList
    void hydrateAction(org.teleal.cling.binding.staging.MutableAction,org.w3c.dom.Node) -> hydrateAction
    void hydrateActionArgument(org.teleal.cling.binding.staging.MutableActionArgument,org.w3c.dom.Node) -> hydrateActionArgument
    void hydrateServiceStateTableList(org.teleal.cling.binding.staging.MutableService,org.w3c.dom.Node) -> hydrateServiceStateTableList
    void hydrateStateVariable(org.teleal.cling.binding.staging.MutableStateVariable,org.w3c.dom.Element) -> hydrateStateVariable
    java.lang.String generate(org.teleal.cling.model.meta.Service) -> generate
    org.w3c.dom.Document buildDOM(org.teleal.cling.model.meta.Service) -> buildDOM
    void generateScpd(org.teleal.cling.model.meta.Service,org.w3c.dom.Document) -> generateScpd
    void generateSpecVersion(org.teleal.cling.model.meta.Service,org.w3c.dom.Document,org.w3c.dom.Element) -> generateSpecVersion
    void generateActionList(org.teleal.cling.model.meta.Service,org.w3c.dom.Document,org.w3c.dom.Element) -> generateActionList
    void generateAction(org.teleal.cling.model.meta.Action,org.w3c.dom.Document,org.w3c.dom.Element) -> generateAction
    void generateActionArgument(org.teleal.cling.model.meta.ActionArgument,org.w3c.dom.Document,org.w3c.dom.Element) -> generateActionArgument
    void generateServiceStateTable(org.teleal.cling.model.meta.Service,org.w3c.dom.Document,org.w3c.dom.Element) -> generateServiceStateTable
    void generateStateVariable(org.teleal.cling.model.meta.StateVariable,org.w3c.dom.Document,org.w3c.dom.Element) -> generateStateVariable
org.teleal.cling.binding.xml.UDA10ServiceDescriptorBinderSAXImpl -> org.teleal.cling.binding.xml.UDA10ServiceDescriptorBinderSAXImpl:
    java.util.logging.Logger log -> log
    org.teleal.cling.model.meta.Service describe(org.teleal.cling.model.meta.Service,java.lang.String) -> describe
org.teleal.cling.binding.xml.UDA10ServiceDescriptorBinderSAXImpl$1 -> org.teleal.cling.binding.xml.UDA10ServiceDescriptorBinderSAXImpl$1:
    int[] $SwitchMap$org$teleal$cling$binding$xml$Descriptor$Service$ELEMENT -> $SwitchMap$org$teleal$cling$binding$xml$Descriptor$Service$ELEMENT
org.teleal.cling.binding.xml.UDA10ServiceDescriptorBinderSAXImpl$ActionArgumentHandler -> org.teleal.cling.binding.xml.UDA10ServiceDescriptorBinderSAXImpl$ActionArgumentHandler:
    org.teleal.cling.binding.xml.Descriptor$Service$ELEMENT EL -> EL
    void endElement(org.teleal.cling.binding.xml.Descriptor$Service$ELEMENT) -> endElement
    boolean isLastElement(org.teleal.cling.binding.xml.Descriptor$Service$ELEMENT) -> isLastElement
org.teleal.cling.binding.xml.UDA10ServiceDescriptorBinderSAXImpl$ActionArgumentListHandler -> org.teleal.cling.binding.xml.UDA10ServiceDescriptorBinderSAXImpl$ActionArgumentListHandler:
    org.teleal.cling.binding.xml.Descriptor$Service$ELEMENT EL -> EL
    void startElement(org.teleal.cling.binding.xml.Descriptor$Service$ELEMENT,org.xml.sax.Attributes) -> startElement
    boolean isLastElement(org.teleal.cling.binding.xml.Descriptor$Service$ELEMENT) -> isLastElement
org.teleal.cling.binding.xml.UDA10ServiceDescriptorBinderSAXImpl$ActionHandler -> org.teleal.cling.binding.xml.UDA10ServiceDescriptorBinderSAXImpl$ActionHandler:
    org.teleal.cling.binding.xml.Descriptor$Service$ELEMENT EL -> EL
    void startElement(org.teleal.cling.binding.xml.Descriptor$Service$ELEMENT,org.xml.sax.Attributes) -> startElement
    void endElement(org.teleal.cling.binding.xml.Descriptor$Service$ELEMENT) -> endElement
    boolean isLastElement(org.teleal.cling.binding.xml.Descriptor$Service$ELEMENT) -> isLastElement
org.teleal.cling.binding.xml.UDA10ServiceDescriptorBinderSAXImpl$ActionListHandler -> org.teleal.cling.binding.xml.UDA10ServiceDescriptorBinderSAXImpl$ActionListHandler:
    org.teleal.cling.binding.xml.Descriptor$Service$ELEMENT EL -> EL
    void startElement(org.teleal.cling.binding.xml.Descriptor$Service$ELEMENT,org.xml.sax.Attributes) -> startElement
    boolean isLastElement(org.teleal.cling.binding.xml.Descriptor$Service$ELEMENT) -> isLastElement
org.teleal.cling.binding.xml.UDA10ServiceDescriptorBinderSAXImpl$AllowedValueListHandler -> org.teleal.cling.binding.xml.UDA10ServiceDescriptorBinderSAXImpl$AllowedValueListHandler:
    org.teleal.cling.binding.xml.Descriptor$Service$ELEMENT EL -> EL
    void endElement(org.teleal.cling.binding.xml.Descriptor$Service$ELEMENT) -> endElement
    boolean isLastElement(org.teleal.cling.binding.xml.Descriptor$Service$ELEMENT) -> isLastElement
org.teleal.cling.binding.xml.UDA10ServiceDescriptorBinderSAXImpl$AllowedValueRangeHandler -> org.teleal.cling.binding.xml.UDA10ServiceDescriptorBinderSAXImpl$AllowedValueRangeHandler:
    org.teleal.cling.binding.xml.Descriptor$Service$ELEMENT EL -> EL
    void endElement(org.teleal.cling.binding.xml.Descriptor$Service$ELEMENT) -> endElement
    boolean isLastElement(org.teleal.cling.binding.xml.Descriptor$Service$ELEMENT) -> isLastElement
org.teleal.cling.binding.xml.UDA10ServiceDescriptorBinderSAXImpl$RootHandler -> org.teleal.cling.binding.xml.UDA10ServiceDescriptorBinderSAXImpl$RootHandler:
    void startElement(org.teleal.cling.binding.xml.Descriptor$Service$ELEMENT,org.xml.sax.Attributes) -> startElement
org.teleal.cling.binding.xml.UDA10ServiceDescriptorBinderSAXImpl$ServiceDescriptorHandler -> org.teleal.cling.binding.xml.UDA10ServiceDescriptorBinderSAXImpl$ServiceDescriptorHandler:
    void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes) -> startElement
    void endElement(java.lang.String,java.lang.String,java.lang.String) -> endElement
    boolean isLastElement(java.lang.String,java.lang.String,java.lang.String) -> isLastElement
    void startElement(org.teleal.cling.binding.xml.Descriptor$Service$ELEMENT,org.xml.sax.Attributes) -> startElement
    void endElement(org.teleal.cling.binding.xml.Descriptor$Service$ELEMENT) -> endElement
    boolean isLastElement(org.teleal.cling.binding.xml.Descriptor$Service$ELEMENT) -> isLastElement
org.teleal.cling.binding.xml.UDA10ServiceDescriptorBinderSAXImpl$StateVariableHandler -> org.teleal.cling.binding.xml.UDA10ServiceDescriptorBinderSAXImpl$StateVariableHandler:
    org.teleal.cling.binding.xml.Descriptor$Service$ELEMENT EL -> EL
    void startElement(org.teleal.cling.binding.xml.Descriptor$Service$ELEMENT,org.xml.sax.Attributes) -> startElement
    void endElement(org.teleal.cling.binding.xml.Descriptor$Service$ELEMENT) -> endElement
    boolean isLastElement(org.teleal.cling.binding.xml.Descriptor$Service$ELEMENT) -> isLastElement
org.teleal.cling.binding.xml.UDA10ServiceDescriptorBinderSAXImpl$StateVariableListHandler -> org.teleal.cling.binding.xml.UDA10ServiceDescriptorBinderSAXImpl$StateVariableListHandler:
    org.teleal.cling.binding.xml.Descriptor$Service$ELEMENT EL -> EL
    void startElement(org.teleal.cling.binding.xml.Descriptor$Service$ELEMENT,org.xml.sax.Attributes) -> startElement
    boolean isLastElement(org.teleal.cling.binding.xml.Descriptor$Service$ELEMENT) -> isLastElement
org.teleal.cling.bridge.BridgeNamespace -> org.teleal.cling.bridge.BridgeNamespace:
    java.lang.String PATH_LINK -> PATH_LINK
    java.lang.String PROXY_SEGMENT -> PROXY_SEGMENT
    java.net.URI getEndpointPath(java.lang.String) -> getEndpointPath
    java.net.URI getProxyPath(java.lang.String,org.teleal.cling.model.meta.Device) -> getProxyPath
    java.lang.String getIconId(org.teleal.cling.model.meta.Device,int) -> getIconId
org.teleal.cling.bridge.BridgeProtocolFactory -> org.teleal.cling.bridge.BridgeProtocolFactory:
    java.util.logging.Logger log -> log
    org.teleal.cling.protocol.ReceivingSync createReceivingSync(org.teleal.cling.model.message.StreamRequestMessage) -> createReceivingSync
org.teleal.cling.bridge.BridgeServerResource -> org.teleal.cling.bridge.BridgeServerResource:
    org.teleal.common.xhtml.XHTMLParser parserXHTML -> parserXHTML
    javax.servlet.ServletContext servletContext -> servletContext
    javax.ws.rs.core.UriInfo uriInfo -> uriInfo
    javax.servlet.ServletContext getServletContext() -> getServletContext
    void setServletContext(javax.servlet.ServletContext) -> setServletContext
    javax.ws.rs.core.UriInfo getUriInfo() -> getUriInfo
    void setUriInfo(javax.ws.rs.core.UriInfo) -> setUriInfo
    org.teleal.cling.bridge.BridgeUpnpService getUpnpService() -> getUpnpService
    org.teleal.cling.registry.Registry getRegistry() -> getRegistry
    org.teleal.cling.controlpoint.ControlPoint getControlPoint() -> getControlPoint
    org.teleal.cling.bridge.BridgeUpnpServiceConfiguration getConfiguration() -> getConfiguration
    org.teleal.cling.bridge.BridgeNamespace getNamespace() -> getNamespace
    java.lang.String getFirstPathParamValue(java.lang.String) -> getFirstPathParamValue
    org.teleal.cling.model.types.UDN getRequestedUDN() -> getRequestedUDN
    org.teleal.common.xhtml.XHTMLParser getParserXHTML() -> getParserXHTML
    void createHead(org.teleal.common.xhtml.XHTMLElement,java.lang.String) -> createHead
    org.teleal.common.xhtml.Body createBodyTemplate(org.teleal.common.xhtml.XHTML,javax.xml.xpath.XPath,java.lang.String) -> createBodyTemplate
    java.lang.String appendLocalCredentials(java.lang.String) -> appendLocalCredentials
org.teleal.cling.bridge.BridgeUpnpService -> org.teleal.cling.bridge.BridgeUpnpService:
    org.teleal.cling.bridge.BridgeUpnpServiceConfiguration getConfiguration() -> getConfiguration
    org.teleal.cling.bridge.link.LinkManager getLinkManager() -> getLinkManager
org.teleal.cling.bridge.BridgeUpnpServiceConfiguration -> org.teleal.cling.bridge.BridgeUpnpServiceConfiguration:
    java.util.logging.Logger log -> log
    java.net.URL localBaseURL -> localBaseURL
    java.lang.String contextPath -> contextPath
    org.teleal.cling.bridge.link.proxy.CombinedDescriptorBinder combinedDescriptorBinder -> combinedDescriptorBinder
    org.teleal.cling.bridge.gateway.FormActionProcessor actionProcessor -> actionProcessor
    org.teleal.cling.bridge.auth.AuthManager authManager -> authManager
    java.net.URL getLocalBaseURL() -> getLocalBaseURL
    java.lang.String getContextPath() -> getContextPath
    org.teleal.cling.bridge.link.proxy.CombinedDescriptorBinder getCombinedDescriptorBinder() -> getCombinedDescriptorBinder
    org.teleal.cling.bridge.gateway.FormActionProcessor getActionProcessor() -> getActionProcessor
    org.teleal.cling.bridge.auth.AuthManager getAuthManager() -> getAuthManager
    org.teleal.cling.bridge.link.proxy.CombinedDescriptorBinder createCombinedDescriptorBinder() -> createCombinedDescriptorBinder
    org.teleal.cling.bridge.gateway.FormActionProcessor createFormActionProcessor() -> createFormActionProcessor
    org.teleal.cling.bridge.auth.AuthManager createAuthManager() -> createAuthManager
    java.net.URL getLocalEndpointURL() -> getLocalEndpointURL
    java.net.URL getLocalEndpointURLWithCredentials() -> getLocalEndpointURLWithCredentials
    org.teleal.cling.bridge.BridgeNamespace getNamespace() -> getNamespace
    org.teleal.cling.transport.spi.StreamServer createStreamServer(org.teleal.cling.transport.spi.NetworkAddressFactory) -> createStreamServer
    org.teleal.cling.model.Namespace getNamespace() -> getNamespace
org.teleal.cling.bridge.BridgeUpnpServiceConfiguration$1 -> org.teleal.cling.bridge.BridgeUpnpServiceConfiguration$1:
    org.teleal.cling.bridge.BridgeUpnpServiceConfiguration this$0 -> this$0
    void init(java.net.InetAddress,org.teleal.cling.transport.Router) -> init
    int getPort() -> getPort
    void stop() -> stop
    org.teleal.cling.transport.spi.StreamServerConfiguration getConfiguration() -> getConfiguration
    void run() -> run
org.teleal.cling.bridge.BridgeWebApplicationException -> org.teleal.cling.bridge.BridgeWebApplicationException:
org.teleal.cling.bridge.Constants -> org.teleal.cling.bridge.Constants:
    java.lang.String INIT_PARAM_LOCAL_BASE_URL -> INIT_PARAM_LOCAL_BASE_URL
    java.lang.String INIT_PARAM_LOGGING_CONFIG -> INIT_PARAM_LOGGING_CONFIG
    java.lang.String ATTR_UPNP_SERVICE -> ATTR_UPNP_SERVICE
    java.lang.String PARAM_UDN -> PARAM_UDN
    java.lang.String PARAM_SERVICE_ID_NS -> PARAM_SERVICE_ID_NS
    java.lang.String PARAM_SERVICE_ID -> PARAM_SERVICE_ID
    java.lang.String PARAM_ACTION_NAME -> PARAM_ACTION_NAME
    java.lang.String PARAM_ENDPOINT_ID -> PARAM_ENDPOINT_ID
    int LINK_DEFAULT_TIMEOUT_SECONDS -> LINK_DEFAULT_TIMEOUT_SECONDS
org.teleal.cling.bridge.WARBridgeContextListener -> org.teleal.cling.bridge.WARBridgeContextListener:
    java.util.logging.Logger log -> log
    org.teleal.cling.bridge.WARBridgeUpnpService upnpService -> upnpService
    void contextInitialized(javax.servlet.ServletContextEvent) -> contextInitialized
    void contextDestroyed(javax.servlet.ServletContextEvent) -> contextDestroyed
    void initializeLogging(javax.servlet.ServletContext) -> initializeLogging
    java.net.URL getLocalBaseURL(javax.servlet.ServletContext) -> getLocalBaseURL
org.teleal.cling.bridge.WARBridgeContextListener$1 -> org.teleal.cling.bridge.WARBridgeContextListener$1:
    org.teleal.cling.bridge.WARBridgeContextListener this$0 -> this$0
    void run() -> run
org.teleal.cling.bridge.WARBridgeUpnpService -> org.teleal.cling.bridge.WARBridgeUpnpService:
    java.util.logging.Logger log -> log
    org.teleal.cling.bridge.BridgeUpnpServiceConfiguration configuration -> configuration
    org.teleal.cling.controlpoint.ControlPoint controlPoint -> controlPoint
    org.teleal.cling.protocol.ProtocolFactory protocolFactory -> protocolFactory
    org.teleal.cling.registry.Registry registry -> registry
    org.teleal.cling.transport.Router router -> router
    org.teleal.cling.bridge.link.LinkManager linkManager -> linkManager
    void start() -> start
    org.teleal.cling.protocol.ProtocolFactory createProtocolFactory() -> createProtocolFactory
    org.teleal.cling.registry.Registry createRegistry(org.teleal.cling.protocol.ProtocolFactory) -> createRegistry
    org.teleal.cling.transport.Router createRouter(org.teleal.cling.protocol.ProtocolFactory,org.teleal.cling.registry.Registry) -> createRouter
    org.teleal.cling.controlpoint.ControlPoint createControlPoint(org.teleal.cling.protocol.ProtocolFactory,org.teleal.cling.registry.Registry) -> createControlPoint
    org.teleal.cling.bridge.link.LinkManager createLinkManager() -> createLinkManager
    org.teleal.cling.bridge.BridgeUpnpServiceConfiguration getConfiguration() -> getConfiguration
    void setConfiguration(org.teleal.cling.bridge.BridgeUpnpServiceConfiguration) -> setConfiguration
    org.teleal.cling.controlpoint.ControlPoint getControlPoint() -> getControlPoint
    org.teleal.cling.protocol.ProtocolFactory getProtocolFactory() -> getProtocolFactory
    org.teleal.cling.registry.Registry getRegistry() -> getRegistry
    org.teleal.cling.transport.Router getRouter() -> getRouter
    org.teleal.cling.bridge.link.LinkManager getLinkManager() -> getLinkManager
    void shutdown() -> shutdown
    org.teleal.cling.UpnpServiceConfiguration getConfiguration() -> getConfiguration
org.teleal.cling.bridge.auth.AuthCredentials -> org.teleal.cling.bridge.auth.AuthCredentials:
org.teleal.cling.bridge.auth.AuthFilter -> org.teleal.cling.bridge.auth.AuthFilter:
    java.util.logging.Logger log -> log
    org.teleal.cling.bridge.auth.AuthManager authManager -> authManager
    void init(javax.servlet.FilterConfig) -> init
    void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain) -> doFilter
    void destroy() -> destroy
org.teleal.cling.bridge.auth.AuthManager -> org.teleal.cling.bridge.auth.AuthManager:
    org.teleal.cling.bridge.auth.AuthCredentials getLocalCredentials() -> getLocalCredentials
    boolean isAuthenticated(org.teleal.cling.bridge.auth.AuthCredentials) -> isAuthenticated
    org.teleal.cling.bridge.auth.AuthCredentials read(javax.servlet.http.HttpServletRequest) -> read
    void write(org.teleal.cling.bridge.auth.AuthCredentials,org.jboss.resteasy.client.ClientRequest) -> write
org.teleal.cling.bridge.auth.HashCredentials -> org.teleal.cling.bridge.auth.HashCredentials:
    java.lang.String hash -> hash
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
org.teleal.cling.bridge.auth.SecureHashAuthManager -> org.teleal.cling.bridge.auth.SecureHashAuthManager:
    java.util.logging.Logger log -> log
    java.lang.String QUERY_PARAM_AUTH -> QUERY_PARAM_AUTH
    java.lang.String HEADER_PARAM_AUTH -> HEADER_PARAM_AUTH
    java.util.Random random -> random
    org.teleal.cling.bridge.auth.HashCredentials credentials -> credentials
    org.teleal.cling.bridge.auth.HashCredentials newCredentials() -> newCredentials
    org.teleal.cling.bridge.auth.HashCredentials getLocalCredentials() -> getLocalCredentials
    boolean isAuthenticated(org.teleal.cling.bridge.auth.HashCredentials) -> isAuthenticated
    org.teleal.cling.bridge.auth.HashCredentials read(javax.servlet.http.HttpServletRequest) -> read
    void write(org.teleal.cling.bridge.auth.HashCredentials,org.jboss.resteasy.client.ClientRequest) -> write
    void write(org.teleal.cling.bridge.auth.AuthCredentials,org.jboss.resteasy.client.ClientRequest) -> write
    org.teleal.cling.bridge.auth.AuthCredentials read(javax.servlet.http.HttpServletRequest) -> read
    boolean isAuthenticated(org.teleal.cling.bridge.auth.AuthCredentials) -> isAuthenticated
    org.teleal.cling.bridge.auth.AuthCredentials getLocalCredentials() -> getLocalCredentials
org.teleal.cling.bridge.gateway.ActionResource -> org.teleal.cling.bridge.gateway.ActionResource:
    java.util.logging.Logger log -> log
    org.teleal.common.xhtml.XHTML browseAll() -> browseAll
    org.teleal.common.xhtml.XHTML browse() -> browse
    javax.ws.rs.core.Response executeAction(javax.ws.rs.core.MultivaluedMap) -> executeAction
    org.teleal.common.xhtml.XHTML executeActionXHTML(javax.ws.rs.core.MultivaluedMap) -> executeActionXHTML
    org.teleal.cling.model.action.ActionInvocation executeInvocation(javax.ws.rs.core.MultivaluedMap,org.teleal.cling.model.meta.Action) -> executeInvocation
    void createForm(org.teleal.common.xhtml.XHTMLElement,org.teleal.cling.model.meta.Action) -> createForm
org.teleal.cling.bridge.gateway.DeviceResource -> org.teleal.cling.bridge.gateway.DeviceResource:
    java.util.logging.Logger log -> log
    org.teleal.common.xhtml.XHTML browseAll() -> browseAll
    org.teleal.common.xhtml.XHTML browse() -> browse
    javax.ws.rs.core.Response retrieveMappedDescriptor() -> retrieveMappedDescriptor
    javax.ws.rs.core.Response retrieveMappedIcon(int) -> retrieveMappedIcon
org.teleal.cling.bridge.gateway.FormActionProcessor -> org.teleal.cling.bridge.gateway.FormActionProcessor:
    java.lang.String NULL_OUTPUT_ARGUMENT_VALUE -> NULL_OUTPUT_ARGUMENT_VALUE
    org.teleal.cling.model.action.ActionInvocation createInvocation(javax.ws.rs.core.MultivaluedMap,org.teleal.cling.model.meta.Action) -> createInvocation
    void appendOutput(org.teleal.cling.model.action.ActionInvocation,javax.ws.rs.core.MultivaluedMap) -> appendOutput
    void appendOutput(org.teleal.cling.model.action.ActionInvocation,org.teleal.common.xhtml.XHTMLElement) -> appendOutput
    void appendFailure(org.teleal.cling.model.action.ActionInvocation,javax.ws.rs.core.MultivaluedMap) -> appendFailure
    void appendFailure(org.teleal.cling.model.action.ActionInvocation,org.teleal.common.xhtml.XHTMLElement) -> appendFailure
    void readOutput(javax.ws.rs.core.MultivaluedMap,org.teleal.cling.model.action.ActionInvocation) -> readOutput
    void readFailure(javax.ws.rs.core.MultivaluedMap,org.teleal.cling.model.action.ActionInvocation) -> readFailure
    javax.ws.rs.core.MultivaluedMap createForm(org.teleal.cling.model.action.ActionInvocation) -> createForm
    java.lang.String createFormString(org.teleal.cling.model.action.ActionInvocation) -> createFormString
    java.lang.String toString(javax.ws.rs.core.MultivaluedMap) -> toString
    javax.ws.rs.core.MultivaluedMap valueOf(java.lang.String) -> valueOf
org.teleal.cling.bridge.gateway.GatewayFilter -> org.teleal.cling.bridge.gateway.GatewayFilter:
    java.util.logging.Logger log -> log
    org.teleal.cling.UpnpService upnpService -> upnpService
    void init(javax.servlet.FilterConfig) -> init
    void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain) -> doFilter
    void destroy() -> destroy
    org.teleal.cling.model.message.StreamRequestMessage convertRequest(javax.servlet.http.HttpServletRequest) -> convertRequest
    void copyResponse(org.teleal.cling.model.message.StreamResponseMessage,javax.servlet.http.HttpServletResponse) -> copyResponse
    java.util.logging.Logger access$000() -> access$000
org.teleal.cling.bridge.gateway.GatewayFilter$1 -> org.teleal.cling.bridge.gateway.GatewayFilter$1:
    boolean processed -> processed
    java.lang.Object entity -> entity
    javax.servlet.http.HttpServletRequest val$request -> val$request
    org.teleal.cling.bridge.gateway.GatewayFilter this$0 -> this$0
    void readEntityIfAvailable() -> readEntityIfAvailable
    boolean hasBody() -> hasBody
    java.lang.Object getBody() -> getBody
org.teleal.cling.bridge.gateway.GatewayServerResource -> org.teleal.cling.bridge.gateway.GatewayServerResource:
    java.util.logging.Logger log -> log
    org.teleal.cling.model.types.ServiceId getRequestedServiceId() -> getRequestedServiceId
    org.teleal.cling.model.meta.Device getRequestedDevice() -> getRequestedDevice
    org.teleal.cling.model.meta.RemoteDevice getRequestedRemoteDevice() -> getRequestedRemoteDevice
    org.teleal.cling.model.meta.Service getRequestedService() -> getRequestedService
    org.teleal.cling.model.meta.RemoteService getRequestedRemoteService() -> getRequestedRemoteService
    org.teleal.cling.model.meta.Action getRequestedAction() -> getRequestedAction
    void representDeviceList(org.teleal.common.xhtml.XHTMLElement,java.util.List) -> representDeviceList
    void representDevice(org.teleal.common.xhtml.XHTMLElement,org.teleal.cling.model.meta.Device) -> representDevice
    void representServices(org.teleal.common.xhtml.XHTMLElement,java.util.Collection) -> representServices
    void representService(org.teleal.common.xhtml.XHTMLElement,org.teleal.cling.model.meta.Service) -> representService
    void representActions(org.teleal.common.xhtml.XHTMLElement,org.teleal.cling.model.meta.Service) -> representActions
org.teleal.cling.bridge.gateway.GatewayServerResource$1 -> org.teleal.cling.bridge.gateway.GatewayServerResource$1:
    org.teleal.cling.bridge.gateway.GatewayServerResource this$0 -> this$0
    int compare(org.teleal.cling.model.meta.Device,org.teleal.cling.model.meta.Device) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
org.teleal.cling.bridge.gateway.RegistryResource -> org.teleal.cling.bridge.gateway.RegistryResource:
    org.teleal.common.xhtml.XHTML represent() -> represent
org.teleal.cling.bridge.gateway.RegistryResource$1 -> org.teleal.cling.bridge.gateway.RegistryResource$1:
    org.teleal.cling.bridge.gateway.RegistryResource this$0 -> this$0
    int compare(org.teleal.cling.model.resource.Resource,org.teleal.cling.model.resource.Resource) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
org.teleal.cling.bridge.gateway.ServiceResource -> org.teleal.cling.bridge.gateway.ServiceResource:
    java.util.logging.Logger log -> log
    org.teleal.common.xhtml.XHTML browseAll() -> browseAll
    org.teleal.common.xhtml.XHTML browseNamespace(java.lang.String) -> browseNamespace
    org.teleal.common.xhtml.XHTML browse() -> browse
    javax.ws.rs.core.Response retrieveMappedDescriptor() -> retrieveMappedDescriptor
org.teleal.cling.bridge.link.Endpoint -> org.teleal.cling.bridge.link.Endpoint:
    java.lang.String id -> id
    java.net.URL callback -> callback
    org.teleal.cling.bridge.auth.AuthCredentials credentials -> credentials
    boolean localOrigin -> localOrigin
    java.lang.String getId() -> getId
    java.net.URL getCallback() -> getCallback
    org.teleal.cling.bridge.auth.AuthCredentials getCredentials() -> getCredentials
    java.lang.String getCallbackString() -> getCallbackString
    boolean isLocalOrigin() -> isLocalOrigin
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
org.teleal.cling.bridge.link.EndpointResource -> org.teleal.cling.bridge.link.EndpointResource:
    java.util.logging.Logger log -> log
    java.net.URL localEndpointURL -> localEndpointURL
    java.net.URL getLocalEndpointURL() -> getLocalEndpointURL
    java.net.URL getRemoteEndpointURL() -> getRemoteEndpointURL
    void maintain(java.util.List,org.teleal.cling.model.ExpirationDetails) -> maintain
    void shutdown() -> shutdown
    org.teleal.cling.bridge.link.LinkManager getLinkManager() -> getLinkManager
    java.util.logging.Logger access$000() -> access$000
org.teleal.cling.bridge.link.EndpointResource$1 -> org.teleal.cling.bridge.link.EndpointResource$1:
    org.teleal.cling.model.ExpirationDetails val$expirationDetails -> val$expirationDetails
    org.teleal.cling.bridge.link.EndpointResource this$0 -> this$0
    void run() -> run
org.teleal.cling.bridge.link.LinkManagementListener -> org.teleal.cling.bridge.link.LinkManagementListener:
    void endpointRegistered(org.teleal.cling.bridge.link.Endpoint) -> endpointRegistered
    void endpointDeregistered(org.teleal.cling.bridge.link.Endpoint) -> endpointDeregistered
org.teleal.cling.bridge.link.LinkManager -> org.teleal.cling.bridge.link.LinkManager:
    java.util.logging.Logger log -> log
    java.lang.String FORM_CALLBACK -> FORM_CALLBACK
    java.lang.String FORM_TIMEOUT -> FORM_TIMEOUT
    java.lang.String FORM_AUTH_HASH -> FORM_AUTH_HASH
    org.teleal.cling.bridge.BridgeUpnpService upnpService -> upnpService
    org.teleal.cling.bridge.link.proxy.ProxyDiscovery deviceDiscovery -> deviceDiscovery
    java.util.Set listeners -> listeners
    org.teleal.cling.bridge.BridgeUpnpService getUpnpService() -> getUpnpService
    org.teleal.cling.bridge.link.proxy.ProxyDiscovery getDeviceDiscovery() -> getDeviceDiscovery
    void addListener(org.teleal.cling.bridge.link.LinkManagementListener) -> addListener
    void removeListener(org.teleal.cling.bridge.link.LinkManagementListener) -> removeListener
    void shutdown() -> shutdown
    boolean register(org.teleal.cling.bridge.link.EndpointResource) -> register
    boolean register(org.teleal.cling.bridge.link.EndpointResource,int) -> register
    boolean registerAndPut(org.teleal.cling.bridge.link.EndpointResource) -> registerAndPut
    boolean registerAndPut(org.teleal.cling.bridge.link.EndpointResource,int) -> registerAndPut
    boolean deregister(org.teleal.cling.bridge.link.EndpointResource) -> deregister
    void deregisterAndDelete(org.teleal.cling.bridge.link.EndpointResource) -> deregisterAndDelete
    java.util.logging.Logger access$000() -> access$000
org.teleal.cling.bridge.link.LinkManager$1 -> org.teleal.cling.bridge.link.LinkManager$1:
    org.teleal.cling.bridge.link.LinkManagementListener val$listener -> val$listener
    org.teleal.cling.bridge.link.EndpointResource val$resource -> val$resource
    org.teleal.cling.bridge.link.LinkManager this$0 -> this$0
    void run() -> run
org.teleal.cling.bridge.link.LinkManager$2 -> org.teleal.cling.bridge.link.LinkManager$2:
    org.teleal.cling.bridge.link.EndpointResource val$resource -> val$resource
    org.teleal.cling.bridge.link.LinkManager this$0 -> this$0
    void run() -> run
org.teleal.cling.bridge.link.LinkManager$3 -> org.teleal.cling.bridge.link.LinkManager$3:
    org.teleal.cling.bridge.link.LinkManagementListener val$listener -> val$listener
    org.teleal.cling.bridge.link.EndpointResource val$resource -> val$resource
    org.teleal.cling.bridge.link.LinkManager this$0 -> this$0
    void run() -> run
org.teleal.cling.bridge.link.LinkManager$4 -> org.teleal.cling.bridge.link.LinkManager$4:
    org.teleal.cling.bridge.link.EndpointResource val$resource -> val$resource
    org.teleal.cling.bridge.link.LinkManager this$0 -> this$0
    void run() -> run
org.teleal.cling.bridge.link.LinkManager$5 -> org.teleal.cling.bridge.link.LinkManager$5:
    org.teleal.cling.bridge.link.LinkManagementListener val$listener -> val$listener
    org.teleal.cling.bridge.link.EndpointResource val$resource -> val$resource
    org.teleal.cling.bridge.link.LinkManager this$0 -> this$0
    void run() -> run
org.teleal.cling.bridge.link.LinkResource -> org.teleal.cling.bridge.link.LinkResource:
    java.util.logging.Logger log -> log
    org.teleal.common.xhtml.XHTML browseAll() -> browseAll
    javax.ws.rs.core.Response update(javax.ws.rs.core.MultivaluedMap) -> update
    javax.ws.rs.core.Response remove() -> remove
    org.teleal.common.xhtml.XHTML executeAction(javax.ws.rs.core.MultivaluedMap) -> executeAction
    org.teleal.cling.bridge.link.EndpointResource getRequestedEndpointResource() -> getRequestedEndpointResource
    org.teleal.cling.bridge.link.EndpointResource getEndpointResource(java.lang.String) -> getEndpointResource
    org.teleal.cling.bridge.link.EndpointResource createEndpointResource(org.teleal.cling.bridge.link.Endpoint) -> createEndpointResource
    org.teleal.common.xhtml.XHTML representEndpoints(java.lang.String[]) -> representEndpoints
    void createForm(org.teleal.common.xhtml.XHTMLElement) -> createForm
    org.teleal.cling.bridge.BridgeUpnpService access$000(org.teleal.cling.bridge.link.LinkResource) -> access$000
org.teleal.cling.bridge.link.LinkResource$1 -> org.teleal.cling.bridge.link.LinkResource$1:
    org.teleal.cling.bridge.link.LinkResource this$0 -> this$0
    org.teleal.cling.bridge.link.LinkManager getLinkManager() -> getLinkManager
org.teleal.cling.bridge.link.proxy.CombinedDescriptorBinder -> org.teleal.cling.bridge.link.proxy.CombinedDescriptorBinder:
    java.util.logging.Logger log -> log
    javax.xml.parsers.DocumentBuilderFactory documentBuilderFactory -> documentBuilderFactory
    javax.xml.parsers.DocumentBuilder documentBuilder -> documentBuilder
    org.teleal.cling.bridge.BridgeUpnpServiceConfiguration configuration -> configuration
    java.lang.String NAMESPACE_URN -> NAMESPACE_URN
    org.teleal.cling.bridge.BridgeUpnpServiceConfiguration getConfiguration() -> getConfiguration
    java.lang.String write(org.teleal.cling.model.meta.Device) -> write
    org.teleal.cling.bridge.link.proxy.ProxyLocalDevice read(java.lang.String,org.teleal.cling.bridge.link.Endpoint) -> read
    org.teleal.cling.bridge.link.proxy.ProxyDeviceIdentity deserializeIdentity(org.w3c.dom.Element,org.teleal.cling.bridge.link.Endpoint) -> deserializeIdentity
    org.teleal.cling.bridge.link.proxy.ProxyLocalDevice describeGraph(org.teleal.cling.bridge.link.proxy.ProxyLocalDevice,java.util.Map,java.util.Map) -> describeGraph
    java.lang.String documentToString(org.w3c.dom.Document) -> documentToString
org.teleal.cling.bridge.link.proxy.CombinedDescriptorBinder$1 -> org.teleal.cling.bridge.link.proxy.CombinedDescriptorBinder$1:
    org.teleal.cling.bridge.link.proxy.ProxyDeviceDescriptorBinder val$deviceDescriptorBinder -> val$deviceDescriptorBinder
    org.teleal.cling.bridge.link.proxy.CombinedDescriptorBinder this$0 -> this$0
    void hydrateBasic(org.teleal.cling.binding.staging.MutableService,org.teleal.cling.model.meta.Service) -> hydrateBasic
org.teleal.cling.bridge.link.proxy.CombinedDescriptorBinder$ATTR -> org.teleal.cling.bridge.link.proxy.CombinedDescriptorBinder$ATTR:
    org.teleal.cling.bridge.link.proxy.CombinedDescriptorBinder$ATTR maxAgeSeconds -> maxAgeSeconds
    org.teleal.cling.bridge.link.proxy.CombinedDescriptorBinder$ATTR serviceId -> serviceId
    org.teleal.cling.bridge.link.proxy.CombinedDescriptorBinder$ATTR iconId -> iconId
    org.teleal.cling.bridge.link.proxy.CombinedDescriptorBinder$ATTR[] $VALUES -> $VALUES
    org.teleal.cling.bridge.link.proxy.CombinedDescriptorBinder$ATTR[] values() -> values
    org.teleal.cling.bridge.link.proxy.CombinedDescriptorBinder$ATTR valueOf(java.lang.String) -> valueOf
org.teleal.cling.bridge.link.proxy.CombinedDescriptorBinder$EL -> org.teleal.cling.bridge.link.proxy.CombinedDescriptorBinder$EL:
    org.teleal.cling.bridge.link.proxy.CombinedDescriptorBinder$EL deviceModel -> deviceModel
    org.teleal.cling.bridge.link.proxy.CombinedDescriptorBinder$EL deviceService -> deviceService
    org.teleal.cling.bridge.link.proxy.CombinedDescriptorBinder$EL deviceIcon -> deviceIcon
    org.teleal.cling.bridge.link.proxy.CombinedDescriptorBinder$EL root -> root
    org.teleal.cling.bridge.link.proxy.CombinedDescriptorBinder$EL scpd -> scpd
    org.teleal.cling.bridge.link.proxy.CombinedDescriptorBinder$EL[] $VALUES -> $VALUES
    org.teleal.cling.bridge.link.proxy.CombinedDescriptorBinder$EL[] values() -> values
    org.teleal.cling.bridge.link.proxy.CombinedDescriptorBinder$EL valueOf(java.lang.String) -> valueOf
org.teleal.cling.bridge.link.proxy.ProxyActionExecutor -> org.teleal.cling.bridge.link.proxy.ProxyActionExecutor:
    java.util.logging.Logger log -> log
    org.teleal.cling.bridge.BridgeUpnpServiceConfiguration configuration -> configuration
    java.net.URL controlURL -> controlURL
    org.teleal.cling.bridge.auth.AuthCredentials credentials -> credentials
    org.teleal.cling.bridge.BridgeUpnpServiceConfiguration getConfiguration() -> getConfiguration
    org.teleal.cling.bridge.gateway.FormActionProcessor getActionProcessor() -> getActionProcessor
    java.net.URL getControlURL() -> getControlURL
    org.teleal.cling.bridge.auth.AuthCredentials getCredentials() -> getCredentials
    void execute(org.teleal.cling.model.action.ActionInvocation) -> execute
org.teleal.cling.bridge.link.proxy.ProxyDeviceDescriptorBinder -> org.teleal.cling.bridge.link.proxy.ProxyDeviceDescriptorBinder:
    java.util.Map serviceCoordinates -> serviceCoordinates
    java.util.Map getServiceCoordinates() -> getServiceCoordinates
    org.teleal.cling.model.meta.Device buildInstance(org.teleal.cling.model.meta.Device,org.teleal.cling.binding.staging.MutableDevice) -> buildInstance
    void storeServiceCoordinates(org.teleal.cling.binding.staging.MutableDevice) -> storeServiceCoordinates
org.teleal.cling.bridge.link.proxy.ProxyDeviceIdentity -> org.teleal.cling.bridge.link.proxy.ProxyDeviceIdentity:
    org.teleal.cling.bridge.link.Endpoint endpoint -> endpoint
    org.teleal.cling.bridge.link.Endpoint getEndpoint() -> getEndpoint
    java.lang.String toString() -> toString
org.teleal.cling.bridge.link.proxy.ProxyDiscovery -> org.teleal.cling.bridge.link.proxy.ProxyDiscovery:
    java.util.logging.Logger log -> log
    org.teleal.cling.bridge.BridgeUpnpService upnpService -> upnpService
    org.teleal.cling.bridge.BridgeUpnpService getUpnpService() -> getUpnpService
    org.teleal.cling.bridge.auth.AuthManager getAuthManager() -> getAuthManager
    void remoteDeviceAdded(org.teleal.cling.registry.Registry,org.teleal.cling.model.meta.RemoteDevice) -> remoteDeviceAdded
    void localDeviceAdded(org.teleal.cling.registry.Registry,org.teleal.cling.model.meta.LocalDevice) -> localDeviceAdded
    void deviceRemoved(org.teleal.cling.registry.Registry,org.teleal.cling.model.meta.Device) -> deviceRemoved
    void putCurrentDevices(org.teleal.cling.bridge.link.Endpoint) -> putCurrentDevices
    boolean putRemoteDevice(org.teleal.cling.bridge.link.Endpoint,org.teleal.cling.model.meta.RemoteDevice) -> putRemoteDevice
    boolean putLocalDevice(org.teleal.cling.bridge.link.Endpoint,org.teleal.cling.model.meta.LocalDevice) -> putLocalDevice
    boolean putProxy(java.lang.String,org.teleal.cling.bridge.auth.AuthCredentials,org.teleal.cling.model.meta.Device) -> putProxy
    boolean deleteDevice(org.teleal.cling.bridge.link.Endpoint,org.teleal.cling.model.meta.Device) -> deleteDevice
    boolean deleteProxy(java.lang.String,org.teleal.cling.bridge.auth.AuthCredentials,org.teleal.cling.model.meta.Device) -> deleteProxy
    org.teleal.cling.model.meta.RemoteDevice prepareRemoteDevice(org.teleal.cling.model.meta.RemoteDevice) -> prepareRemoteDevice
    org.teleal.cling.model.meta.RemoteService prepareRemoteService(org.teleal.cling.model.meta.RemoteService) -> prepareRemoteService
    byte[] retrieveIconData(org.teleal.cling.model.meta.Icon) -> retrieveIconData
    java.lang.String getRemoteProxyURL(org.teleal.cling.bridge.link.Endpoint,org.teleal.cling.model.meta.Device) -> getRemoteProxyURL
org.teleal.cling.bridge.link.proxy.ProxyLocalDevice -> org.teleal.cling.bridge.link.proxy.ProxyLocalDevice:
    org.teleal.cling.bridge.link.proxy.ProxyDeviceIdentity getIdentity() -> getIdentity
    org.teleal.cling.bridge.link.proxy.ProxyLocalDevice newInstance(org.teleal.cling.model.types.UDN,org.teleal.cling.model.meta.UDAVersion,org.teleal.cling.model.types.DeviceType,org.teleal.cling.model.meta.DeviceDetails,org.teleal.cling.model.meta.Icon[],org.teleal.cling.model.meta.LocalService[],java.util.List) -> newInstance
    org.teleal.cling.model.meta.LocalDevice newInstance(org.teleal.cling.model.types.UDN,org.teleal.cling.model.meta.UDAVersion,org.teleal.cling.model.types.DeviceType,org.teleal.cling.model.meta.DeviceDetails,org.teleal.cling.model.meta.Icon[],org.teleal.cling.model.meta.LocalService[],java.util.List) -> newInstance
    org.teleal.cling.model.meta.Device newInstance(org.teleal.cling.model.types.UDN,org.teleal.cling.model.meta.UDAVersion,org.teleal.cling.model.types.DeviceType,org.teleal.cling.model.meta.DeviceDetails,org.teleal.cling.model.meta.Icon[],org.teleal.cling.model.meta.Service[],java.util.List) -> newInstance
    org.teleal.cling.model.meta.DeviceIdentity getIdentity() -> getIdentity
org.teleal.cling.bridge.link.proxy.ProxyLocalService -> org.teleal.cling.bridge.link.proxy.ProxyLocalService:
    java.net.URL eventSubscriptionURL -> eventSubscriptionURL
    java.net.URL getEventSubscriptionURL() -> getEventSubscriptionURL
    org.teleal.cling.model.ServiceManager getManager() -> getManager
org.teleal.cling.bridge.link.proxy.ProxyReceivingSubscribe -> org.teleal.cling.bridge.link.proxy.ProxyReceivingSubscribe:
    java.util.logging.Logger log -> log
    org.teleal.cling.bridge.link.proxy.ProxyLocalService proxyService -> proxyService
    org.teleal.cling.bridge.link.proxy.ProxyLocalService getProxyService() -> getProxyService
    org.teleal.cling.model.message.gena.OutgoingSubscribeResponseMessage executeSync() -> executeSync
    org.teleal.cling.model.message.StreamResponseMessage executeSync() -> executeSync
org.teleal.cling.bridge.link.proxy.ProxyResource -> org.teleal.cling.bridge.link.proxy.ProxyResource:
    java.util.logging.Logger log -> log
    javax.ws.rs.core.Response storeProxy(java.lang.String) -> storeProxy
    javax.ws.rs.core.Response removeProxy() -> removeProxy
org.teleal.cling.bridge.link.proxy.ProxyServiceCoordinates -> org.teleal.cling.bridge.link.proxy.ProxyServiceCoordinates:
    java.net.URI descriptorURI -> descriptorURI
    java.net.URI controlURI -> controlURI
    java.net.URI eventSubscriptionURI -> eventSubscriptionURI
    java.net.URI getDescriptorURI() -> getDescriptorURI
    java.net.URI getControlURI() -> getControlURI
    java.net.URI getEventSubscriptionURI() -> getEventSubscriptionURI
org.teleal.cling.bridge.link.proxy.ProxyServiceDescriptorBinder -> org.teleal.cling.bridge.link.proxy.ProxyServiceDescriptorBinder:
    java.util.logging.Logger log -> log
    org.teleal.cling.bridge.BridgeUpnpServiceConfiguration configuration -> configuration
    org.teleal.cling.bridge.link.Endpoint endpoint -> endpoint
    org.teleal.cling.bridge.BridgeUpnpServiceConfiguration getConfiguration() -> getConfiguration
    org.teleal.cling.bridge.link.Endpoint getEndpoint() -> getEndpoint
    org.teleal.cling.model.meta.LocalService buildInstance(org.teleal.cling.model.meta.Service,org.teleal.cling.binding.staging.MutableService) -> buildInstance
    java.util.Map getActionExecutors(org.teleal.cling.model.meta.Action[],java.net.URL) -> getActionExecutors
    java.util.Map getStateVariableAccessors(org.teleal.cling.model.meta.StateVariable[]) -> getStateVariableAccessors
    org.teleal.cling.model.meta.Service buildInstance(org.teleal.cling.model.meta.Service,org.teleal.cling.binding.staging.MutableService) -> buildInstance
org.teleal.cling.bridge.link.proxy.ProxyServiceDescriptorBinder$1 -> org.teleal.cling.bridge.link.proxy.ProxyServiceDescriptorBinder$1:
    org.teleal.cling.bridge.link.proxy.ProxyServiceDescriptorBinder this$0 -> this$0
    java.lang.Class getReturnType() -> getReturnType
    java.lang.Object read(java.lang.Object) -> read
org.teleal.cling.bridge.provider.BridgeProvider -> org.teleal.cling.bridge.provider.BridgeProvider:
    javax.servlet.ServletContext servletContext -> servletContext
    javax.servlet.ServletContext getServletContext() -> getServletContext
    org.teleal.cling.bridge.BridgeUpnpService getUpnpService() -> getUpnpService
org.teleal.cling.bridge.provider.XHTMLBodyWriter -> org.teleal.cling.bridge.provider.XHTMLBodyWriter:
    boolean isWriteable(java.lang.Class,java.lang.reflect.Type,java.lang.annotation.Annotation[],javax.ws.rs.core.MediaType) -> isWriteable
    long getSize(org.teleal.common.xhtml.XHTML,java.lang.Class,java.lang.reflect.Type,java.lang.annotation.Annotation[],javax.ws.rs.core.MediaType) -> getSize
    void writeTo(org.teleal.common.xhtml.XHTML,java.lang.Class,java.lang.reflect.Type,java.lang.annotation.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.OutputStream) -> writeTo
    void writeTo(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.annotation.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.OutputStream) -> writeTo
    long getSize(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.annotation.Annotation[],javax.ws.rs.core.MediaType) -> getSize
org.teleal.cling.controlpoint.ActionCallback -> org.teleal.cling.controlpoint.ActionCallback:
    org.teleal.cling.model.action.ActionInvocation actionInvocation -> actionInvocation
    org.teleal.cling.controlpoint.ControlPoint controlPoint -> controlPoint
    org.teleal.cling.model.action.ActionInvocation getActionInvocation() -> getActionInvocation
    org.teleal.cling.controlpoint.ControlPoint getControlPoint() -> getControlPoint
    org.teleal.cling.controlpoint.ActionCallback setControlPoint(org.teleal.cling.controlpoint.ControlPoint) -> setControlPoint
    void run() -> run
    java.lang.String createDefaultFailureMessage(org.teleal.cling.model.action.ActionInvocation,org.teleal.cling.model.message.UpnpResponse) -> createDefaultFailureMessage
    void failure(org.teleal.cling.model.action.ActionInvocation,org.teleal.cling.model.message.UpnpResponse) -> failure
    void success(org.teleal.cling.model.action.ActionInvocation) -> success
    void failure(org.teleal.cling.model.action.ActionInvocation,org.teleal.cling.model.message.UpnpResponse,java.lang.String) -> failure
    java.lang.String toString() -> toString
org.teleal.cling.controlpoint.ActionCallback$Default -> org.teleal.cling.controlpoint.ActionCallback$Default:
    void success(org.teleal.cling.model.action.ActionInvocation) -> success
    void failure(org.teleal.cling.model.action.ActionInvocation,org.teleal.cling.model.message.UpnpResponse,java.lang.String) -> failure
org.teleal.cling.controlpoint.ControlPoint -> org.teleal.cling.controlpoint.ControlPoint:
    org.teleal.cling.UpnpServiceConfiguration getConfiguration() -> getConfiguration
    org.teleal.cling.protocol.ProtocolFactory getProtocolFactory() -> getProtocolFactory
    org.teleal.cling.registry.Registry getRegistry() -> getRegistry
    void search() -> search
    void search(org.teleal.cling.model.message.header.UpnpHeader) -> search
    void search(int) -> search
    void search(org.teleal.cling.model.message.header.UpnpHeader,int) -> search
    void execute(org.teleal.cling.controlpoint.ActionCallback) -> execute
    void execute(org.teleal.cling.controlpoint.SubscriptionCallback) -> execute
org.teleal.cling.controlpoint.ControlPointImpl -> org.teleal.cling.controlpoint.ControlPointImpl:
    java.util.logging.Logger log -> log
    org.teleal.cling.UpnpServiceConfiguration configuration -> configuration
    org.teleal.cling.protocol.ProtocolFactory protocolFactory -> protocolFactory
    org.teleal.cling.registry.Registry registry -> registry
    org.teleal.cling.UpnpServiceConfiguration getConfiguration() -> getConfiguration
    org.teleal.cling.protocol.ProtocolFactory getProtocolFactory() -> getProtocolFactory
    org.teleal.cling.registry.Registry getRegistry() -> getRegistry
    void search() -> search
    void search(org.teleal.cling.model.message.header.UpnpHeader) -> search
    void search(int) -> search
    void search(org.teleal.cling.model.message.header.UpnpHeader,int) -> search
    void execute(org.teleal.cling.controlpoint.ActionCallback) -> execute
    void execute(org.teleal.cling.controlpoint.SubscriptionCallback) -> execute
org.teleal.cling.controlpoint.SubscriptionCallback -> org.teleal.cling.controlpoint.SubscriptionCallback:
    java.util.logging.Logger log -> log
    org.teleal.cling.model.meta.Service service -> service
    java.lang.Integer requestedDurationSeconds -> requestedDurationSeconds
    org.teleal.cling.controlpoint.ControlPoint controlPoint -> controlPoint
    org.teleal.cling.model.gena.GENASubscription subscription -> subscription
    org.teleal.cling.model.meta.Service getService() -> getService
    org.teleal.cling.controlpoint.ControlPoint getControlPoint() -> getControlPoint
    void setControlPoint(org.teleal.cling.controlpoint.ControlPoint) -> setControlPoint
    org.teleal.cling.model.gena.GENASubscription getSubscription() -> getSubscription
    void setSubscription(org.teleal.cling.model.gena.GENASubscription) -> setSubscription
    void run() -> run
    void establishLocalSubscription(org.teleal.cling.model.meta.LocalService) -> establishLocalSubscription
    void establishRemoteSubscription(org.teleal.cling.model.meta.RemoteService) -> establishRemoteSubscription
    void end() -> end
    void endLocalSubscription(org.teleal.cling.model.gena.LocalGENASubscription) -> endLocalSubscription
    void endRemoteSubscription(org.teleal.cling.model.gena.RemoteGENASubscription) -> endRemoteSubscription
    void failed(org.teleal.cling.model.gena.GENASubscription,org.teleal.cling.model.message.UpnpResponse,java.lang.Exception) -> failed
    void failed(org.teleal.cling.model.gena.GENASubscription,org.teleal.cling.model.message.UpnpResponse,java.lang.Exception,java.lang.String) -> failed
    void established(org.teleal.cling.model.gena.GENASubscription) -> established
    void ended(org.teleal.cling.model.gena.GENASubscription,org.teleal.cling.model.gena.CancelReason,org.teleal.cling.model.message.UpnpResponse) -> ended
    void eventReceived(org.teleal.cling.model.gena.GENASubscription) -> eventReceived
    void eventsMissed(org.teleal.cling.model.gena.GENASubscription,int) -> eventsMissed
    java.lang.String createDefaultFailureMessage(org.teleal.cling.model.message.UpnpResponse,java.lang.Exception) -> createDefaultFailureMessage
    java.lang.String toString() -> toString
org.teleal.cling.controlpoint.SubscriptionCallback$1 -> org.teleal.cling.controlpoint.SubscriptionCallback$1:
    org.teleal.cling.controlpoint.SubscriptionCallback this$0 -> this$0
    void failed(java.lang.Exception) -> failed
    void established() -> established
    void ended(org.teleal.cling.model.gena.CancelReason) -> ended
    void eventReceived() -> eventReceived
org.teleal.cling.controlpoint.SubscriptionCallback$2 -> org.teleal.cling.controlpoint.SubscriptionCallback$2:
    org.teleal.cling.controlpoint.SubscriptionCallback this$0 -> this$0
    void failed(org.teleal.cling.model.message.UpnpResponse) -> failed
    void established() -> established
    void ended(org.teleal.cling.model.gena.CancelReason,org.teleal.cling.model.message.UpnpResponse) -> ended
    void eventReceived() -> eventReceived
    void eventsMissed(int) -> eventsMissed
org.teleal.cling.mock.MockUpnpService -> org.teleal.cling.mock.MockUpnpService:
    org.teleal.cling.UpnpServiceConfiguration configuration -> configuration
    org.teleal.cling.controlpoint.ControlPoint controlPoint -> controlPoint
    org.teleal.cling.protocol.ProtocolFactory protocolFactory -> protocolFactory
    org.teleal.cling.registry.Registry registry -> registry
    org.teleal.cling.transport.Router router -> router
    org.teleal.cling.transport.spi.NetworkAddressFactory networkAddressFactory -> networkAddressFactory
    java.util.List incomingDatagramMessages -> incomingDatagramMessages
    java.util.List outgoingDatagramMessages -> outgoingDatagramMessages
    java.util.List receivedUpnpStreams -> receivedUpnpStreams
    java.util.List sentStreamRequestMessages -> sentStreamRequestMessages
    java.util.List broadcastedBytes -> broadcastedBytes
    org.teleal.cling.protocol.ProtocolFactory createProtocolFactory(org.teleal.cling.UpnpService,boolean) -> createProtocolFactory
    org.teleal.cling.transport.Router createRouter() -> createRouter
    org.teleal.cling.UpnpServiceConfiguration getConfiguration() -> getConfiguration
    org.teleal.cling.controlpoint.ControlPoint getControlPoint() -> getControlPoint
    org.teleal.cling.protocol.ProtocolFactory getProtocolFactory() -> getProtocolFactory
    org.teleal.cling.registry.Registry getRegistry() -> getRegistry
    org.teleal.cling.transport.Router getRouter() -> getRouter
    void shutdown() -> shutdown
    java.util.List getIncomingDatagramMessages() -> getIncomingDatagramMessages
    java.util.List getOutgoingDatagramMessages() -> getOutgoingDatagramMessages
    java.util.List getReceivedUpnpStreams() -> getReceivedUpnpStreams
    java.util.List getSentStreamRequestMessages() -> getSentStreamRequestMessages
    java.util.List getBroadcastedBytes() -> getBroadcastedBytes
    org.teleal.cling.model.message.StreamResponseMessage[] getStreamResponseMessages() -> getStreamResponseMessages
    org.teleal.cling.model.message.StreamResponseMessage getStreamResponseMessage(org.teleal.cling.model.message.StreamRequestMessage) -> getStreamResponseMessage
    java.util.List access$100(org.teleal.cling.mock.MockUpnpService) -> access$100
    java.util.List access$200(org.teleal.cling.mock.MockUpnpService) -> access$200
    java.util.List access$300(org.teleal.cling.mock.MockUpnpService) -> access$300
    java.util.List access$400(org.teleal.cling.mock.MockUpnpService) -> access$400
    java.util.List access$500(org.teleal.cling.mock.MockUpnpService) -> access$500
org.teleal.cling.mock.MockUpnpService$1 -> org.teleal.cling.mock.MockUpnpService$1:
    boolean val$maintainsRegistry -> val$maintainsRegistry
    boolean val$multiThreaded -> val$multiThreaded
    org.teleal.cling.mock.MockUpnpService this$0 -> this$0
    org.teleal.cling.transport.spi.NetworkAddressFactory createNetworkAddressFactory(int) -> createNetworkAddressFactory
    java.util.concurrent.Executor getRegistryMaintainerExecutor() -> getRegistryMaintainerExecutor
    java.util.concurrent.Executor createDefaultExecutor() -> createDefaultExecutor
org.teleal.cling.mock.MockUpnpService$1$1 -> org.teleal.cling.mock.MockUpnpService$1$1:
    org.teleal.cling.mock.MockUpnpService$1 this$1 -> this$1
    boolean isUsableNetworkInterface(java.net.NetworkInterface) -> isUsableNetworkInterface
    boolean isUsableAddress(java.net.NetworkInterface,java.net.InetAddress) -> isUsableAddress
org.teleal.cling.mock.MockUpnpService$1$2 -> org.teleal.cling.mock.MockUpnpService$1$2:
    org.teleal.cling.mock.MockUpnpService$1 this$1 -> this$1
    void execute(java.lang.Runnable) -> execute
org.teleal.cling.mock.MockUpnpService$1$3 -> org.teleal.cling.mock.MockUpnpService$1$3:
    org.teleal.cling.mock.MockUpnpService$1 this$1 -> this$1
    void execute(java.lang.Runnable) -> execute
org.teleal.cling.mock.MockUpnpService$2 -> org.teleal.cling.mock.MockUpnpService$2:
    boolean val$maintainsRegistry -> val$maintainsRegistry
    org.teleal.cling.mock.MockUpnpService this$0 -> this$0
    org.teleal.cling.registry.RegistryMaintainer createRegistryMaintainer() -> createRegistryMaintainer
org.teleal.cling.mock.MockUpnpService$MockProtocolFactory -> org.teleal.cling.mock.MockUpnpService$MockProtocolFactory:
    boolean sendsAlive -> sendsAlive
    org.teleal.cling.protocol.async.SendingNotificationAlive createSendingNotificationAlive(org.teleal.cling.model.meta.LocalDevice) -> createSendingNotificationAlive
    org.teleal.cling.protocol.async.SendingSearch createSendingSearch(org.teleal.cling.model.message.header.UpnpHeader,int) -> createSendingSearch
    boolean access$000(org.teleal.cling.mock.MockUpnpService$MockProtocolFactory) -> access$000
org.teleal.cling.mock.MockUpnpService$MockProtocolFactory$1 -> org.teleal.cling.mock.MockUpnpService$MockProtocolFactory$1:
    org.teleal.cling.mock.MockUpnpService$MockProtocolFactory this$0 -> this$0
    void execute() -> execute
org.teleal.cling.mock.MockUpnpService$MockProtocolFactory$2 -> org.teleal.cling.mock.MockUpnpService$MockProtocolFactory$2:
    org.teleal.cling.mock.MockUpnpService$MockProtocolFactory this$0 -> this$0
    int getBulkIntervalMilliseconds() -> getBulkIntervalMilliseconds
org.teleal.cling.mock.MockUpnpService$MockRouter -> org.teleal.cling.mock.MockUpnpService$MockRouter:
    int counter -> counter
    org.teleal.cling.mock.MockUpnpService this$0 -> this$0
    org.teleal.cling.UpnpServiceConfiguration getConfiguration() -> getConfiguration
    org.teleal.cling.protocol.ProtocolFactory getProtocolFactory() -> getProtocolFactory
    org.teleal.cling.transport.spi.StreamClient getStreamClient() -> getStreamClient
    org.teleal.cling.transport.spi.NetworkAddressFactory getNetworkAddressFactory() -> getNetworkAddressFactory
    java.util.List getActiveStreamServers(java.net.InetAddress) -> getActiveStreamServers
    void shutdown() -> shutdown
    void received(org.teleal.cling.model.message.IncomingDatagramMessage) -> received
    void received(org.teleal.cling.transport.spi.UpnpStream) -> received
    void send(org.teleal.cling.model.message.OutgoingDatagramMessage) -> send
    org.teleal.cling.model.message.StreamResponseMessage send(org.teleal.cling.model.message.StreamRequestMessage) -> send
    void broadcast(byte[]) -> broadcast
org.teleal.cling.model.Command -> org.teleal.cling.model.Command:
    void execute(org.teleal.cling.model.ServiceManager) -> execute
org.teleal.cling.model.Constants -> org.teleal.cling.model.Constants:
    int UPNP_MULTICAST_PORT -> UPNP_MULTICAST_PORT
    java.lang.String IPV4_UPNP_MULTICAST_GROUP -> IPV4_UPNP_MULTICAST_GROUP
    java.lang.String IPV6_UPNP_LINK_LOCAL_ADDRESS -> IPV6_UPNP_LINK_LOCAL_ADDRESS
    java.lang.String IPV6_UPNP_SUBNET_ADDRESS -> IPV6_UPNP_SUBNET_ADDRESS
    java.lang.String IPV6_UPNP_ADMINISTRATIVE_ADDRESS -> IPV6_UPNP_ADMINISTRATIVE_ADDRESS
    java.lang.String IPV6_UPNP_SITE_LOCAL_ADDRESS -> IPV6_UPNP_SITE_LOCAL_ADDRESS
    java.lang.String IPV6_UPNP_GLOBAL_ADDRESS -> IPV6_UPNP_GLOBAL_ADDRESS
    java.lang.String PRODUCT_TOKEN_NAME -> PRODUCT_TOKEN_NAME
    java.lang.String PRODUCT_TOKEN_VERSION -> PRODUCT_TOKEN_VERSION
    int MIN_ADVERTISEMENT_AGE_SECONDS -> MIN_ADVERTISEMENT_AGE_SECONDS
    int DEFAULT_SUBSCRIPTION_DURATION_SECONDS -> DEFAULT_SUBSCRIPTION_DURATION_SECONDS
    java.lang.String REGEX_NAMESPACE -> REGEX_NAMESPACE
    java.lang.String REGEX_TYPE -> REGEX_TYPE
    java.lang.String REGEX_ID -> REGEX_ID
    java.lang.String REGEX_UDA_NAME -> REGEX_UDA_NAME
    java.lang.String SOAP_NS_ENVELOPE -> SOAP_NS_ENVELOPE
    java.lang.String SOAP_URI_ENCODING_STYLE -> SOAP_URI_ENCODING_STYLE
    java.lang.String NS_UPNP_CONTROL_10 -> NS_UPNP_CONTROL_10
    java.lang.String NS_UPNP_EVENT_10 -> NS_UPNP_EVENT_10
    java.lang.String ARG_TYPE_PREFIX -> ARG_TYPE_PREFIX
org.teleal.cling.model.DefaultServiceManager -> org.teleal.cling.model.DefaultServiceManager:
    java.util.logging.Logger log -> log
    org.teleal.cling.model.meta.LocalService service -> service
    java.lang.Class serviceClass -> serviceClass
    java.util.concurrent.locks.ReentrantLock lock -> lock
    java.lang.Object serviceImpl -> serviceImpl
    java.beans.PropertyChangeSupport propertyChangeSupport -> propertyChangeSupport
    void lock() -> lock
    void unlock() -> unlock
    int getLockTimeoutMillis() -> getLockTimeoutMillis
    org.teleal.cling.model.meta.LocalService getService() -> getService
    java.lang.Object getImplementation() -> getImplementation
    java.beans.PropertyChangeSupport getPropertyChangeSupport() -> getPropertyChangeSupport
    void execute(org.teleal.cling.model.Command) -> execute
    java.util.Collection readEventedStateVariableValues() -> readEventedStateVariableValues
    void init() -> init
    java.lang.Object createServiceInstance() -> createServiceInstance
    java.beans.PropertyChangeSupport createPropertyChangeSupport(java.lang.Object) -> createPropertyChangeSupport
    java.beans.PropertyChangeListener createPropertyChangeListener(java.lang.Object) -> createPropertyChangeListener
    java.lang.String toString() -> toString
    java.util.logging.Logger access$000() -> access$000
org.teleal.cling.model.DefaultServiceManager$DefaultPropertyChangeListener -> org.teleal.cling.model.DefaultServiceManager$DefaultPropertyChangeListener:
    org.teleal.cling.model.DefaultServiceManager this$0 -> this$0
    void propertyChange(java.beans.PropertyChangeEvent) -> propertyChange
org.teleal.cling.model.ExpirationDetails -> org.teleal.cling.model.ExpirationDetails:
    int UNLIMITED_AGE -> UNLIMITED_AGE
    int maxAgeSeconds -> maxAgeSeconds
    long lastRefreshTimestampSeconds -> lastRefreshTimestampSeconds
    java.lang.String simpleName -> simpleName
    int getMaxAgeSeconds() -> getMaxAgeSeconds
    long getLastRefreshTimestampSeconds() -> getLastRefreshTimestampSeconds
    void setLastRefreshTimestampSeconds(long) -> setLastRefreshTimestampSeconds
    void stampLastRefresh() -> stampLastRefresh
    boolean hasExpired() -> hasExpired
    boolean hasExpired(boolean) -> hasExpired
    long getSecondsUntilExpiration() -> getSecondsUntilExpiration
    long getCurrentTimestampSeconds() -> getCurrentTimestampSeconds
    java.lang.String toString() -> toString
org.teleal.cling.model.Location -> org.teleal.cling.model.Location:
    org.teleal.cling.model.NetworkAddress networkAddress -> networkAddress
    java.net.URI path -> path
    org.teleal.cling.model.NetworkAddress getNetworkAddress() -> getNetworkAddress
    java.net.URI getPath() -> getPath
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.net.URL getURL() -> getURL
org.teleal.cling.model.ModelUtil -> org.teleal.cling.model.ModelUtil:
    boolean ANDROID_RUNTIME -> ANDROID_RUNTIME
    boolean ANDROID_EMULATOR -> ANDROID_EMULATOR
    boolean isStringConvertibleType(java.util.Set,java.lang.Class) -> isStringConvertibleType
    boolean isValidUDAName(java.lang.String) -> isValidUDAName
    java.net.InetAddress getInetAddressByName(java.lang.String) -> getInetAddressByName
    java.lang.String toCommaSeparatedList(java.lang.Object[]) -> toCommaSeparatedList
    java.lang.String toCommaSeparatedList(java.lang.Object[],boolean,boolean) -> toCommaSeparatedList
    java.lang.String[] fromCommaSeparatedList(java.lang.String) -> fromCommaSeparatedList
    java.lang.String[] fromCommaSeparatedList(java.lang.String,boolean) -> fromCommaSeparatedList
    java.lang.String toTimeString(long) -> toTimeString
    long fromTimeString(java.lang.String) -> fromTimeString
    java.lang.String commaToNewline(java.lang.String) -> commaToNewline
    java.lang.String getLocalHostName(boolean) -> getLocalHostName
    byte[] getFirstNetworkInterfaceHardwareAddress() -> getFirstNetworkInterfaceHardwareAddress
org.teleal.cling.model.Namespace -> org.teleal.cling.model.Namespace:
    java.util.logging.Logger log -> log
    java.lang.String DEVICE -> DEVICE
    java.lang.String SERVICE -> SERVICE
    java.lang.String CONTROL -> CONTROL
    java.lang.String EVENTS -> EVENTS
    java.lang.String DESCRIPTOR_FILE -> DESCRIPTOR_FILE
    java.lang.String CALLBACK_FILE -> CALLBACK_FILE
    java.net.URI basePath -> basePath
    java.net.URI getBasePath() -> getBasePath
    java.net.URI getPath(org.teleal.cling.model.meta.Device) -> getPath
    java.net.URI getPath(org.teleal.cling.model.meta.Service) -> getPath
    java.net.URI getDescriptorPath(org.teleal.cling.model.meta.Device) -> getDescriptorPath
    java.net.URI getDescriptorPath(org.teleal.cling.model.meta.Service) -> getDescriptorPath
    java.net.URI getControlPath(org.teleal.cling.model.meta.Service) -> getControlPath
    java.net.URI getEventSubscriptionPath(org.teleal.cling.model.meta.Service) -> getEventSubscriptionPath
    java.net.URI getEventCallbackPath(org.teleal.cling.model.meta.Service) -> getEventCallbackPath
    java.net.URI prefixIfRelative(org.teleal.cling.model.meta.Device,java.net.URI) -> prefixIfRelative
    boolean isControlPath(java.net.URI) -> isControlPath
    boolean isEventSubscriptionPath(java.net.URI) -> isEventSubscriptionPath
    boolean isEventCallbackPath(java.net.URI) -> isEventCallbackPath
    org.teleal.cling.model.resource.Resource[] getResources(org.teleal.cling.model.meta.Device) -> getResources
org.teleal.cling.model.NetworkAddress -> org.teleal.cling.model.NetworkAddress:
    java.net.InetAddress address -> address
    int port -> port
    byte[] hardwareAddress -> hardwareAddress
    java.net.InetAddress getAddress() -> getAddress
    int getPort() -> getPort
    byte[] getHardwareAddress() -> getHardwareAddress
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
org.teleal.cling.model.ServerClientTokens -> org.teleal.cling.model.ServerClientTokens:
    java.lang.String UNKNOWN_PLACEHOLDER -> UNKNOWN_PLACEHOLDER
    int majorVersion -> majorVersion
    int minorVersion -> minorVersion
    java.lang.String osName -> osName
    java.lang.String osVersion -> osVersion
    java.lang.String productName -> productName
    java.lang.String productVersion -> productVersion
    int getMajorVersion() -> getMajorVersion
    void setMajorVersion(int) -> setMajorVersion
    int getMinorVersion() -> getMinorVersion
    void setMinorVersion(int) -> setMinorVersion
    java.lang.String getOsName() -> getOsName
    void setOsName(java.lang.String) -> setOsName
    java.lang.String getOsVersion() -> getOsVersion
    void setOsVersion(java.lang.String) -> setOsVersion
    java.lang.String getProductName() -> getProductName
    void setProductName(java.lang.String) -> setProductName
    java.lang.String getProductVersion() -> getProductVersion
    void setProductVersion(java.lang.String) -> setProductVersion
    java.lang.String toString() -> toString
    java.lang.String getHttpToken() -> getHttpToken
    java.lang.String getOsToken() -> getOsToken
    java.lang.String getProductToken() -> getProductToken
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
org.teleal.cling.model.ServiceManager -> org.teleal.cling.model.ServiceManager:
    java.lang.String EVENTED_STATE_VARIABLES -> EVENTED_STATE_VARIABLES
    org.teleal.cling.model.meta.LocalService getService() -> getService
    java.lang.Object getImplementation() -> getImplementation
    void execute(org.teleal.cling.model.Command) -> execute
    java.beans.PropertyChangeSupport getPropertyChangeSupport() -> getPropertyChangeSupport
    java.util.Collection readEventedStateVariableValues() -> readEventedStateVariableValues
org.teleal.cling.model.ServiceReference -> org.teleal.cling.model.ServiceReference:
    java.lang.String DELIMITER -> DELIMITER
    org.teleal.cling.model.types.UDN udn -> udn
    org.teleal.cling.model.types.ServiceId serviceId -> serviceId
    org.teleal.cling.model.types.UDN getUdn() -> getUdn
    org.teleal.cling.model.types.ServiceId getServiceId() -> getServiceId
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
org.teleal.cling.model.Validatable -> org.teleal.cling.model.Validatable:
    java.util.List validate() -> validate
org.teleal.cling.model.ValidationError -> org.teleal.cling.model.ValidationError:
    java.lang.Class clazz -> clazz
    java.lang.String propertyName -> propertyName
    java.lang.String message -> message
    java.lang.Class getClazz() -> getClazz
    java.lang.String getPropertyName() -> getPropertyName
    java.lang.String getMessage() -> getMessage
    java.lang.String toString() -> toString
org.teleal.cling.model.ValidationException -> org.teleal.cling.model.ValidationException:
    java.util.List errors -> errors
    java.util.List getErrors() -> getErrors
org.teleal.cling.model.VariableValue -> org.teleal.cling.model.VariableValue:
    org.teleal.cling.model.types.Datatype datatype -> datatype
    java.lang.Object value -> value
    org.teleal.cling.model.types.Datatype getDatatype() -> getDatatype
    java.lang.Object getValue() -> getValue
    boolean isValidXMLString(java.lang.String) -> isValidXMLString
    java.lang.String toString() -> toString
org.teleal.cling.model.XMLUtil -> org.teleal.cling.model.XMLUtil:
    java.lang.String documentToString(org.w3c.dom.Document) -> documentToString
    java.lang.String documentToString(org.w3c.dom.Document,boolean) -> documentToString
    java.lang.String documentToFragmentString(org.w3c.dom.Document) -> documentToFragmentString
    java.lang.String nodeToString(org.w3c.dom.Node,java.util.Set,java.lang.String) -> nodeToString
    java.lang.String encodeText(java.lang.String) -> encodeText
    org.w3c.dom.Element appendNewElement(org.w3c.dom.Document,org.w3c.dom.Element,java.lang.Enum) -> appendNewElement
    org.w3c.dom.Element appendNewElement(org.w3c.dom.Document,org.w3c.dom.Element,java.lang.String) -> appendNewElement
    org.w3c.dom.Element appendNewElementIfNotNull(org.w3c.dom.Document,org.w3c.dom.Element,java.lang.Enum,java.lang.Object) -> appendNewElementIfNotNull
    org.w3c.dom.Element appendNewElementIfNotNull(org.w3c.dom.Document,org.w3c.dom.Element,java.lang.Enum,java.lang.Object,java.lang.String) -> appendNewElementIfNotNull
    org.w3c.dom.Element appendNewElementIfNotNull(org.w3c.dom.Document,org.w3c.dom.Element,java.lang.String,java.lang.Object) -> appendNewElementIfNotNull
    org.w3c.dom.Element appendNewElementIfNotNull(org.w3c.dom.Document,org.w3c.dom.Element,java.lang.String,java.lang.Object,java.lang.String) -> appendNewElementIfNotNull
    org.w3c.dom.Element appendNewElement(org.w3c.dom.Document,org.w3c.dom.Element,java.lang.String,java.lang.Object) -> appendNewElement
    org.w3c.dom.Element appendNewElement(org.w3c.dom.Document,org.w3c.dom.Element,java.lang.String,java.lang.Object,java.lang.String) -> appendNewElement
    java.lang.String getTextContent(org.w3c.dom.Node) -> getTextContent
org.teleal.cling.model.action.AbstractActionExecutor -> org.teleal.cling.model.action.AbstractActionExecutor:
    java.util.logging.Logger log -> log
    java.util.Map outputArgumentAccessors -> outputArgumentAccessors
    java.util.Map getOutputArgumentAccessors() -> getOutputArgumentAccessors
    void execute(org.teleal.cling.model.action.ActionInvocation) -> execute
    void execute(org.teleal.cling.model.action.ActionInvocation,java.lang.Object) -> execute
    java.lang.Object readOutputArgumentValues(org.teleal.cling.model.meta.Action,java.lang.Object) -> readOutputArgumentValues
    void setOutputArgumentValue(org.teleal.cling.model.action.ActionInvocation,org.teleal.cling.model.meta.ActionArgument,java.lang.Object) -> setOutputArgumentValue
org.teleal.cling.model.action.AbstractActionExecutor$1 -> org.teleal.cling.model.action.AbstractActionExecutor$1:
    org.teleal.cling.model.action.ActionInvocation val$actionInvocation -> val$actionInvocation
    org.teleal.cling.model.action.AbstractActionExecutor this$0 -> this$0
    void execute(org.teleal.cling.model.ServiceManager) -> execute
    java.lang.String toString() -> toString
org.teleal.cling.model.action.ActionArgumentValue -> org.teleal.cling.model.action.ActionArgumentValue:
    org.teleal.cling.model.meta.ActionArgument argument -> argument
    org.teleal.cling.model.meta.ActionArgument getArgument() -> getArgument
org.teleal.cling.model.action.ActionException -> org.teleal.cling.model.action.ActionException:
    int errorCode -> errorCode
    int getErrorCode() -> getErrorCode
org.teleal.cling.model.action.ActionExecutor -> org.teleal.cling.model.action.ActionExecutor:
    void execute(org.teleal.cling.model.action.ActionInvocation) -> execute
org.teleal.cling.model.action.ActionInvocation -> org.teleal.cling.model.action.ActionInvocation:
    org.teleal.cling.model.meta.Action action -> action
    java.util.Map input -> input
    java.util.Map output -> output
    org.teleal.cling.model.action.ActionException failure -> failure
    org.teleal.cling.model.meta.Action getAction() -> getAction
    org.teleal.cling.model.action.ActionArgumentValue[] getInput() -> getInput
    org.teleal.cling.model.action.ActionArgumentValue getInput(java.lang.String) -> getInput
    org.teleal.cling.model.action.ActionArgumentValue getInput(org.teleal.cling.model.meta.ActionArgument) -> getInput
    java.util.Map getInputMap() -> getInputMap
    org.teleal.cling.model.action.ActionArgumentValue[] getOutput() -> getOutput
    org.teleal.cling.model.action.ActionArgumentValue getOutput(java.lang.String) -> getOutput
    java.util.Map getOutputMap() -> getOutputMap
    org.teleal.cling.model.action.ActionArgumentValue getOutput(org.teleal.cling.model.meta.ActionArgument) -> getOutput
    void setInput(java.lang.String,java.lang.Object) -> setInput
    void setInput(org.teleal.cling.model.action.ActionArgumentValue) -> setInput
    void setInput(org.teleal.cling.model.action.ActionArgumentValue[]) -> setInput
    void setOutput(java.lang.String,java.lang.Object) -> setOutput
    void setOutput(org.teleal.cling.model.action.ActionArgumentValue) -> setOutput
    void setOutput(org.teleal.cling.model.action.ActionArgumentValue[]) -> setOutput
    org.teleal.cling.model.meta.ActionArgument getInputArgument(java.lang.String) -> getInputArgument
    org.teleal.cling.model.meta.ActionArgument getOutputArgument(java.lang.String) -> getOutputArgument
    org.teleal.cling.model.action.ActionException getFailure() -> getFailure
    void setFailure(org.teleal.cling.model.action.ActionException) -> setFailure
    java.lang.String toString() -> toString
org.teleal.cling.model.action.MethodActionExecutor -> org.teleal.cling.model.action.MethodActionExecutor:
    java.util.logging.Logger log -> log
    java.lang.reflect.Method method -> method
    java.lang.reflect.Method getMethod() -> getMethod
    void execute(org.teleal.cling.model.action.ActionInvocation,java.lang.Object) -> execute
    boolean isUseOutputArgumentAccessors(org.teleal.cling.model.action.ActionInvocation) -> isUseOutputArgumentAccessors
    java.lang.Object[] createInputArgumentValues(org.teleal.cling.model.action.ActionInvocation,java.lang.reflect.Method) -> createInputArgumentValues
org.teleal.cling.model.action.QueryStateVariableExecutor -> org.teleal.cling.model.action.QueryStateVariableExecutor:
    void execute(org.teleal.cling.model.action.ActionInvocation,java.lang.Object) -> execute
    void executeQueryStateVariable(org.teleal.cling.model.action.ActionInvocation,java.lang.Object) -> executeQueryStateVariable
org.teleal.cling.model.gena.CancelReason -> org.teleal.cling.model.gena.CancelReason:
    org.teleal.cling.model.gena.CancelReason RENEWAL_FAILED -> RENEWAL_FAILED
    org.teleal.cling.model.gena.CancelReason DEVICE_WAS_REMOVED -> DEVICE_WAS_REMOVED
    org.teleal.cling.model.gena.CancelReason UNSUBSCRIBE_FAILED -> UNSUBSCRIBE_FAILED
    org.teleal.cling.model.gena.CancelReason EXPIRED -> EXPIRED
    org.teleal.cling.model.gena.CancelReason[] $VALUES -> $VALUES
    org.teleal.cling.model.gena.CancelReason[] values() -> values
    org.teleal.cling.model.gena.CancelReason valueOf(java.lang.String) -> valueOf
org.teleal.cling.model.gena.GENASubscription -> org.teleal.cling.model.gena.GENASubscription:
    org.teleal.cling.model.meta.Service service -> service
    java.lang.String subscriptionId -> subscriptionId
    int requestedDurationSeconds -> requestedDurationSeconds
    int actualDurationSeconds -> actualDurationSeconds
    org.teleal.cling.model.types.UnsignedIntegerFourBytes currentSequence -> currentSequence
    java.util.Map currentValues -> currentValues
    org.teleal.cling.model.meta.Service getService() -> getService
    java.lang.String getSubscriptionId() -> getSubscriptionId
    void setSubscriptionId(java.lang.String) -> setSubscriptionId
    int getRequestedDurationSeconds() -> getRequestedDurationSeconds
    int getActualDurationSeconds() -> getActualDurationSeconds
    void setActualSubscriptionDurationSeconds(int) -> setActualSubscriptionDurationSeconds
    org.teleal.cling.model.types.UnsignedIntegerFourBytes getCurrentSequence() -> getCurrentSequence
    java.util.Map getCurrentValues() -> getCurrentValues
    void established() -> established
    void eventReceived() -> eventReceived
    java.lang.String toString() -> toString
org.teleal.cling.model.gena.LocalGENASubscription -> org.teleal.cling.model.gena.LocalGENASubscription:
    java.util.logging.Logger log -> log
    java.util.List callbackURLs -> callbackURLs
    java.util.Map lastSentTimestamp -> lastSentTimestamp
    java.util.Map lastSentNumericValue -> lastSentNumericValue
    java.util.List getCallbackURLs() -> getCallbackURLs
    void registerOnService() -> registerOnService
    void establish() -> establish
    void end(org.teleal.cling.model.gena.CancelReason) -> end
    void propertyChange(java.beans.PropertyChangeEvent) -> propertyChange
    java.util.Set moderateStateVariables(long,java.util.Collection) -> moderateStateVariables
    void incrementSequence() -> incrementSequence
    void setSubscriptionDuration(java.lang.Integer) -> setSubscriptionDuration
    void ended(org.teleal.cling.model.gena.CancelReason) -> ended
org.teleal.cling.model.gena.RemoteGENASubscription -> org.teleal.cling.model.gena.RemoteGENASubscription:
    java.beans.PropertyChangeSupport propertyChangeSupport -> propertyChangeSupport
    java.net.URL getEventSubscriptionURL() -> getEventSubscriptionURL
    java.util.List getEventCallbackURLs(java.util.List,org.teleal.cling.model.Namespace) -> getEventCallbackURLs
    void establish() -> establish
    void fail(org.teleal.cling.model.message.UpnpResponse) -> fail
    void end(org.teleal.cling.model.gena.CancelReason,org.teleal.cling.model.message.UpnpResponse) -> end
    void receive(org.teleal.cling.model.types.UnsignedIntegerFourBytes,java.util.Collection) -> receive
    void failed(org.teleal.cling.model.message.UpnpResponse) -> failed
    void ended(org.teleal.cling.model.gena.CancelReason,org.teleal.cling.model.message.UpnpResponse) -> ended
    void eventsMissed(int) -> eventsMissed
    java.lang.String toString() -> toString
org.teleal.cling.model.message.IncomingDatagramMessage -> org.teleal.cling.model.message.IncomingDatagramMessage:
    java.net.InetAddress sourceAddress -> sourceAddress
    int sourcePort -> sourcePort
    java.net.InetAddress localAddress -> localAddress
    java.net.InetAddress getSourceAddress() -> getSourceAddress
    int getSourcePort() -> getSourcePort
    java.net.InetAddress getLocalAddress() -> getLocalAddress
org.teleal.cling.model.message.OutgoingDatagramMessage -> org.teleal.cling.model.message.OutgoingDatagramMessage:
    java.net.InetAddress destinationAddress -> destinationAddress
    int destinationPort -> destinationPort
    java.net.InetAddress getDestinationAddress() -> getDestinationAddress
    int getDestinationPort() -> getDestinationPort
org.teleal.cling.model.message.StreamRequestMessage -> org.teleal.cling.model.message.StreamRequestMessage:
    java.net.URI getUri() -> getUri
org.teleal.cling.model.message.StreamResponseMessage -> org.teleal.cling.model.message.StreamResponseMessage:
org.teleal.cling.model.message.UpnpHeaders -> org.teleal.cling.model.message.UpnpHeaders:
    java.util.logging.Logger log -> log
    java.util.Map parsedHeaders -> parsedHeaders
    void parseHeaders() -> parseHeaders
    void addParsedValue(org.teleal.cling.model.message.header.UpnpHeader$Type,org.teleal.cling.model.message.header.UpnpHeader) -> addParsedValue
    java.util.List put(java.lang.String,java.util.List) -> put
    void add(java.lang.String,java.lang.String) -> add
    java.util.List remove(java.lang.Object) -> remove
    void clear() -> clear
    boolean containsKey(org.teleal.cling.model.message.header.UpnpHeader$Type) -> containsKey
    java.util.List get(org.teleal.cling.model.message.header.UpnpHeader$Type) -> get
    void add(org.teleal.cling.model.message.header.UpnpHeader$Type,org.teleal.cling.model.message.header.UpnpHeader) -> add
    void remove(org.teleal.cling.model.message.header.UpnpHeader$Type) -> remove
    org.teleal.cling.model.message.header.UpnpHeader[] getAsArray(org.teleal.cling.model.message.header.UpnpHeader$Type) -> getAsArray
    org.teleal.cling.model.message.header.UpnpHeader getFirstHeader(org.teleal.cling.model.message.header.UpnpHeader$Type) -> getFirstHeader
    org.teleal.cling.model.message.header.UpnpHeader getFirstHeader(org.teleal.cling.model.message.header.UpnpHeader$Type,java.lang.Class) -> getFirstHeader
    void log() -> log
    java.lang.Object remove(java.lang.Object) -> remove
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
org.teleal.cling.model.message.UpnpMessage -> org.teleal.cling.model.message.UpnpMessage:
    int udaMajorVersion -> udaMajorVersion
    int udaMinorVersion -> udaMinorVersion
    org.teleal.cling.model.message.UpnpOperation operation -> operation
    org.teleal.cling.model.message.UpnpHeaders headers -> headers
    java.lang.Object body -> body
    org.teleal.cling.model.message.UpnpMessage$BodyType bodyType -> bodyType
    int getUdaMajorVersion() -> getUdaMajorVersion
    void setUdaMajorVersion(int) -> setUdaMajorVersion
    int getUdaMinorVersion() -> getUdaMinorVersion
    void setUdaMinorVersion(int) -> setUdaMinorVersion
    org.teleal.cling.model.message.UpnpHeaders getHeaders() -> getHeaders
    void setHeaders(org.teleal.cling.model.message.UpnpHeaders) -> setHeaders
    java.lang.Object getBody() -> getBody
    void setBody(org.teleal.cling.model.message.UpnpMessage$BodyType,java.lang.Object) -> setBody
    void setBodyCharacters(byte[]) -> setBodyCharacters
    boolean hasBody() -> hasBody
    org.teleal.cling.model.message.UpnpMessage$BodyType getBodyType() -> getBodyType
    void setBodyType(org.teleal.cling.model.message.UpnpMessage$BodyType) -> setBodyType
    java.lang.String getBodyString() -> getBodyString
    byte[] getBodyBytes() -> getBodyBytes
    org.teleal.cling.model.message.UpnpOperation getOperation() -> getOperation
    boolean isContentTypeMissingOrText() -> isContentTypeMissingOrText
    org.teleal.cling.model.message.header.ContentTypeHeader getContentTypeHeader() -> getContentTypeHeader
    boolean isContentTypeText() -> isContentTypeText
    boolean isContentTypeTextUDA() -> isContentTypeTextUDA
    java.lang.String getContentTypeCharset() -> getContentTypeCharset
    boolean hasHostHeader() -> hasHostHeader
    java.lang.String toString() -> toString
org.teleal.cling.model.message.UpnpMessage$BodyType -> org.teleal.cling.model.message.UpnpMessage$BodyType:
    org.teleal.cling.model.message.UpnpMessage$BodyType STRING -> STRING
    org.teleal.cling.model.message.UpnpMessage$BodyType BYTES -> BYTES
    org.teleal.cling.model.message.UpnpMessage$BodyType[] $VALUES -> $VALUES
    org.teleal.cling.model.message.UpnpMessage$BodyType[] values() -> values
    org.teleal.cling.model.message.UpnpMessage$BodyType valueOf(java.lang.String) -> valueOf
org.teleal.cling.model.message.UpnpOperation -> org.teleal.cling.model.message.UpnpOperation:
    int httpMinorVersion -> httpMinorVersion
    int getHttpMinorVersion() -> getHttpMinorVersion
    void setHttpMinorVersion(int) -> setHttpMinorVersion
org.teleal.cling.model.message.UpnpRequest -> org.teleal.cling.model.message.UpnpRequest:
    org.teleal.cling.model.message.UpnpRequest$Method method -> method
    java.net.URI uri -> uri
    org.teleal.cling.model.message.UpnpRequest$Method getMethod() -> getMethod
    java.lang.String getHttpMethodName() -> getHttpMethodName
    java.net.URI getURI() -> getURI
    void setUri(java.net.URI) -> setUri
    java.lang.String toString() -> toString
org.teleal.cling.model.message.UpnpRequest$Method -> org.teleal.cling.model.message.UpnpRequest$Method:
    org.teleal.cling.model.message.UpnpRequest$Method GET -> GET
    org.teleal.cling.model.message.UpnpRequest$Method POST -> POST
    org.teleal.cling.model.message.UpnpRequest$Method NOTIFY -> NOTIFY
    org.teleal.cling.model.message.UpnpRequest$Method MSEARCH -> MSEARCH
    org.teleal.cling.model.message.UpnpRequest$Method SUBSCRIBE -> SUBSCRIBE
    org.teleal.cling.model.message.UpnpRequest$Method UNSUBSCRIBE -> UNSUBSCRIBE
    org.teleal.cling.model.message.UpnpRequest$Method UNKNOWN -> UNKNOWN
    java.util.Map byName -> byName
    java.lang.String httpName -> httpName
    org.teleal.cling.model.message.UpnpRequest$Method[] $VALUES -> $VALUES
    org.teleal.cling.model.message.UpnpRequest$Method[] values() -> values
    org.teleal.cling.model.message.UpnpRequest$Method valueOf(java.lang.String) -> valueOf
    java.lang.String getHttpName() -> getHttpName
    org.teleal.cling.model.message.UpnpRequest$Method getByHttpName(java.lang.String) -> getByHttpName
org.teleal.cling.model.message.UpnpRequest$Method$1 -> org.teleal.cling.model.message.UpnpRequest$Method$1:
org.teleal.cling.model.message.UpnpResponse -> org.teleal.cling.model.message.UpnpResponse:
    int statusCode -> statusCode
    java.lang.String statusMessage -> statusMessage
    int getStatusCode() -> getStatusCode
    java.lang.String getStatusMessage() -> getStatusMessage
    boolean isFailed() -> isFailed
    java.lang.String getResponseDetails() -> getResponseDetails
    java.lang.String toString() -> toString
org.teleal.cling.model.message.UpnpResponse$Status -> org.teleal.cling.model.message.UpnpResponse$Status:
    org.teleal.cling.model.message.UpnpResponse$Status OK -> OK
    org.teleal.cling.model.message.UpnpResponse$Status BAD_REQUEST -> BAD_REQUEST
    org.teleal.cling.model.message.UpnpResponse$Status NOT_FOUND -> NOT_FOUND
    org.teleal.cling.model.message.UpnpResponse$Status METHOD_NOT_SUPPORTED -> METHOD_NOT_SUPPORTED
    org.teleal.cling.model.message.UpnpResponse$Status PRECONDITION_FAILED -> PRECONDITION_FAILED
    org.teleal.cling.model.message.UpnpResponse$Status UNSUPPORTED_MEDIA_TYPE -> UNSUPPORTED_MEDIA_TYPE
    org.teleal.cling.model.message.UpnpResponse$Status INTERNAL_SERVER_ERROR -> INTERNAL_SERVER_ERROR
    org.teleal.cling.model.message.UpnpResponse$Status NOT_IMPLEMENTED -> NOT_IMPLEMENTED
    int statusCode -> statusCode
    java.lang.String statusMsg -> statusMsg
    org.teleal.cling.model.message.UpnpResponse$Status[] $VALUES -> $VALUES
    org.teleal.cling.model.message.UpnpResponse$Status[] values() -> values
    org.teleal.cling.model.message.UpnpResponse$Status valueOf(java.lang.String) -> valueOf
    int getStatusCode() -> getStatusCode
    java.lang.String getStatusMsg() -> getStatusMsg
    org.teleal.cling.model.message.UpnpResponse$Status getByStatusCode(int) -> getByStatusCode
org.teleal.cling.model.message.control.ActionMessage -> org.teleal.cling.model.message.control.ActionMessage:
    java.lang.String getActionNamespace() -> getActionNamespace
    java.lang.Object getBody() -> getBody
    org.teleal.cling.model.message.UpnpMessage$BodyType getBodyType() -> getBodyType
    java.lang.String getBodyString() -> getBodyString
    byte[] getBodyBytes() -> getBodyBytes
    void setBody(org.teleal.cling.model.message.UpnpMessage$BodyType,java.lang.Object) -> setBody
org.teleal.cling.model.message.control.ActionRequestMessage -> org.teleal.cling.model.message.control.ActionRequestMessage:
org.teleal.cling.model.message.control.ActionResponseMessage -> org.teleal.cling.model.message.control.ActionResponseMessage:
org.teleal.cling.model.message.control.IncomingActionRequestMessage -> org.teleal.cling.model.message.control.IncomingActionRequestMessage:
    org.teleal.cling.model.meta.Action action -> action
    java.lang.String actionNamespace -> actionNamespace
    org.teleal.cling.model.meta.Action getAction() -> getAction
    java.lang.String getActionNamespace() -> getActionNamespace
org.teleal.cling.model.message.control.IncomingActionResponseMessage -> org.teleal.cling.model.message.control.IncomingActionResponseMessage:
    java.lang.String getActionNamespace() -> getActionNamespace
    boolean isFailedNonRecoverable() -> isFailedNonRecoverable
    boolean isFailedRecoverable() -> isFailedRecoverable
org.teleal.cling.model.message.control.OutgoingActionRequestMessage -> org.teleal.cling.model.message.control.OutgoingActionRequestMessage:
    java.util.logging.Logger log -> log
    java.lang.String actionNamespace -> actionNamespace
    java.lang.String getActionNamespace() -> getActionNamespace
org.teleal.cling.model.message.control.OutgoingActionResponseMessage -> org.teleal.cling.model.message.control.OutgoingActionResponseMessage:
    java.lang.String actionNamespace -> actionNamespace
    void addHeaders() -> addHeaders
    java.lang.String getActionNamespace() -> getActionNamespace
org.teleal.cling.model.message.discovery.IncomingNotificationRequest -> org.teleal.cling.model.message.discovery.IncomingNotificationRequest:
    boolean isAliveMessage() -> isAliveMessage
    boolean isByeByeMessage() -> isByeByeMessage
    java.net.URL getLocationURL() -> getLocationURL
    org.teleal.cling.model.types.UDN getUDN() -> getUDN
    java.lang.Integer getMaxAge() -> getMaxAge
    byte[] getInterfaceMacHeader() -> getInterfaceMacHeader
org.teleal.cling.model.message.discovery.IncomingSearchRequest -> org.teleal.cling.model.message.discovery.IncomingSearchRequest:
    org.teleal.cling.model.message.header.UpnpHeader getSearchTarget() -> getSearchTarget
    java.lang.Integer getMX() -> getMX
    boolean isMANSSDPDiscover() -> isMANSSDPDiscover
org.teleal.cling.model.message.discovery.IncomingSearchResponse -> org.teleal.cling.model.message.discovery.IncomingSearchResponse:
    boolean isSearchResponseMessage() -> isSearchResponseMessage
    org.teleal.cling.model.types.UDN getRootDeviceUDN() -> getRootDeviceUDN
    java.net.URL getLocationURL() -> getLocationURL
    java.lang.Integer getMaxAge() -> getMaxAge
    byte[] getInterfaceMacHeader() -> getInterfaceMacHeader
org.teleal.cling.model.message.discovery.OutgoingNotificationRequest -> org.teleal.cling.model.message.discovery.OutgoingNotificationRequest:
    org.teleal.cling.model.types.NotificationSubtype type -> type
    org.teleal.cling.model.types.NotificationSubtype getType() -> getType
org.teleal.cling.model.message.discovery.OutgoingNotificationRequestDeviceType -> org.teleal.cling.model.message.discovery.OutgoingNotificationRequestDeviceType:
org.teleal.cling.model.message.discovery.OutgoingNotificationRequestRootDevice -> org.teleal.cling.model.message.discovery.OutgoingNotificationRequestRootDevice:
org.teleal.cling.model.message.discovery.OutgoingNotificationRequestServiceType -> org.teleal.cling.model.message.discovery.OutgoingNotificationRequestServiceType:
org.teleal.cling.model.message.discovery.OutgoingNotificationRequestUDN -> org.teleal.cling.model.message.discovery.OutgoingNotificationRequestUDN:
org.teleal.cling.model.message.discovery.OutgoingSearchRequest -> org.teleal.cling.model.message.discovery.OutgoingSearchRequest:
    org.teleal.cling.model.message.header.UpnpHeader searchTarget -> searchTarget
    org.teleal.cling.model.message.header.UpnpHeader getSearchTarget() -> getSearchTarget
org.teleal.cling.model.message.discovery.OutgoingSearchResponse -> org.teleal.cling.model.message.discovery.OutgoingSearchResponse:
org.teleal.cling.model.message.discovery.OutgoingSearchResponseDeviceType -> org.teleal.cling.model.message.discovery.OutgoingSearchResponseDeviceType:
org.teleal.cling.model.message.discovery.OutgoingSearchResponseRootDevice -> org.teleal.cling.model.message.discovery.OutgoingSearchResponseRootDevice:
org.teleal.cling.model.message.discovery.OutgoingSearchResponseRootDeviceUDN -> org.teleal.cling.model.message.discovery.OutgoingSearchResponseRootDeviceUDN:
org.teleal.cling.model.message.discovery.OutgoingSearchResponseServiceType -> org.teleal.cling.model.message.discovery.OutgoingSearchResponseServiceType:
org.teleal.cling.model.message.discovery.OutgoingSearchResponseUDN -> org.teleal.cling.model.message.discovery.OutgoingSearchResponseUDN:
org.teleal.cling.model.message.gena.IncomingEventRequestMessage -> org.teleal.cling.model.message.gena.IncomingEventRequestMessage:
    java.util.List stateVariableValues -> stateVariableValues
    org.teleal.cling.model.meta.RemoteService service -> service
    org.teleal.cling.model.meta.RemoteService getService() -> getService
    java.util.List getStateVariableValues() -> getStateVariableValues
    java.lang.String getSubscrptionId() -> getSubscrptionId
    org.teleal.cling.model.types.UnsignedIntegerFourBytes getSequence() -> getSequence
    boolean hasNotificationHeaders() -> hasNotificationHeaders
    boolean hasValidNotificationHeaders() -> hasValidNotificationHeaders
    java.lang.String toString() -> toString
org.teleal.cling.model.message.gena.IncomingSubscribeRequestMessage -> org.teleal.cling.model.message.gena.IncomingSubscribeRequestMessage:
    org.teleal.cling.model.meta.LocalService service -> service
    org.teleal.cling.model.meta.LocalService getService() -> getService
    java.util.List getCallbackURLs() -> getCallbackURLs
    boolean hasNotificationHeader() -> hasNotificationHeader
    java.lang.Integer getRequestedTimeoutSeconds() -> getRequestedTimeoutSeconds
    java.lang.String getSubscriptionId() -> getSubscriptionId
org.teleal.cling.model.message.gena.IncomingSubscribeResponseMessage -> org.teleal.cling.model.message.gena.IncomingSubscribeResponseMessage:
    boolean isVaildHeaders() -> isVaildHeaders
    java.lang.String getSubscriptionId() -> getSubscriptionId
    int getSubscriptionDurationSeconds() -> getSubscriptionDurationSeconds
org.teleal.cling.model.message.gena.IncomingUnsubscribeRequestMessage -> org.teleal.cling.model.message.gena.IncomingUnsubscribeRequestMessage:
    org.teleal.cling.model.meta.LocalService service -> service
    org.teleal.cling.model.meta.LocalService getService() -> getService
    boolean hasCallbackHeader() -> hasCallbackHeader
    boolean hasNotificationHeader() -> hasNotificationHeader
    java.lang.String getSubscriptionId() -> getSubscriptionId
org.teleal.cling.model.message.gena.OutgoingEventRequestMessage -> org.teleal.cling.model.message.gena.OutgoingEventRequestMessage:
    java.util.Collection stateVariableValues -> stateVariableValues
    java.util.Collection getStateVariableValues() -> getStateVariableValues
org.teleal.cling.model.message.gena.OutgoingEventResponseMessage -> org.teleal.cling.model.message.gena.OutgoingEventResponseMessage:
org.teleal.cling.model.message.gena.OutgoingRenewalRequestMessage -> org.teleal.cling.model.message.gena.OutgoingRenewalRequestMessage:
org.teleal.cling.model.message.gena.OutgoingSubscribeRequestMessage -> org.teleal.cling.model.message.gena.OutgoingSubscribeRequestMessage:
    boolean hasCallbackURLs() -> hasCallbackURLs
org.teleal.cling.model.message.gena.OutgoingSubscribeResponseMessage -> org.teleal.cling.model.message.gena.OutgoingSubscribeResponseMessage:
org.teleal.cling.model.message.gena.OutgoingUnsubscribeRequestMessage -> org.teleal.cling.model.message.gena.OutgoingUnsubscribeRequestMessage:
org.teleal.cling.model.message.header.CallbackHeader -> org.teleal.cling.model.message.header.CallbackHeader:
    void setString(java.lang.String) -> setString
    java.lang.String getString() -> getString
org.teleal.cling.model.message.header.ContentTypeHeader -> org.teleal.cling.model.message.header.ContentTypeHeader:
    org.teleal.common.util.MimeType DEFAULT_CONTENT_TYPE -> DEFAULT_CONTENT_TYPE
    org.teleal.common.util.MimeType DEFAULT_CONTENT_TYPE_UTF8 -> DEFAULT_CONTENT_TYPE_UTF8
    void setString(java.lang.String) -> setString
    java.lang.String getString() -> getString
    boolean isUDACompliantXML() -> isUDACompliantXML
    boolean isText() -> isText
org.teleal.cling.model.message.header.DeviceTypeHeader -> org.teleal.cling.model.message.header.DeviceTypeHeader:
    void setString(java.lang.String) -> setString
    java.lang.String getString() -> getString
org.teleal.cling.model.message.header.DeviceUSNHeader -> org.teleal.cling.model.message.header.DeviceUSNHeader:
    void setString(java.lang.String) -> setString
    java.lang.String getString() -> getString
org.teleal.cling.model.message.header.EXTHeader -> org.teleal.cling.model.message.header.EXTHeader:
    java.lang.String DEFAULT_VALUE -> DEFAULT_VALUE
    void setString(java.lang.String) -> setString
    java.lang.String getString() -> getString
org.teleal.cling.model.message.header.EventSequenceHeader -> org.teleal.cling.model.message.header.EventSequenceHeader:
    void setString(java.lang.String) -> setString
    java.lang.String getString() -> getString
org.teleal.cling.model.message.header.HostHeader -> org.teleal.cling.model.message.header.HostHeader:
    int port -> port
    java.lang.String group -> group
    void setString(java.lang.String) -> setString
    java.lang.String getString() -> getString
org.teleal.cling.model.message.header.InterfaceMacHeader -> org.teleal.cling.model.message.header.InterfaceMacHeader:
    void setString(java.lang.String) -> setString
    java.lang.String getString() -> getString
    java.lang.String toString() -> toString
org.teleal.cling.model.message.header.InvalidHeaderException -> org.teleal.cling.model.message.header.InvalidHeaderException:
org.teleal.cling.model.message.header.LocationHeader -> org.teleal.cling.model.message.header.LocationHeader:
    void setString(java.lang.String) -> setString
    java.lang.String getString() -> getString
org.teleal.cling.model.message.header.MANHeader -> org.teleal.cling.model.message.header.MANHeader:
    java.util.regex.Pattern PATTERN -> PATTERN
    java.util.regex.Pattern NAMESPACE_PATTERN -> NAMESPACE_PATTERN
    java.lang.String namespace -> namespace
    void setString(java.lang.String) -> setString
    java.lang.String getString() -> getString
    java.lang.String getNamespace() -> getNamespace
    void setNamespace(java.lang.String) -> setNamespace
org.teleal.cling.model.message.header.MXHeader -> org.teleal.cling.model.message.header.MXHeader:
    java.lang.Integer DEFAULT_VALUE -> DEFAULT_VALUE
    void setString(java.lang.String) -> setString
    java.lang.String getString() -> getString
org.teleal.cling.model.message.header.MaxAgeHeader -> org.teleal.cling.model.message.header.MaxAgeHeader:
    java.util.regex.Pattern MAX_AGE_REGEX -> MAX_AGE_REGEX
    void setString(java.lang.String) -> setString
    java.lang.String getString() -> getString
org.teleal.cling.model.message.header.NTEventHeader -> org.teleal.cling.model.message.header.NTEventHeader:
    void setString(java.lang.String) -> setString
    java.lang.String getString() -> getString
org.teleal.cling.model.message.header.NTSHeader -> org.teleal.cling.model.message.header.NTSHeader:
    void setString(java.lang.String) -> setString
    java.lang.String getString() -> getString
org.teleal.cling.model.message.header.RootDeviceHeader -> org.teleal.cling.model.message.header.RootDeviceHeader:
    void setString(java.lang.String) -> setString
    java.lang.String getString() -> getString
org.teleal.cling.model.message.header.STAllHeader -> org.teleal.cling.model.message.header.STAllHeader:
    void setString(java.lang.String) -> setString
    java.lang.String getString() -> getString
org.teleal.cling.model.message.header.ServerHeader -> org.teleal.cling.model.message.header.ServerHeader:
    void setString(java.lang.String) -> setString
    java.lang.String getString() -> getString
org.teleal.cling.model.message.header.ServiceTypeHeader -> org.teleal.cling.model.message.header.ServiceTypeHeader:
    void setString(java.lang.String) -> setString
    java.lang.String getString() -> getString
org.teleal.cling.model.message.header.ServiceUSNHeader -> org.teleal.cling.model.message.header.ServiceUSNHeader:
    void setString(java.lang.String) -> setString
    java.lang.String getString() -> getString
org.teleal.cling.model.message.header.SoapActionHeader -> org.teleal.cling.model.message.header.SoapActionHeader:
    void setString(java.lang.String) -> setString
    java.lang.String getString() -> getString
org.teleal.cling.model.message.header.SubscriptionIdHeader -> org.teleal.cling.model.message.header.SubscriptionIdHeader:
    java.lang.String PREFIX -> PREFIX
    void setString(java.lang.String) -> setString
    java.lang.String getString() -> getString
org.teleal.cling.model.message.header.TimeoutHeader -> org.teleal.cling.model.message.header.TimeoutHeader:
    java.lang.Integer INFINITE_VALUE -> INFINITE_VALUE
    java.util.regex.Pattern PATTERN -> PATTERN
    void setString(java.lang.String) -> setString
    java.lang.String getString() -> getString
org.teleal.cling.model.message.header.UDADeviceTypeHeader -> org.teleal.cling.model.message.header.UDADeviceTypeHeader:
    void setString(java.lang.String) -> setString
org.teleal.cling.model.message.header.UDAServiceTypeHeader -> org.teleal.cling.model.message.header.UDAServiceTypeHeader:
    void setString(java.lang.String) -> setString
org.teleal.cling.model.message.header.UDNHeader -> org.teleal.cling.model.message.header.UDNHeader:
    void setString(java.lang.String) -> setString
    java.lang.String getString() -> getString
org.teleal.cling.model.message.header.USNRootDeviceHeader -> org.teleal.cling.model.message.header.USNRootDeviceHeader:
    java.lang.String ROOT_DEVICE_SUFFIX -> ROOT_DEVICE_SUFFIX
    void setString(java.lang.String) -> setString
    java.lang.String getString() -> getString
org.teleal.cling.model.message.header.UpnpHeader -> org.teleal.cling.model.message.header.UpnpHeader:
    java.util.logging.Logger log -> log
    java.lang.Object value -> value
    void setValue(java.lang.Object) -> setValue
    java.lang.Object getValue() -> getValue
    void setString(java.lang.String) -> setString
    java.lang.String getString() -> getString
    org.teleal.cling.model.message.header.UpnpHeader newInstance(org.teleal.cling.model.message.header.UpnpHeader$Type,java.lang.String) -> newInstance
    java.lang.String toString() -> toString
org.teleal.cling.model.message.header.UpnpHeader$Type -> org.teleal.cling.model.message.header.UpnpHeader$Type:
    org.teleal.cling.model.message.header.UpnpHeader$Type USN -> USN
    org.teleal.cling.model.message.header.UpnpHeader$Type NT -> NT
    org.teleal.cling.model.message.header.UpnpHeader$Type NTS -> NTS
    org.teleal.cling.model.message.header.UpnpHeader$Type HOST -> HOST
    org.teleal.cling.model.message.header.UpnpHeader$Type SERVER -> SERVER
    org.teleal.cling.model.message.header.UpnpHeader$Type LOCATION -> LOCATION
    org.teleal.cling.model.message.header.UpnpHeader$Type MAX_AGE -> MAX_AGE
    org.teleal.cling.model.message.header.UpnpHeader$Type USER_AGENT -> USER_AGENT
    org.teleal.cling.model.message.header.UpnpHeader$Type CONTENT_TYPE -> CONTENT_TYPE
    org.teleal.cling.model.message.header.UpnpHeader$Type MAN -> MAN
    org.teleal.cling.model.message.header.UpnpHeader$Type MX -> MX
    org.teleal.cling.model.message.header.UpnpHeader$Type ST -> ST
    org.teleal.cling.model.message.header.UpnpHeader$Type EXT -> EXT
    org.teleal.cling.model.message.header.UpnpHeader$Type SOAPACTION -> SOAPACTION
    org.teleal.cling.model.message.header.UpnpHeader$Type TIMEOUT -> TIMEOUT
    org.teleal.cling.model.message.header.UpnpHeader$Type CALLBACK -> CALLBACK
    org.teleal.cling.model.message.header.UpnpHeader$Type SID -> SID
    org.teleal.cling.model.message.header.UpnpHeader$Type SEQ -> SEQ
    org.teleal.cling.model.message.header.UpnpHeader$Type EXT_IFACE_MAC -> EXT_IFACE_MAC
    java.util.Map byName -> byName
    java.lang.String httpName -> httpName
    java.lang.Class[] headerTypes -> headerTypes
    org.teleal.cling.model.message.header.UpnpHeader$Type[] $VALUES -> $VALUES
    org.teleal.cling.model.message.header.UpnpHeader$Type[] values() -> values
    org.teleal.cling.model.message.header.UpnpHeader$Type valueOf(java.lang.String) -> valueOf
    java.lang.String getHttpName() -> getHttpName
    java.lang.Class[] getHeaderTypes() -> getHeaderTypes
    boolean isValidHeaderType(java.lang.Class) -> isValidHeaderType
    org.teleal.cling.model.message.header.UpnpHeader$Type getByHttpName(java.lang.String) -> getByHttpName
org.teleal.cling.model.message.header.UpnpHeader$Type$1 -> org.teleal.cling.model.message.header.UpnpHeader$Type$1:
org.teleal.cling.model.message.header.UserAgentHeader -> org.teleal.cling.model.message.header.UserAgentHeader:
org.teleal.cling.model.meta.Action -> org.teleal.cling.model.meta.Action:
    java.util.logging.Logger log -> log
    java.lang.String name -> name
    org.teleal.cling.model.meta.ActionArgument[] arguments -> arguments
    org.teleal.cling.model.meta.ActionArgument[] inputArguments -> inputArguments
    org.teleal.cling.model.meta.ActionArgument[] outputArguments -> outputArguments
    org.teleal.cling.model.meta.Service service -> service
    java.lang.String getName() -> getName
    boolean hasArguments() -> hasArguments
    org.teleal.cling.model.meta.ActionArgument[] getArguments() -> getArguments
    org.teleal.cling.model.meta.Service getService() -> getService
    void setService(org.teleal.cling.model.meta.Service) -> setService
    org.teleal.cling.model.meta.ActionArgument getFirstInputArgument() -> getFirstInputArgument
    org.teleal.cling.model.meta.ActionArgument getFirstOutputArgument() -> getFirstOutputArgument
    org.teleal.cling.model.meta.ActionArgument[] getInputArguments() -> getInputArguments
    org.teleal.cling.model.meta.ActionArgument getInputArgument(java.lang.String) -> getInputArgument
    org.teleal.cling.model.meta.ActionArgument[] getOutputArguments() -> getOutputArguments
    org.teleal.cling.model.meta.ActionArgument getOutputArgument(java.lang.String) -> getOutputArgument
    boolean hasInputArguments() -> hasInputArguments
    boolean hasOutputArguments() -> hasOutputArguments
    java.lang.String toString() -> toString
    java.util.List validate() -> validate
    org.teleal.cling.model.meta.Action deepCopy() -> deepCopy
org.teleal.cling.model.meta.ActionArgument -> org.teleal.cling.model.meta.ActionArgument:
    java.util.logging.Logger log -> log
    java.lang.String name -> name
    java.lang.String[] aliases -> aliases
    java.lang.String relatedStateVariableName -> relatedStateVariableName
    org.teleal.cling.model.meta.ActionArgument$Direction direction -> direction
    boolean returnValue -> returnValue
    org.teleal.cling.model.meta.Action action -> action
    java.lang.String getName() -> getName
    java.lang.String[] getAliases() -> getAliases
    boolean isNameOrAlias(java.lang.String) -> isNameOrAlias
    java.lang.String getRelatedStateVariableName() -> getRelatedStateVariableName
    org.teleal.cling.model.meta.ActionArgument$Direction getDirection() -> getDirection
    boolean isReturnValue() -> isReturnValue
    org.teleal.cling.model.meta.Action getAction() -> getAction
    void setAction(org.teleal.cling.model.meta.Action) -> setAction
    org.teleal.cling.model.types.Datatype getDatatype() -> getDatatype
    java.util.List validate() -> validate
    org.teleal.cling.model.meta.ActionArgument deepCopy() -> deepCopy
    java.lang.String toString() -> toString
org.teleal.cling.model.meta.ActionArgument$Direction -> org.teleal.cling.model.meta.ActionArgument$Direction:
    org.teleal.cling.model.meta.ActionArgument$Direction IN -> IN
    org.teleal.cling.model.meta.ActionArgument$Direction OUT -> OUT
    org.teleal.cling.model.meta.ActionArgument$Direction[] $VALUES -> $VALUES
    org.teleal.cling.model.meta.ActionArgument$Direction[] values() -> values
    org.teleal.cling.model.meta.ActionArgument$Direction valueOf(java.lang.String) -> valueOf
org.teleal.cling.model.meta.Device -> org.teleal.cling.model.meta.Device:
    java.util.logging.Logger log -> log
    org.teleal.cling.model.meta.DeviceIdentity identity -> identity
    org.teleal.cling.model.meta.UDAVersion version -> version
    org.teleal.cling.model.types.DeviceType type -> type
    org.teleal.cling.model.meta.DeviceDetails details -> details
    org.teleal.cling.model.meta.Icon[] icons -> icons
    org.teleal.cling.model.meta.Service[] services -> services
    org.teleal.cling.model.meta.Device[] embeddedDevices -> embeddedDevices
    org.teleal.cling.model.meta.Device parentDevice -> parentDevice
    org.teleal.cling.model.meta.DeviceIdentity getIdentity() -> getIdentity
    org.teleal.cling.model.meta.UDAVersion getVersion() -> getVersion
    org.teleal.cling.model.types.DeviceType getType() -> getType
    org.teleal.cling.model.meta.DeviceDetails getDetails() -> getDetails
    org.teleal.cling.model.meta.DeviceDetails getDetails(org.teleal.cling.model.profile.ControlPointInfo) -> getDetails
    org.teleal.cling.model.meta.Icon[] getIcons() -> getIcons
    boolean hasIcons() -> hasIcons
    boolean hasServices() -> hasServices
    boolean hasEmbeddedDevices() -> hasEmbeddedDevices
    org.teleal.cling.model.meta.Device getParentDevice() -> getParentDevice
    void setParentDevice(org.teleal.cling.model.meta.Device) -> setParentDevice
    boolean isRoot() -> isRoot
    org.teleal.cling.model.meta.Service[] getServices() -> getServices
    org.teleal.cling.model.meta.Device[] getEmbeddedDevices() -> getEmbeddedDevices
    org.teleal.cling.model.meta.Device getRoot() -> getRoot
    org.teleal.cling.model.meta.Device findDevice(org.teleal.cling.model.types.UDN) -> findDevice
    org.teleal.cling.model.meta.Device[] findEmbeddedDevices() -> findEmbeddedDevices
    org.teleal.cling.model.meta.Device[] findDevices(org.teleal.cling.model.types.DeviceType) -> findDevices
    org.teleal.cling.model.meta.Device[] findDevices(org.teleal.cling.model.types.ServiceType) -> findDevices
    org.teleal.cling.model.meta.Icon[] findIcons() -> findIcons
    org.teleal.cling.model.meta.Service[] findServices() -> findServices
    org.teleal.cling.model.meta.Service[] findServices(org.teleal.cling.model.types.ServiceType) -> findServices
    org.teleal.cling.model.meta.Device find(org.teleal.cling.model.types.UDN,org.teleal.cling.model.meta.Device) -> find
    java.util.Collection findEmbeddedDevices(org.teleal.cling.model.meta.Device) -> findEmbeddedDevices
    java.util.Collection find(org.teleal.cling.model.types.DeviceType,org.teleal.cling.model.meta.Device) -> find
    java.util.Collection find(org.teleal.cling.model.types.ServiceType,org.teleal.cling.model.meta.Device) -> find
    java.util.Collection findServices(org.teleal.cling.model.types.ServiceType,org.teleal.cling.model.types.ServiceId,org.teleal.cling.model.meta.Device) -> findServices
    org.teleal.cling.model.meta.Service findService(org.teleal.cling.model.types.ServiceId) -> findService
    org.teleal.cling.model.meta.Service findService(org.teleal.cling.model.types.ServiceType) -> findService
    org.teleal.cling.model.types.ServiceType[] findServiceTypes() -> findServiceTypes
    boolean isMatch(org.teleal.cling.model.meta.Service,org.teleal.cling.model.types.ServiceType,org.teleal.cling.model.types.ServiceId) -> isMatch
    boolean isFullyHydrated() -> isFullyHydrated
    java.lang.String getDisplayString() -> getDisplayString
    java.util.List validate() -> validate
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    org.teleal.cling.model.meta.Device newInstance(org.teleal.cling.model.types.UDN,org.teleal.cling.model.meta.UDAVersion,org.teleal.cling.model.types.DeviceType,org.teleal.cling.model.meta.DeviceDetails,org.teleal.cling.model.meta.Icon[],org.teleal.cling.model.meta.Service[],java.util.List) -> newInstance
    org.teleal.cling.model.meta.Service newInstance(org.teleal.cling.model.types.ServiceType,org.teleal.cling.model.types.ServiceId,java.net.URI,java.net.URI,java.net.URI,org.teleal.cling.model.meta.Action[],org.teleal.cling.model.meta.StateVariable[]) -> newInstance
    org.teleal.cling.model.meta.Device[] toDeviceArray(java.util.Collection) -> toDeviceArray
    org.teleal.cling.model.meta.Service[] newServiceArray(int) -> newServiceArray
    org.teleal.cling.model.meta.Service[] toServiceArray(java.util.Collection) -> toServiceArray
    org.teleal.cling.model.resource.Resource[] discoverResources(org.teleal.cling.model.Namespace) -> discoverResources
    java.lang.String toString() -> toString
org.teleal.cling.model.meta.DeviceDetails -> org.teleal.cling.model.meta.DeviceDetails:
    java.util.logging.Logger log -> log
    java.net.URL baseURL -> baseURL
    java.lang.String friendlyName -> friendlyName
    org.teleal.cling.model.meta.ManufacturerDetails manufacturerDetails -> manufacturerDetails
    org.teleal.cling.model.meta.ModelDetails modelDetails -> modelDetails
    java.lang.String serialNumber -> serialNumber
    java.lang.String upc -> upc
    java.net.URI presentationURI -> presentationURI
    org.teleal.cling.model.types.DLNADoc[] dlnaDocs -> dlnaDocs
    org.teleal.cling.model.types.DLNACaps dlnaCaps -> dlnaCaps
    java.net.URL getBaseURL() -> getBaseURL
    java.lang.String getFriendlyName() -> getFriendlyName
    org.teleal.cling.model.meta.ManufacturerDetails getManufacturerDetails() -> getManufacturerDetails
    org.teleal.cling.model.meta.ModelDetails getModelDetails() -> getModelDetails
    java.lang.String getSerialNumber() -> getSerialNumber
    java.lang.String getUpc() -> getUpc
    java.net.URI getPresentationURI() -> getPresentationURI
    org.teleal.cling.model.types.DLNADoc[] getDlnaDocs() -> getDlnaDocs
    org.teleal.cling.model.types.DLNACaps getDlnaCaps() -> getDlnaCaps
    java.util.List validate() -> validate
org.teleal.cling.model.meta.DeviceIdentity -> org.teleal.cling.model.meta.DeviceIdentity:
    org.teleal.cling.model.types.UDN udn -> udn
    java.lang.Integer maxAgeSeconds -> maxAgeSeconds
    org.teleal.cling.model.types.UDN getUdn() -> getUdn
    java.lang.Integer getMaxAgeSeconds() -> getMaxAgeSeconds
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
org.teleal.cling.model.meta.Icon -> org.teleal.cling.model.meta.Icon:
    java.util.logging.Logger log -> log
    org.teleal.common.util.MimeType mimeType -> mimeType
    int width -> width
    int height -> height
    int depth -> depth
    java.net.URI uri -> uri
    byte[] data -> data
    org.teleal.cling.model.meta.Device device -> device
    org.teleal.common.util.MimeType getMimeType() -> getMimeType
    int getWidth() -> getWidth
    int getHeight() -> getHeight
    int getDepth() -> getDepth
    java.net.URI getUri() -> getUri
    byte[] getData() -> getData
    org.teleal.cling.model.meta.Device getDevice() -> getDevice
    void setDevice(org.teleal.cling.model.meta.Device) -> setDevice
    java.util.List validate() -> validate
    org.teleal.cling.model.meta.Icon deepCopy() -> deepCopy
    java.lang.String toString() -> toString
org.teleal.cling.model.meta.LocalDevice -> org.teleal.cling.model.meta.LocalDevice:
    org.teleal.cling.model.profile.DeviceDetailsProvider deviceDetailsProvider -> deviceDetailsProvider
    org.teleal.cling.model.meta.DeviceDetails getDetails(org.teleal.cling.model.profile.ControlPointInfo) -> getDetails
    org.teleal.cling.model.meta.LocalService[] getServices() -> getServices
    org.teleal.cling.model.meta.LocalDevice[] getEmbeddedDevices() -> getEmbeddedDevices
    org.teleal.cling.model.meta.LocalDevice newInstance(org.teleal.cling.model.types.UDN,org.teleal.cling.model.meta.UDAVersion,org.teleal.cling.model.types.DeviceType,org.teleal.cling.model.meta.DeviceDetails,org.teleal.cling.model.meta.Icon[],org.teleal.cling.model.meta.LocalService[],java.util.List) -> newInstance
    org.teleal.cling.model.meta.LocalService newInstance(org.teleal.cling.model.types.ServiceType,org.teleal.cling.model.types.ServiceId,java.net.URI,java.net.URI,java.net.URI,org.teleal.cling.model.meta.Action[],org.teleal.cling.model.meta.StateVariable[]) -> newInstance
    org.teleal.cling.model.meta.LocalDevice[] toDeviceArray(java.util.Collection) -> toDeviceArray
    org.teleal.cling.model.meta.LocalService[] newServiceArray(int) -> newServiceArray
    org.teleal.cling.model.meta.LocalService[] toServiceArray(java.util.Collection) -> toServiceArray
    java.util.List validate() -> validate
    org.teleal.cling.model.resource.Resource[] discoverResources(org.teleal.cling.model.Namespace) -> discoverResources
    org.teleal.cling.model.meta.LocalDevice getRoot() -> getRoot
    org.teleal.cling.model.meta.LocalDevice findDevice(org.teleal.cling.model.types.UDN) -> findDevice
    org.teleal.cling.model.meta.Service[] toServiceArray(java.util.Collection) -> toServiceArray
    org.teleal.cling.model.meta.Service[] newServiceArray(int) -> newServiceArray
    org.teleal.cling.model.meta.Device[] toDeviceArray(java.util.Collection) -> toDeviceArray
    org.teleal.cling.model.meta.Service newInstance(org.teleal.cling.model.types.ServiceType,org.teleal.cling.model.types.ServiceId,java.net.URI,java.net.URI,java.net.URI,org.teleal.cling.model.meta.Action[],org.teleal.cling.model.meta.StateVariable[]) -> newInstance
    org.teleal.cling.model.meta.Device newInstance(org.teleal.cling.model.types.UDN,org.teleal.cling.model.meta.UDAVersion,org.teleal.cling.model.types.DeviceType,org.teleal.cling.model.meta.DeviceDetails,org.teleal.cling.model.meta.Icon[],org.teleal.cling.model.meta.Service[],java.util.List) -> newInstance
    org.teleal.cling.model.meta.Device findDevice(org.teleal.cling.model.types.UDN) -> findDevice
    org.teleal.cling.model.meta.Device getRoot() -> getRoot
    org.teleal.cling.model.meta.Device[] getEmbeddedDevices() -> getEmbeddedDevices
    org.teleal.cling.model.meta.Service[] getServices() -> getServices
org.teleal.cling.model.meta.LocalService -> org.teleal.cling.model.meta.LocalService:
    java.util.Map actionExecutors -> actionExecutors
    java.util.Map stateVariableAccessors -> stateVariableAccessors
    java.util.Set stringConvertibleTypes -> stringConvertibleTypes
    boolean supportsQueryStateVariables -> supportsQueryStateVariables
    org.teleal.cling.model.ServiceManager manager -> manager
    void setManager(org.teleal.cling.model.ServiceManager) -> setManager
    org.teleal.cling.model.ServiceManager getManager() -> getManager
    boolean isSupportsQueryStateVariables() -> isSupportsQueryStateVariables
    java.util.Set getStringConvertibleTypes() -> getStringConvertibleTypes
    boolean isStringConvertibleType(java.lang.Object) -> isStringConvertibleType
    boolean isStringConvertibleType(java.lang.Class) -> isStringConvertibleType
    org.teleal.cling.model.state.StateVariableAccessor getAccessor(java.lang.String) -> getAccessor
    org.teleal.cling.model.state.StateVariableAccessor getAccessor(org.teleal.cling.model.meta.StateVariable) -> getAccessor
    org.teleal.cling.model.action.ActionExecutor getExecutor(java.lang.String) -> getExecutor
    org.teleal.cling.model.action.ActionExecutor getExecutor(org.teleal.cling.model.meta.Action) -> getExecutor
    org.teleal.cling.model.meta.Action getQueryStateVariableAction() -> getQueryStateVariableAction
    java.lang.String toString() -> toString
org.teleal.cling.model.meta.ManufacturerDetails -> org.teleal.cling.model.meta.ManufacturerDetails:
    java.lang.String manufacturer -> manufacturer
    java.net.URI manufacturerURI -> manufacturerURI
    java.lang.String getManufacturer() -> getManufacturer
    java.net.URI getManufacturerURI() -> getManufacturerURI
org.teleal.cling.model.meta.ModelDetails -> org.teleal.cling.model.meta.ModelDetails:
    java.lang.String modelName -> modelName
    java.lang.String modelDescription -> modelDescription
    java.lang.String modelNumber -> modelNumber
    java.net.URI modelURI -> modelURI
    java.lang.String getModelName() -> getModelName
    java.lang.String getModelDescription() -> getModelDescription
    java.lang.String getModelNumber() -> getModelNumber
    java.net.URI getModelURI() -> getModelURI
org.teleal.cling.model.meta.QueryStateVariableAction -> org.teleal.cling.model.meta.QueryStateVariableAction:
    java.lang.String ACTION_NAME -> ACTION_NAME
    java.lang.String VIRTUAL_STATEVARIABLE_INPUT -> VIRTUAL_STATEVARIABLE_INPUT
    java.lang.String VIRTUAL_STATEVARIABLE_OUTPUT -> VIRTUAL_STATEVARIABLE_OUTPUT
    java.lang.String getName() -> getName
    java.util.List validate() -> validate
org.teleal.cling.model.meta.RemoteDevice -> org.teleal.cling.model.meta.RemoteDevice:
    org.teleal.cling.model.meta.RemoteService[] getServices() -> getServices
    org.teleal.cling.model.meta.RemoteDevice[] getEmbeddedDevices() -> getEmbeddedDevices
    java.net.URL normalizeURI(java.net.URI) -> normalizeURI
    org.teleal.cling.model.meta.RemoteDevice newInstance(org.teleal.cling.model.types.UDN,org.teleal.cling.model.meta.UDAVersion,org.teleal.cling.model.types.DeviceType,org.teleal.cling.model.meta.DeviceDetails,org.teleal.cling.model.meta.Icon[],org.teleal.cling.model.meta.RemoteService[],java.util.List) -> newInstance
    org.teleal.cling.model.meta.RemoteService newInstance(org.teleal.cling.model.types.ServiceType,org.teleal.cling.model.types.ServiceId,java.net.URI,java.net.URI,java.net.URI,org.teleal.cling.model.meta.Action[],org.teleal.cling.model.meta.StateVariable[]) -> newInstance
    org.teleal.cling.model.meta.RemoteDevice[] toDeviceArray(java.util.Collection) -> toDeviceArray
    org.teleal.cling.model.meta.RemoteService[] newServiceArray(int) -> newServiceArray
    org.teleal.cling.model.meta.RemoteService[] toServiceArray(java.util.Collection) -> toServiceArray
    org.teleal.cling.model.resource.Resource[] discoverResources(org.teleal.cling.model.Namespace) -> discoverResources
    org.teleal.cling.model.meta.RemoteDevice getRoot() -> getRoot
    org.teleal.cling.model.meta.RemoteDevice findDevice(org.teleal.cling.model.types.UDN) -> findDevice
    org.teleal.cling.model.meta.Service[] toServiceArray(java.util.Collection) -> toServiceArray
    org.teleal.cling.model.meta.Service[] newServiceArray(int) -> newServiceArray
    org.teleal.cling.model.meta.Device[] toDeviceArray(java.util.Collection) -> toDeviceArray
    org.teleal.cling.model.meta.Service newInstance(org.teleal.cling.model.types.ServiceType,org.teleal.cling.model.types.ServiceId,java.net.URI,java.net.URI,java.net.URI,org.teleal.cling.model.meta.Action[],org.teleal.cling.model.meta.StateVariable[]) -> newInstance
    org.teleal.cling.model.meta.Device newInstance(org.teleal.cling.model.types.UDN,org.teleal.cling.model.meta.UDAVersion,org.teleal.cling.model.types.DeviceType,org.teleal.cling.model.meta.DeviceDetails,org.teleal.cling.model.meta.Icon[],org.teleal.cling.model.meta.Service[],java.util.List) -> newInstance
    org.teleal.cling.model.meta.Device findDevice(org.teleal.cling.model.types.UDN) -> findDevice
    org.teleal.cling.model.meta.Device getRoot() -> getRoot
    org.teleal.cling.model.meta.Device[] getEmbeddedDevices() -> getEmbeddedDevices
    org.teleal.cling.model.meta.Service[] getServices() -> getServices
org.teleal.cling.model.meta.RemoteDeviceIdentity -> org.teleal.cling.model.meta.RemoteDeviceIdentity:
    java.net.URL descriptorURL -> descriptorURL
    byte[] interfaceMacAddress -> interfaceMacAddress
    java.net.InetAddress discoveredOnLocalAddress -> discoveredOnLocalAddress
    java.net.URL getDescriptorURL() -> getDescriptorURL
    byte[] getInterfaceMacAddress() -> getInterfaceMacAddress
    java.net.InetAddress getDiscoveredOnLocalAddress() -> getDiscoveredOnLocalAddress
    byte[] getWakeOnLANBytes() -> getWakeOnLANBytes
    java.lang.String toString() -> toString
org.teleal.cling.model.meta.RemoteService -> org.teleal.cling.model.meta.RemoteService:
    java.net.URI descriptorURI -> descriptorURI
    java.net.URI controlURI -> controlURI
    java.net.URI eventSubscriptionURI -> eventSubscriptionURI
    org.teleal.cling.model.meta.Action getQueryStateVariableAction() -> getQueryStateVariableAction
    java.net.URI getDescriptorURI() -> getDescriptorURI
    java.net.URI getControlURI() -> getControlURI
    java.net.URI getEventSubscriptionURI() -> getEventSubscriptionURI
    java.util.List validateThis() -> validateThis
org.teleal.cling.model.meta.Service -> org.teleal.cling.model.meta.Service:
    org.teleal.cling.model.types.ServiceType serviceType -> serviceType
    org.teleal.cling.model.types.ServiceId serviceId -> serviceId
    java.util.Map actions -> actions
    java.util.Map stateVariables -> stateVariables
    org.teleal.cling.model.meta.Device device -> device
    org.teleal.cling.model.types.ServiceType getServiceType() -> getServiceType
    org.teleal.cling.model.types.ServiceId getServiceId() -> getServiceId
    boolean hasActions() -> hasActions
    org.teleal.cling.model.meta.Action[] getActions() -> getActions
    boolean hasStateVariables() -> hasStateVariables
    org.teleal.cling.model.meta.StateVariable[] getStateVariables() -> getStateVariables
    org.teleal.cling.model.meta.Device getDevice() -> getDevice
    void setDevice(org.teleal.cling.model.meta.Device) -> setDevice
    org.teleal.cling.model.meta.Action getAction(java.lang.String) -> getAction
    org.teleal.cling.model.meta.StateVariable getStateVariable(java.lang.String) -> getStateVariable
    org.teleal.cling.model.meta.StateVariable getRelatedStateVariable(org.teleal.cling.model.meta.ActionArgument) -> getRelatedStateVariable
    org.teleal.cling.model.types.Datatype getDatatype(org.teleal.cling.model.meta.ActionArgument) -> getDatatype
    org.teleal.cling.model.ServiceReference getReference() -> getReference
    java.util.List validate() -> validate
    org.teleal.cling.model.meta.Action getQueryStateVariableAction() -> getQueryStateVariableAction
    java.lang.String toString() -> toString
org.teleal.cling.model.meta.StateVariable -> org.teleal.cling.model.meta.StateVariable:
    java.util.logging.Logger log -> log
    java.lang.String name -> name
    org.teleal.cling.model.meta.StateVariableTypeDetails type -> type
    org.teleal.cling.model.meta.StateVariableEventDetails eventDetails -> eventDetails
    org.teleal.cling.model.meta.Service service -> service
    java.lang.String getName() -> getName
    org.teleal.cling.model.meta.StateVariableTypeDetails getTypeDetails() -> getTypeDetails
    org.teleal.cling.model.meta.StateVariableEventDetails getEventDetails() -> getEventDetails
    org.teleal.cling.model.meta.Service getService() -> getService
    void setService(org.teleal.cling.model.meta.Service) -> setService
    java.util.List validate() -> validate
    boolean isModeratedNumericType() -> isModeratedNumericType
    org.teleal.cling.model.meta.StateVariable deepCopy() -> deepCopy
    java.lang.String toString() -> toString
org.teleal.cling.model.meta.StateVariableAllowedValueRange -> org.teleal.cling.model.meta.StateVariableAllowedValueRange:
    java.util.logging.Logger log -> log
    long minimum -> minimum
    long maximum -> maximum
    long step -> step
    long getMinimum() -> getMinimum
    long getMaximum() -> getMaximum
    long getStep() -> getStep
    boolean isInRange(long) -> isInRange
    java.util.List validate() -> validate
    java.lang.String toString() -> toString
org.teleal.cling.model.meta.StateVariableEventDetails -> org.teleal.cling.model.meta.StateVariableEventDetails:
    boolean sendEvents -> sendEvents
    int eventMaximumRateMilliseconds -> eventMaximumRateMilliseconds
    int eventMinimumDelta -> eventMinimumDelta
    boolean isSendEvents() -> isSendEvents
    int getEventMaximumRateMilliseconds() -> getEventMaximumRateMilliseconds
    int getEventMinimumDelta() -> getEventMinimumDelta
org.teleal.cling.model.meta.StateVariableTypeDetails -> org.teleal.cling.model.meta.StateVariableTypeDetails:
    java.util.logging.Logger log -> log
    org.teleal.cling.model.types.Datatype datatype -> datatype
    java.lang.String defaultValue -> defaultValue
    java.lang.String[] allowedValues -> allowedValues
    org.teleal.cling.model.meta.StateVariableAllowedValueRange allowedValueRange -> allowedValueRange
    org.teleal.cling.model.types.Datatype getDatatype() -> getDatatype
    java.lang.String getDefaultValue() -> getDefaultValue
    java.lang.String[] getAllowedValues() -> getAllowedValues
    org.teleal.cling.model.meta.StateVariableAllowedValueRange getAllowedValueRange() -> getAllowedValueRange
    boolean foundDefaultInAllowedValues(java.lang.String,java.lang.String[]) -> foundDefaultInAllowedValues
    java.util.List validate() -> validate
org.teleal.cling.model.meta.UDAVersion -> org.teleal.cling.model.meta.UDAVersion:
    int major -> major
    int minor -> minor
    int getMajor() -> getMajor
    int getMinor() -> getMinor
    java.util.List validate() -> validate
org.teleal.cling.model.profile.ControlPointInfo -> org.teleal.cling.model.profile.ControlPointInfo:
    org.teleal.cling.model.message.UpnpHeaders headers -> headers
    org.teleal.cling.model.message.UpnpHeaders getHeaders() -> getHeaders
org.teleal.cling.model.profile.DeviceDetailsProvider -> org.teleal.cling.model.profile.DeviceDetailsProvider:
    org.teleal.cling.model.meta.DeviceDetails provide(org.teleal.cling.model.profile.ControlPointInfo) -> provide
org.teleal.cling.model.profile.HeaderDeviceDetailsProvider -> org.teleal.cling.model.profile.HeaderDeviceDetailsProvider:
    org.teleal.cling.model.meta.DeviceDetails defaultDeviceDetails -> defaultDeviceDetails
    java.util.Map headerDetails -> headerDetails
    org.teleal.cling.model.meta.DeviceDetails getDefaultDeviceDetails() -> getDefaultDeviceDetails
    java.util.Map getHeaderDetails() -> getHeaderDetails
    org.teleal.cling.model.meta.DeviceDetails provide(org.teleal.cling.model.profile.ControlPointInfo) -> provide
org.teleal.cling.model.profile.HeaderDeviceDetailsProvider$Key -> org.teleal.cling.model.profile.HeaderDeviceDetailsProvider$Key:
    java.lang.String headerName -> headerName
    java.lang.String valuePattern -> valuePattern
    java.util.regex.Pattern pattern -> pattern
    java.lang.String getHeaderName() -> getHeaderName
    java.lang.String getValuePattern() -> getValuePattern
    boolean isValuePatternMatch(java.lang.String) -> isValuePatternMatch
org.teleal.cling.model.resource.DeviceDescriptorResource -> org.teleal.cling.model.resource.DeviceDescriptorResource:
org.teleal.cling.model.resource.IconResource -> org.teleal.cling.model.resource.IconResource:
org.teleal.cling.model.resource.Resource -> org.teleal.cling.model.resource.Resource:
    java.net.URI pathQuery -> pathQuery
    java.lang.Object model -> model
    java.net.URI getPathQuery() -> getPathQuery
    java.lang.Object getModel() -> getModel
    boolean matches(java.net.URI) -> matches
    void maintain(java.util.List,org.teleal.cling.model.ExpirationDetails) -> maintain
    void shutdown() -> shutdown
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
org.teleal.cling.model.resource.ServiceControlResource -> org.teleal.cling.model.resource.ServiceControlResource:
org.teleal.cling.model.resource.ServiceDescriptorResource -> org.teleal.cling.model.resource.ServiceDescriptorResource:
org.teleal.cling.model.resource.ServiceEventCallbackResource -> org.teleal.cling.model.resource.ServiceEventCallbackResource:
org.teleal.cling.model.resource.ServiceEventSubscriptionResource -> org.teleal.cling.model.resource.ServiceEventSubscriptionResource:
org.teleal.cling.model.state.FieldStateVariableAccessor -> org.teleal.cling.model.state.FieldStateVariableAccessor:
    java.lang.reflect.Field field -> field
    java.lang.reflect.Field getField() -> getField
    java.lang.Class getReturnType() -> getReturnType
    java.lang.Object read(java.lang.Object) -> read
    java.lang.String toString() -> toString
org.teleal.cling.model.state.GetterStateVariableAccessor -> org.teleal.cling.model.state.GetterStateVariableAccessor:
    java.lang.reflect.Method getter -> getter
    java.lang.reflect.Method getGetter() -> getGetter
    java.lang.Class getReturnType() -> getReturnType
    java.lang.Object read(java.lang.Object) -> read
    java.lang.String toString() -> toString
org.teleal.cling.model.state.StateVariableAccessor -> org.teleal.cling.model.state.StateVariableAccessor:
    org.teleal.cling.model.state.StateVariableValue read(org.teleal.cling.model.meta.StateVariable,java.lang.Object) -> read
    java.lang.Class getReturnType() -> getReturnType
    java.lang.Object read(java.lang.Object) -> read
    java.lang.String toString() -> toString
org.teleal.cling.model.state.StateVariableAccessor$1AccessCommand -> org.teleal.cling.model.state.StateVariableAccessor$1AccessCommand:
    java.lang.Object result -> result
    java.lang.Object val$serviceImpl -> val$serviceImpl
    org.teleal.cling.model.meta.StateVariable val$stateVariable -> val$stateVariable
    org.teleal.cling.model.state.StateVariableAccessor this$0 -> this$0
    void execute(org.teleal.cling.model.ServiceManager) -> execute
org.teleal.cling.model.state.StateVariableValue -> org.teleal.cling.model.state.StateVariableValue:
    org.teleal.cling.model.meta.StateVariable stateVariable -> stateVariable
    org.teleal.cling.model.meta.StateVariable getStateVariable() -> getStateVariable
org.teleal.cling.model.types.AbstractDatatype -> org.teleal.cling.model.types.AbstractDatatype:
    org.teleal.cling.model.types.Datatype$Builtin builtin -> builtin
    java.lang.Class getValueType() -> getValueType
    boolean isHandlingJavaType(java.lang.Class) -> isHandlingJavaType
    java.lang.Object valueOf(java.lang.String) -> valueOf
    org.teleal.cling.model.types.Datatype$Builtin getBuiltin() -> getBuiltin
    void setBuiltin(org.teleal.cling.model.types.Datatype$Builtin) -> setBuiltin
    java.lang.String getString(java.lang.Object) -> getString
    boolean isValid(java.lang.Object) -> isValid
    java.lang.String toString() -> toString
    java.lang.String getDisplayString() -> getDisplayString
org.teleal.cling.model.types.Base64Datatype -> org.teleal.cling.model.types.Base64Datatype:
    java.lang.Class getValueType() -> getValueType
    java.lang.Byte[] valueOf(java.lang.String) -> valueOf
    java.lang.String getString(java.lang.Byte[]) -> getString
    java.lang.String getString(java.lang.Object) -> getString
    java.lang.Object valueOf(java.lang.String) -> valueOf
org.teleal.cling.model.types.BinHexDatatype -> org.teleal.cling.model.types.BinHexDatatype:
    java.lang.Class getValueType() -> getValueType
    java.lang.Byte[] valueOf(java.lang.String) -> valueOf
    java.lang.String getString(java.lang.Byte[]) -> getString
    java.lang.String getString(java.lang.Object) -> getString
    java.lang.Object valueOf(java.lang.String) -> valueOf
org.teleal.cling.model.types.BooleanDatatype -> org.teleal.cling.model.types.BooleanDatatype:
    boolean isHandlingJavaType(java.lang.Class) -> isHandlingJavaType
    java.lang.Boolean valueOf(java.lang.String) -> valueOf
    java.lang.String getString(java.lang.Boolean) -> getString
    java.lang.String getString(java.lang.Object) -> getString
    java.lang.Object valueOf(java.lang.String) -> valueOf
org.teleal.cling.model.types.CharacterDatatype -> org.teleal.cling.model.types.CharacterDatatype:
    boolean isHandlingJavaType(java.lang.Class) -> isHandlingJavaType
    java.lang.Character valueOf(java.lang.String) -> valueOf
    java.lang.Object valueOf(java.lang.String) -> valueOf
org.teleal.cling.model.types.CustomDatatype -> org.teleal.cling.model.types.CustomDatatype:
    java.lang.String name -> name
    java.lang.String getName() -> getName
    java.lang.String valueOf(java.lang.String) -> valueOf
    java.lang.String toString() -> toString
    java.lang.Object valueOf(java.lang.String) -> valueOf
org.teleal.cling.model.types.DLNACaps -> org.teleal.cling.model.types.DLNACaps:
    java.lang.String[] caps -> caps
    java.lang.String[] getCaps() -> getCaps
    org.teleal.cling.model.types.DLNACaps valueOf(java.lang.String) -> valueOf
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
org.teleal.cling.model.types.DLNADoc -> org.teleal.cling.model.types.DLNADoc:
    java.util.regex.Pattern PATTERN -> PATTERN
    java.lang.String devClass -> devClass
    java.lang.String version -> version
    java.lang.String getDevClass() -> getDevClass
    java.lang.String getVersion() -> getVersion
    org.teleal.cling.model.types.DLNADoc valueOf(java.lang.String) -> valueOf
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
org.teleal.cling.model.types.DLNADoc$Version -> org.teleal.cling.model.types.DLNADoc$Version:
    org.teleal.cling.model.types.DLNADoc$Version V1_0 -> V1_0
    org.teleal.cling.model.types.DLNADoc$Version V1_5 -> V1_5
    java.lang.String s -> s
    org.teleal.cling.model.types.DLNADoc$Version[] $VALUES -> $VALUES
    org.teleal.cling.model.types.DLNADoc$Version[] values() -> values
    org.teleal.cling.model.types.DLNADoc$Version valueOf(java.lang.String) -> valueOf
    java.lang.String toString() -> toString
org.teleal.cling.model.types.Datatype -> org.teleal.cling.model.types.Datatype:
    boolean isHandlingJavaType(java.lang.Class) -> isHandlingJavaType
    org.teleal.cling.model.types.Datatype$Builtin getBuiltin() -> getBuiltin
    boolean isValid(java.lang.Object) -> isValid
    java.lang.String getString(java.lang.Object) -> getString
    java.lang.Object valueOf(java.lang.String) -> valueOf
    java.lang.String getDisplayString() -> getDisplayString
org.teleal.cling.model.types.Datatype$Builtin -> org.teleal.cling.model.types.Datatype$Builtin:
    org.teleal.cling.model.types.Datatype$Builtin UI1 -> UI1
    org.teleal.cling.model.types.Datatype$Builtin UI2 -> UI2
    org.teleal.cling.model.types.Datatype$Builtin UI4 -> UI4
    org.teleal.cling.model.types.Datatype$Builtin I1 -> I1
    org.teleal.cling.model.types.Datatype$Builtin I2 -> I2
    org.teleal.cling.model.types.Datatype$Builtin I2_SHORT -> I2_SHORT
    org.teleal.cling.model.types.Datatype$Builtin I4 -> I4
    org.teleal.cling.model.types.Datatype$Builtin INT -> INT
    org.teleal.cling.model.types.Datatype$Builtin R4 -> R4
    org.teleal.cling.model.types.Datatype$Builtin R8 -> R8
    org.teleal.cling.model.types.Datatype$Builtin NUMBER -> NUMBER
    org.teleal.cling.model.types.Datatype$Builtin FIXED144 -> FIXED144
    org.teleal.cling.model.types.Datatype$Builtin FLOAT -> FLOAT
    org.teleal.cling.model.types.Datatype$Builtin CHAR -> CHAR
    org.teleal.cling.model.types.Datatype$Builtin STRING -> STRING
    org.teleal.cling.model.types.Datatype$Builtin DATE -> DATE
    org.teleal.cling.model.types.Datatype$Builtin DATETIME -> DATETIME
    org.teleal.cling.model.types.Datatype$Builtin DATETIME_TZ -> DATETIME_TZ
    org.teleal.cling.model.types.Datatype$Builtin TIME -> TIME
    org.teleal.cling.model.types.Datatype$Builtin TIME_TZ -> TIME_TZ
    org.teleal.cling.model.types.Datatype$Builtin BOOLEAN -> BOOLEAN
    org.teleal.cling.model.types.Datatype$Builtin BIN_BASE64 -> BIN_BASE64
    org.teleal.cling.model.types.Datatype$Builtin BIN_HEX -> BIN_HEX
    org.teleal.cling.model.types.Datatype$Builtin URI -> URI
    org.teleal.cling.model.types.Datatype$Builtin UUID -> UUID
    java.util.Map byName -> byName
    java.lang.String descriptorName -> descriptorName
    org.teleal.cling.model.types.Datatype datatype -> datatype
    org.teleal.cling.model.types.Datatype$Builtin[] $VALUES -> $VALUES
    org.teleal.cling.model.types.Datatype$Builtin[] values() -> values
    org.teleal.cling.model.types.Datatype$Builtin valueOf(java.lang.String) -> valueOf
    java.lang.String getDescriptorName() -> getDescriptorName
    org.teleal.cling.model.types.Datatype getDatatype() -> getDatatype
    org.teleal.cling.model.types.Datatype$Builtin getByDescriptorName(java.lang.String) -> getByDescriptorName
    boolean isNumeric(org.teleal.cling.model.types.Datatype$Builtin) -> isNumeric
org.teleal.cling.model.types.Datatype$Builtin$1 -> org.teleal.cling.model.types.Datatype$Builtin$1:
org.teleal.cling.model.types.Datatype$Default -> org.teleal.cling.model.types.Datatype$Default:
    org.teleal.cling.model.types.Datatype$Default BOOLEAN -> BOOLEAN
    org.teleal.cling.model.types.Datatype$Default BOOLEAN_PRIMITIVE -> BOOLEAN_PRIMITIVE
    org.teleal.cling.model.types.Datatype$Default SHORT -> SHORT
    org.teleal.cling.model.types.Datatype$Default SHORT_PRIMITIVE -> SHORT_PRIMITIVE
    org.teleal.cling.model.types.Datatype$Default INTEGER -> INTEGER
    org.teleal.cling.model.types.Datatype$Default INTEGER_PRIMITIVE -> INTEGER_PRIMITIVE
    org.teleal.cling.model.types.Datatype$Default UNSIGNED_INTEGER_ONE_BYTE -> UNSIGNED_INTEGER_ONE_BYTE
    org.teleal.cling.model.types.Datatype$Default UNSIGNED_INTEGER_TWO_BYTES -> UNSIGNED_INTEGER_TWO_BYTES
    org.teleal.cling.model.types.Datatype$Default UNSIGNED_INTEGER_FOUR_BYTES -> UNSIGNED_INTEGER_FOUR_BYTES
    org.teleal.cling.model.types.Datatype$Default FLOAT -> FLOAT
    org.teleal.cling.model.types.Datatype$Default FLOAT_PRIMITIVE -> FLOAT_PRIMITIVE
    org.teleal.cling.model.types.Datatype$Default DOUBLE -> DOUBLE
    org.teleal.cling.model.types.Datatype$Default DOUBLE_PRIMTIIVE -> DOUBLE_PRIMTIIVE
    org.teleal.cling.model.types.Datatype$Default CHAR -> CHAR
    org.teleal.cling.model.types.Datatype$Default CHAR_PRIMITIVE -> CHAR_PRIMITIVE
    org.teleal.cling.model.types.Datatype$Default STRING -> STRING
    org.teleal.cling.model.types.Datatype$Default CALENDAR -> CALENDAR
    org.teleal.cling.model.types.Datatype$Default BYTES -> BYTES
    org.teleal.cling.model.types.Datatype$Default URI -> URI
    java.lang.Class javaType -> javaType
    org.teleal.cling.model.types.Datatype$Builtin builtinType -> builtinType
    org.teleal.cling.model.types.Datatype$Default[] $VALUES -> $VALUES
    org.teleal.cling.model.types.Datatype$Default[] values() -> values
    org.teleal.cling.model.types.Datatype$Default valueOf(java.lang.String) -> valueOf
    java.lang.Class getJavaType() -> getJavaType
    org.teleal.cling.model.types.Datatype$Builtin getBuiltinType() -> getBuiltinType
    org.teleal.cling.model.types.Datatype$Default getByJavaType(java.lang.Class) -> getByJavaType
    java.lang.String toString() -> toString
org.teleal.cling.model.types.DateTimeDatatype -> org.teleal.cling.model.types.DateTimeDatatype:
    java.lang.String[] readFormats -> readFormats
    java.lang.String writeFormat -> writeFormat
    java.util.Calendar valueOf(java.lang.String) -> valueOf
    java.lang.String getString(java.util.Calendar) -> getString
    java.lang.String normalizeTimeZone(java.lang.String) -> normalizeTimeZone
    java.util.Date getDateValue(java.lang.String,java.lang.String[]) -> getDateValue
    java.util.TimeZone getTimeZone() -> getTimeZone
    java.lang.String getString(java.lang.Object) -> getString
    java.lang.Object valueOf(java.lang.String) -> valueOf
org.teleal.cling.model.types.DeviceType -> org.teleal.cling.model.types.DeviceType:
    java.util.regex.Pattern PATTERN -> PATTERN
    java.lang.String namespace -> namespace
    java.lang.String type -> type
    int version -> version
    java.lang.String getNamespace() -> getNamespace
    java.lang.String getType() -> getType
    int getVersion() -> getVersion
    org.teleal.cling.model.types.DeviceType valueOf(java.lang.String) -> valueOf
    boolean implementsVersion(org.teleal.cling.model.types.DeviceType) -> implementsVersion
    java.lang.String getDisplayString() -> getDisplayString
    java.lang.String toString() -> toString
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
org.teleal.cling.model.types.DoubleDatatype -> org.teleal.cling.model.types.DoubleDatatype:
    boolean isHandlingJavaType(java.lang.Class) -> isHandlingJavaType
    java.lang.Double valueOf(java.lang.String) -> valueOf
    java.lang.Object valueOf(java.lang.String) -> valueOf
org.teleal.cling.model.types.ErrorCode -> org.teleal.cling.model.types.ErrorCode:
    org.teleal.cling.model.types.ErrorCode INVALID_ACTION -> INVALID_ACTION
    org.teleal.cling.model.types.ErrorCode INVALID_ARGS -> INVALID_ARGS
    org.teleal.cling.model.types.ErrorCode ACTION_FAILED -> ACTION_FAILED
    org.teleal.cling.model.types.ErrorCode ARGUMENT_VALUE_INVALID -> ARGUMENT_VALUE_INVALID
    org.teleal.cling.model.types.ErrorCode ARGUMENT_VALUE_OUT_OF_RANGE -> ARGUMENT_VALUE_OUT_OF_RANGE
    org.teleal.cling.model.types.ErrorCode OPTIONAL_ACTION -> OPTIONAL_ACTION
    org.teleal.cling.model.types.ErrorCode OUT_OF_MEMORY -> OUT_OF_MEMORY
    org.teleal.cling.model.types.ErrorCode HUMAN_INTERVENTION_REQUIRED -> HUMAN_INTERVENTION_REQUIRED
    org.teleal.cling.model.types.ErrorCode ARGUMENT_TOO_LONG -> ARGUMENT_TOO_LONG
    org.teleal.cling.model.types.ErrorCode ACTION_NOT_AUTHORIZED -> ACTION_NOT_AUTHORIZED
    org.teleal.cling.model.types.ErrorCode SIGNATURE_FAILURE -> SIGNATURE_FAILURE
    org.teleal.cling.model.types.ErrorCode SIGNATURE_MISSING -> SIGNATURE_MISSING
    org.teleal.cling.model.types.ErrorCode NOT_ENCRYPTED -> NOT_ENCRYPTED
    org.teleal.cling.model.types.ErrorCode INVALID_SEQUENCE -> INVALID_SEQUENCE
    org.teleal.cling.model.types.ErrorCode INVALID_CONTROL_URL -> INVALID_CONTROL_URL
    org.teleal.cling.model.types.ErrorCode NO_SUCH_SESSION -> NO_SUCH_SESSION
    int code -> code
    java.lang.String description -> description
    org.teleal.cling.model.types.ErrorCode[] $VALUES -> $VALUES
    org.teleal.cling.model.types.ErrorCode[] values() -> values
    org.teleal.cling.model.types.ErrorCode valueOf(java.lang.String) -> valueOf
    int getCode() -> getCode
    java.lang.String getDescription() -> getDescription
    org.teleal.cling.model.types.ErrorCode getByCode(int) -> getByCode
org.teleal.cling.model.types.FloatDatatype -> org.teleal.cling.model.types.FloatDatatype:
    boolean isHandlingJavaType(java.lang.Class) -> isHandlingJavaType
    java.lang.Float valueOf(java.lang.String) -> valueOf
    java.lang.Object valueOf(java.lang.String) -> valueOf
org.teleal.cling.model.types.HostPort -> org.teleal.cling.model.types.HostPort:
    java.lang.String host -> host
    int port -> port
    java.lang.String getHost() -> getHost
    void setHost(java.lang.String) -> setHost
    int getPort() -> getPort
    void setPort(int) -> setPort
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
org.teleal.cling.model.types.IntegerDatatype -> org.teleal.cling.model.types.IntegerDatatype:
    int byteSize -> byteSize
    boolean isHandlingJavaType(java.lang.Class) -> isHandlingJavaType
    java.lang.Integer valueOf(java.lang.String) -> valueOf
    boolean isValid(java.lang.Integer) -> isValid
    int getMinValue() -> getMinValue
    int getMaxValue() -> getMaxValue
    int getByteSize() -> getByteSize
    boolean isValid(java.lang.Object) -> isValid
    java.lang.Object valueOf(java.lang.String) -> valueOf
org.teleal.cling.model.types.InvalidValueException -> org.teleal.cling.model.types.InvalidValueException:
org.teleal.cling.model.types.NamedDeviceType -> org.teleal.cling.model.types.NamedDeviceType:
    org.teleal.cling.model.types.UDN udn -> udn
    org.teleal.cling.model.types.DeviceType deviceType -> deviceType
    org.teleal.cling.model.types.UDN getUdn() -> getUdn
    org.teleal.cling.model.types.DeviceType getDeviceType() -> getDeviceType
    org.teleal.cling.model.types.NamedDeviceType valueOf(java.lang.String) -> valueOf
    java.lang.String toString() -> toString
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
org.teleal.cling.model.types.NamedServiceType -> org.teleal.cling.model.types.NamedServiceType:
    org.teleal.cling.model.types.UDN udn -> udn
    org.teleal.cling.model.types.ServiceType serviceType -> serviceType
    org.teleal.cling.model.types.UDN getUdn() -> getUdn
    org.teleal.cling.model.types.ServiceType getServiceType() -> getServiceType
    org.teleal.cling.model.types.NamedServiceType valueOf(java.lang.String) -> valueOf
    java.lang.String toString() -> toString
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
org.teleal.cling.model.types.NotificationSubtype -> org.teleal.cling.model.types.NotificationSubtype:
    org.teleal.cling.model.types.NotificationSubtype ALIVE -> ALIVE
    org.teleal.cling.model.types.NotificationSubtype UPDATE -> UPDATE
    org.teleal.cling.model.types.NotificationSubtype BYEBYE -> BYEBYE
    org.teleal.cling.model.types.NotificationSubtype ALL -> ALL
    org.teleal.cling.model.types.NotificationSubtype DISCOVER -> DISCOVER
    org.teleal.cling.model.types.NotificationSubtype PROPCHANGE -> PROPCHANGE
    java.lang.String headerString -> headerString
    org.teleal.cling.model.types.NotificationSubtype[] $VALUES -> $VALUES
    org.teleal.cling.model.types.NotificationSubtype[] values() -> values
    org.teleal.cling.model.types.NotificationSubtype valueOf(java.lang.String) -> valueOf
    java.lang.String getHeaderString() -> getHeaderString
org.teleal.cling.model.types.ServiceId -> org.teleal.cling.model.types.ServiceId:
    java.util.regex.Pattern PATTERN -> PATTERN
    java.lang.String namespace -> namespace
    java.lang.String id -> id
    java.lang.String getNamespace() -> getNamespace
    java.lang.String getId() -> getId
    org.teleal.cling.model.types.ServiceId valueOf(java.lang.String) -> valueOf
    java.lang.String toString() -> toString
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
org.teleal.cling.model.types.ServiceType -> org.teleal.cling.model.types.ServiceType:
    java.util.regex.Pattern PATTERN -> PATTERN
    java.lang.String namespace -> namespace
    java.lang.String type -> type
    int version -> version
    java.lang.String getNamespace() -> getNamespace
    java.lang.String getType() -> getType
    int getVersion() -> getVersion
    org.teleal.cling.model.types.ServiceType valueOf(java.lang.String) -> valueOf
    boolean implementsVersion(org.teleal.cling.model.types.ServiceType) -> implementsVersion
    java.lang.String toFriendlyString() -> toFriendlyString
    java.lang.String toString() -> toString
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
org.teleal.cling.model.types.ShortDatatype -> org.teleal.cling.model.types.ShortDatatype:
    boolean isHandlingJavaType(java.lang.Class) -> isHandlingJavaType
    java.lang.Short valueOf(java.lang.String) -> valueOf
    java.lang.Object valueOf(java.lang.String) -> valueOf
org.teleal.cling.model.types.SoapActionType -> org.teleal.cling.model.types.SoapActionType:
    java.lang.String MAGIC_CONTROL_NS -> MAGIC_CONTROL_NS
    java.lang.String MAGIC_CONTROL_TYPE -> MAGIC_CONTROL_TYPE
    java.util.regex.Pattern PATTERN_MAGIC_CONTROL -> PATTERN_MAGIC_CONTROL
    java.util.regex.Pattern PATTERN -> PATTERN
    java.lang.String namespace -> namespace
    java.lang.String type -> type
    java.lang.String actionName -> actionName
    java.lang.Integer version -> version
    java.lang.String getActionName() -> getActionName
    java.lang.String getNamespace() -> getNamespace
    java.lang.String getType() -> getType
    java.lang.Integer getVersion() -> getVersion
    org.teleal.cling.model.types.SoapActionType valueOf(java.lang.String) -> valueOf
    org.teleal.cling.model.types.ServiceType getServiceType() -> getServiceType
    java.lang.String toString() -> toString
    java.lang.String getTypeString() -> getTypeString
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
org.teleal.cling.model.types.StringDatatype -> org.teleal.cling.model.types.StringDatatype:
    java.lang.String valueOf(java.lang.String) -> valueOf
    java.lang.Object valueOf(java.lang.String) -> valueOf
org.teleal.cling.model.types.UDADeviceType -> org.teleal.cling.model.types.UDADeviceType:
    java.lang.String DEFAULT_NAMESPACE -> DEFAULT_NAMESPACE
    java.util.regex.Pattern PATTERN -> PATTERN
    org.teleal.cling.model.types.UDADeviceType valueOf(java.lang.String) -> valueOf
org.teleal.cling.model.types.UDAServiceId -> org.teleal.cling.model.types.UDAServiceId:
    java.lang.String DEFAULT_NAMESPACE -> DEFAULT_NAMESPACE
    java.lang.String BROKEN_DEFAULT_NAMESPACE -> BROKEN_DEFAULT_NAMESPACE
    java.util.regex.Pattern PATTERN -> PATTERN
    java.util.regex.Pattern BROKEN_PATTERN -> BROKEN_PATTERN
    org.teleal.cling.model.types.UDAServiceId valueOf(java.lang.String) -> valueOf
org.teleal.cling.model.types.UDAServiceType -> org.teleal.cling.model.types.UDAServiceType:
    java.lang.String DEFAULT_NAMESPACE -> DEFAULT_NAMESPACE
    java.util.regex.Pattern PATTERN -> PATTERN
    org.teleal.cling.model.types.UDAServiceType valueOf(java.lang.String) -> valueOf
org.teleal.cling.model.types.UDN -> org.teleal.cling.model.types.UDN:
    java.lang.String PREFIX -> PREFIX
    java.lang.String identifierString -> identifierString
    boolean isUDA11Compliant() -> isUDA11Compliant
    java.lang.String getIdentifierString() -> getIdentifierString
    org.teleal.cling.model.types.UDN valueOf(java.lang.String) -> valueOf
    org.teleal.cling.model.types.UDN uniqueSystemIdentifier(java.lang.String) -> uniqueSystemIdentifier
    java.lang.String toString() -> toString
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
org.teleal.cling.model.types.URIDatatype -> org.teleal.cling.model.types.URIDatatype:
    java.net.URI valueOf(java.lang.String) -> valueOf
    java.lang.Object valueOf(java.lang.String) -> valueOf
org.teleal.cling.model.types.UnsignedIntegerFourBytes -> org.teleal.cling.model.types.UnsignedIntegerFourBytes:
    org.teleal.cling.model.types.UnsignedVariableInteger$Bits getBits() -> getBits
org.teleal.cling.model.types.UnsignedIntegerFourBytesDatatype -> org.teleal.cling.model.types.UnsignedIntegerFourBytesDatatype:
    org.teleal.cling.model.types.UnsignedIntegerFourBytes valueOf(java.lang.String) -> valueOf
    java.lang.Object valueOf(java.lang.String) -> valueOf
org.teleal.cling.model.types.UnsignedIntegerOneByte -> org.teleal.cling.model.types.UnsignedIntegerOneByte:
    org.teleal.cling.model.types.UnsignedVariableInteger$Bits getBits() -> getBits
org.teleal.cling.model.types.UnsignedIntegerOneByteDatatype -> org.teleal.cling.model.types.UnsignedIntegerOneByteDatatype:
    org.teleal.cling.model.types.UnsignedIntegerOneByte valueOf(java.lang.String) -> valueOf
    java.lang.Object valueOf(java.lang.String) -> valueOf
org.teleal.cling.model.types.UnsignedIntegerTwoBytes -> org.teleal.cling.model.types.UnsignedIntegerTwoBytes:
    org.teleal.cling.model.types.UnsignedVariableInteger$Bits getBits() -> getBits
org.teleal.cling.model.types.UnsignedIntegerTwoBytesDatatype -> org.teleal.cling.model.types.UnsignedIntegerTwoBytesDatatype:
    org.teleal.cling.model.types.UnsignedIntegerTwoBytes valueOf(java.lang.String) -> valueOf
    java.lang.Object valueOf(java.lang.String) -> valueOf
org.teleal.cling.model.types.UnsignedVariableInteger -> org.teleal.cling.model.types.UnsignedVariableInteger:
    java.util.logging.Logger log -> log
    long value -> value
    org.teleal.cling.model.types.UnsignedVariableInteger setValue(long) -> setValue
    java.lang.Long getValue() -> getValue
    void isInRange(long) -> isInRange
    int getMinValue() -> getMinValue
    org.teleal.cling.model.types.UnsignedVariableInteger$Bits getBits() -> getBits
    org.teleal.cling.model.types.UnsignedVariableInteger increment(boolean) -> increment
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
org.teleal.cling.model.types.UnsignedVariableInteger$Bits -> org.teleal.cling.model.types.UnsignedVariableInteger$Bits:
    org.teleal.cling.model.types.UnsignedVariableInteger$Bits EIGHT -> EIGHT
    org.teleal.cling.model.types.UnsignedVariableInteger$Bits SIXTEEN -> SIXTEEN
    org.teleal.cling.model.types.UnsignedVariableInteger$Bits TWENTYFOUR -> TWENTYFOUR
    org.teleal.cling.model.types.UnsignedVariableInteger$Bits THIRTYTWO -> THIRTYTWO
    long maxValue -> maxValue
    org.teleal.cling.model.types.UnsignedVariableInteger$Bits[] $VALUES -> $VALUES
    org.teleal.cling.model.types.UnsignedVariableInteger$Bits[] values() -> values
    org.teleal.cling.model.types.UnsignedVariableInteger$Bits valueOf(java.lang.String) -> valueOf
    long getMaxValue() -> getMaxValue
org.teleal.cling.model.types.csv.CSV -> org.teleal.cling.model.types.csv.CSV:
    org.teleal.cling.model.types.Datatype$Builtin datatype -> datatype
    java.util.List parseString(java.lang.String) -> parseString
    org.teleal.cling.model.types.Datatype$Builtin getBuiltinDatatype() -> getBuiltinDatatype
    java.lang.String toString() -> toString
org.teleal.cling.model.types.csv.CSVBoolean -> org.teleal.cling.model.types.csv.CSVBoolean:
org.teleal.cling.model.types.csv.CSVBytes -> org.teleal.cling.model.types.csv.CSVBytes:
org.teleal.cling.model.types.csv.CSVCharacter -> org.teleal.cling.model.types.csv.CSVCharacter:
org.teleal.cling.model.types.csv.CSVDate -> org.teleal.cling.model.types.csv.CSVDate:
org.teleal.cling.model.types.csv.CSVDouble -> org.teleal.cling.model.types.csv.CSVDouble:
org.teleal.cling.model.types.csv.CSVFloat -> org.teleal.cling.model.types.csv.CSVFloat:
org.teleal.cling.model.types.csv.CSVInteger -> org.teleal.cling.model.types.csv.CSVInteger:
org.teleal.cling.model.types.csv.CSVShort -> org.teleal.cling.model.types.csv.CSVShort:
org.teleal.cling.model.types.csv.CSVString -> org.teleal.cling.model.types.csv.CSVString:
org.teleal.cling.model.types.csv.CSVURI -> org.teleal.cling.model.types.csv.CSVURI:
org.teleal.cling.model.types.csv.CSVUnsignedIntegerFourBytes -> org.teleal.cling.model.types.csv.CSVUnsignedIntegerFourBytes:
org.teleal.cling.model.types.csv.CSVUnsignedIntegerOneByte -> org.teleal.cling.model.types.csv.CSVUnsignedIntegerOneByte:
org.teleal.cling.model.types.csv.CSVUnsignedIntegerTwoBytes -> org.teleal.cling.model.types.csv.CSVUnsignedIntegerTwoBytes:
org.teleal.cling.protocol.ProtocolCreationException -> org.teleal.cling.protocol.ProtocolCreationException:
org.teleal.cling.protocol.ProtocolFactory -> org.teleal.cling.protocol.ProtocolFactory:
    org.teleal.cling.UpnpService getUpnpService() -> getUpnpService
    org.teleal.cling.protocol.ReceivingAsync createReceivingAsync(org.teleal.cling.model.message.IncomingDatagramMessage) -> createReceivingAsync
    org.teleal.cling.protocol.ReceivingSync createReceivingSync(org.teleal.cling.model.message.StreamRequestMessage) -> createReceivingSync
    org.teleal.cling.protocol.async.SendingNotificationAlive createSendingNotificationAlive(org.teleal.cling.model.meta.LocalDevice) -> createSendingNotificationAlive
    org.teleal.cling.protocol.async.SendingNotificationByebye createSendingNotificationByebye(org.teleal.cling.model.meta.LocalDevice) -> createSendingNotificationByebye
    org.teleal.cling.protocol.async.SendingSearch createSendingSearch(org.teleal.cling.model.message.header.UpnpHeader,int) -> createSendingSearch
    org.teleal.cling.protocol.sync.SendingAction createSendingAction(org.teleal.cling.model.action.ActionInvocation,java.net.URL) -> createSendingAction
    org.teleal.cling.protocol.sync.SendingSubscribe createSendingSubscribe(org.teleal.cling.model.gena.RemoteGENASubscription) -> createSendingSubscribe
    org.teleal.cling.protocol.sync.SendingRenewal createSendingRenewal(org.teleal.cling.model.gena.RemoteGENASubscription) -> createSendingRenewal
    org.teleal.cling.protocol.sync.SendingUnsubscribe createSendingUnsubscribe(org.teleal.cling.model.gena.RemoteGENASubscription) -> createSendingUnsubscribe
    org.teleal.cling.protocol.sync.SendingEvent createSendingEvent(org.teleal.cling.model.gena.LocalGENASubscription) -> createSendingEvent
org.teleal.cling.protocol.ProtocolFactoryImpl -> org.teleal.cling.protocol.ProtocolFactoryImpl:
    java.util.logging.Logger log -> log
    org.teleal.cling.UpnpService upnpService -> upnpService
    org.teleal.cling.UpnpService getUpnpService() -> getUpnpService
    org.teleal.cling.protocol.ReceivingAsync createReceivingAsync(org.teleal.cling.model.message.IncomingDatagramMessage) -> createReceivingAsync
    boolean isByeBye(org.teleal.cling.model.message.IncomingDatagramMessage) -> isByeBye
    boolean isSupportedServiceAdvertisement(org.teleal.cling.model.message.IncomingDatagramMessage) -> isSupportedServiceAdvertisement
    org.teleal.cling.protocol.ReceivingSync createReceivingSync(org.teleal.cling.model.message.StreamRequestMessage) -> createReceivingSync
    org.teleal.cling.protocol.async.SendingNotificationAlive createSendingNotificationAlive(org.teleal.cling.model.meta.LocalDevice) -> createSendingNotificationAlive
    org.teleal.cling.protocol.async.SendingNotificationByebye createSendingNotificationByebye(org.teleal.cling.model.meta.LocalDevice) -> createSendingNotificationByebye
    org.teleal.cling.protocol.async.SendingSearch createSendingSearch(org.teleal.cling.model.message.header.UpnpHeader,int) -> createSendingSearch
    org.teleal.cling.protocol.sync.SendingAction createSendingAction(org.teleal.cling.model.action.ActionInvocation,java.net.URL) -> createSendingAction
    org.teleal.cling.protocol.sync.SendingSubscribe createSendingSubscribe(org.teleal.cling.model.gena.RemoteGENASubscription) -> createSendingSubscribe
    org.teleal.cling.protocol.sync.SendingRenewal createSendingRenewal(org.teleal.cling.model.gena.RemoteGENASubscription) -> createSendingRenewal
    org.teleal.cling.protocol.sync.SendingUnsubscribe createSendingUnsubscribe(org.teleal.cling.model.gena.RemoteGENASubscription) -> createSendingUnsubscribe
    org.teleal.cling.protocol.sync.SendingEvent createSendingEvent(org.teleal.cling.model.gena.LocalGENASubscription) -> createSendingEvent
org.teleal.cling.protocol.ProtocolFactoryImpl$1 -> org.teleal.cling.protocol.ProtocolFactoryImpl$1:
    int[] $SwitchMap$org$teleal$cling$model$message$UpnpRequest$Method -> $SwitchMap$org$teleal$cling$model$message$UpnpRequest$Method
org.teleal.cling.protocol.ReceivingAsync -> org.teleal.cling.protocol.ReceivingAsync:
    org.teleal.cling.UpnpService upnpService -> upnpService
    org.teleal.cling.model.message.UpnpMessage inputMessage -> inputMessage
    org.teleal.cling.UpnpService getUpnpService() -> getUpnpService
    org.teleal.cling.model.message.UpnpMessage getInputMessage() -> getInputMessage
    void run() -> run
    boolean waitBeforeExecution() -> waitBeforeExecution
    void execute() -> execute
    org.teleal.cling.model.message.header.UpnpHeader getFirstHeader(org.teleal.cling.model.message.header.UpnpHeader$Type,java.lang.Class) -> getFirstHeader
    java.lang.String toString() -> toString
org.teleal.cling.protocol.ReceivingSync -> org.teleal.cling.protocol.ReceivingSync:
    org.teleal.cling.model.message.StreamResponseMessage outputMessage -> outputMessage
    org.teleal.cling.model.message.StreamResponseMessage getOutputMessage() -> getOutputMessage
    void execute() -> execute
    org.teleal.cling.model.message.StreamResponseMessage executeSync() -> executeSync
    void responseSent(org.teleal.cling.model.message.StreamResponseMessage) -> responseSent
    void responseException(java.lang.Throwable) -> responseException
    java.lang.String toString() -> toString
org.teleal.cling.protocol.RetrieveRemoteDescriptors -> org.teleal.cling.protocol.RetrieveRemoteDescriptors:
    java.util.logging.Logger log -> log
    org.teleal.cling.UpnpService upnpService -> upnpService
    org.teleal.cling.model.meta.RemoteDevice rd -> rd
    java.util.Set activeRetrievals -> activeRetrievals
    org.teleal.cling.UpnpService getUpnpService() -> getUpnpService
    void run() -> run
    void describe() -> describe
    void describe(java.lang.String) -> describe
    org.teleal.cling.model.meta.RemoteDevice describeServices(org.teleal.cling.model.meta.RemoteDevice) -> describeServices
    org.teleal.cling.model.meta.RemoteService describeService(org.teleal.cling.model.meta.RemoteService) -> describeService
    java.util.List filterExclusiveServices(org.teleal.cling.model.meta.RemoteService[]) -> filterExclusiveServices
org.teleal.cling.protocol.SendingAsync -> org.teleal.cling.protocol.SendingAsync:
    org.teleal.cling.UpnpService upnpService -> upnpService
    org.teleal.cling.UpnpService getUpnpService() -> getUpnpService
    void run() -> run
    void execute() -> execute
    java.lang.String toString() -> toString
org.teleal.cling.protocol.SendingSync -> org.teleal.cling.protocol.SendingSync:
    org.teleal.cling.model.message.StreamRequestMessage inputMessage -> inputMessage
    org.teleal.cling.model.message.StreamResponseMessage outputMessage -> outputMessage
    org.teleal.cling.model.message.StreamRequestMessage getInputMessage() -> getInputMessage
    org.teleal.cling.model.message.StreamResponseMessage getOutputMessage() -> getOutputMessage
    void execute() -> execute
    org.teleal.cling.model.message.StreamResponseMessage executeSync() -> executeSync
    java.lang.String toString() -> toString
org.teleal.cling.protocol.async.ReceivingNotification -> org.teleal.cling.protocol.async.ReceivingNotification:
    java.util.logging.Logger log -> log
    void execute() -> execute
org.teleal.cling.protocol.async.ReceivingSearch -> org.teleal.cling.protocol.async.ReceivingSearch:
    java.util.logging.Logger log -> log
    java.util.Random randomGenerator -> randomGenerator
    void execute() -> execute
    boolean waitBeforeExecution() -> waitBeforeExecution
    void sendResponses(org.teleal.cling.model.message.header.UpnpHeader,org.teleal.cling.model.NetworkAddress) -> sendResponses
    void sendSearchResponseAll(org.teleal.cling.model.NetworkAddress) -> sendSearchResponseAll
    java.util.List createDeviceMessages(org.teleal.cling.model.meta.LocalDevice,org.teleal.cling.model.NetworkAddress) -> createDeviceMessages
    java.util.List createServiceTypeMessages(org.teleal.cling.model.meta.LocalDevice,org.teleal.cling.model.NetworkAddress) -> createServiceTypeMessages
    void sendSearchResponseRootDevices(org.teleal.cling.model.NetworkAddress) -> sendSearchResponseRootDevices
    void sendSearchResponseUDN(org.teleal.cling.model.types.UDN,org.teleal.cling.model.NetworkAddress) -> sendSearchResponseUDN
    void sendSearchResponseDeviceType(org.teleal.cling.model.types.DeviceType,org.teleal.cling.model.NetworkAddress) -> sendSearchResponseDeviceType
    void sendSearchResponseServiceType(org.teleal.cling.model.types.ServiceType,org.teleal.cling.model.NetworkAddress) -> sendSearchResponseServiceType
    org.teleal.cling.model.Location getDescriptorLocation(org.teleal.cling.model.NetworkAddress,org.teleal.cling.model.meta.LocalDevice) -> getDescriptorLocation
org.teleal.cling.protocol.async.ReceivingSearchResponse -> org.teleal.cling.protocol.async.ReceivingSearchResponse:
    java.util.logging.Logger log -> log
    void execute() -> execute
org.teleal.cling.protocol.async.SendingNotification -> org.teleal.cling.protocol.async.SendingNotification:
    java.util.logging.Logger log -> log
    org.teleal.cling.model.meta.LocalDevice device -> device
    org.teleal.cling.model.meta.LocalDevice getDevice() -> getDevice
    void execute() -> execute
    int getBulkRepeat() -> getBulkRepeat
    int getBulkIntervalMilliseconds() -> getBulkIntervalMilliseconds
    void sendMessages(org.teleal.cling.model.Location) -> sendMessages
    java.util.List createDeviceMessages(org.teleal.cling.model.meta.LocalDevice,org.teleal.cling.model.Location) -> createDeviceMessages
    java.util.List createServiceTypeMessages(org.teleal.cling.model.meta.LocalDevice,org.teleal.cling.model.Location) -> createServiceTypeMessages
    org.teleal.cling.model.types.NotificationSubtype getNotificationSubtype() -> getNotificationSubtype
org.teleal.cling.protocol.async.SendingNotificationAlive -> org.teleal.cling.protocol.async.SendingNotificationAlive:
    java.util.logging.Logger log -> log
    void execute() -> execute
    org.teleal.cling.model.types.NotificationSubtype getNotificationSubtype() -> getNotificationSubtype
org.teleal.cling.protocol.async.SendingNotificationByebye -> org.teleal.cling.protocol.async.SendingNotificationByebye:
    java.util.logging.Logger log -> log
    void execute() -> execute
    org.teleal.cling.model.types.NotificationSubtype getNotificationSubtype() -> getNotificationSubtype
org.teleal.cling.protocol.async.SendingSearch -> org.teleal.cling.protocol.async.SendingSearch:
    java.util.logging.Logger log -> log
    org.teleal.cling.model.message.header.UpnpHeader searchTarget -> searchTarget
    int mxSeconds -> mxSeconds
    org.teleal.cling.model.message.header.UpnpHeader getSearchTarget() -> getSearchTarget
    int getMxSeconds() -> getMxSeconds
    void execute() -> execute
    int getBulkRepeat() -> getBulkRepeat
    int getBulkIntervalMilliseconds() -> getBulkIntervalMilliseconds
org.teleal.cling.protocol.sync.ReceivingAction -> org.teleal.cling.protocol.sync.ReceivingAction:
    java.util.logging.Logger log -> log
    java.lang.ThreadLocal requestThreadLocal -> requestThreadLocal
    java.lang.ThreadLocal extraResponseHeadersThreadLocal -> extraResponseHeadersThreadLocal
    org.teleal.cling.model.message.StreamResponseMessage executeSync() -> executeSync
    org.teleal.cling.model.message.control.IncomingActionRequestMessage getRequestMessage() -> getRequestMessage
    org.teleal.cling.model.message.UpnpHeaders getExtraResponseHeaders() -> getExtraResponseHeaders
org.teleal.cling.protocol.sync.ReceivingEvent -> org.teleal.cling.protocol.sync.ReceivingEvent:
    java.util.logging.Logger log -> log
    org.teleal.cling.model.message.gena.OutgoingEventResponseMessage executeSync() -> executeSync
    org.teleal.cling.model.message.StreamResponseMessage executeSync() -> executeSync
    java.util.logging.Logger access$000() -> access$000
org.teleal.cling.protocol.sync.ReceivingEvent$1 -> org.teleal.cling.protocol.sync.ReceivingEvent$1:
    org.teleal.cling.model.gena.RemoteGENASubscription val$subscription -> val$subscription
    org.teleal.cling.model.message.gena.IncomingEventRequestMessage val$requestMessage -> val$requestMessage
    org.teleal.cling.protocol.sync.ReceivingEvent this$0 -> this$0
    void run() -> run
org.teleal.cling.protocol.sync.ReceivingRetrieval -> org.teleal.cling.protocol.sync.ReceivingRetrieval:
    java.util.logging.Logger log -> log
    org.teleal.cling.model.message.StreamResponseMessage executeSync() -> executeSync
    org.teleal.cling.model.message.StreamResponseMessage createResponse(java.net.URI,org.teleal.cling.model.resource.Resource) -> createResponse
    org.teleal.cling.model.profile.ControlPointInfo createControlPointInfo() -> createControlPointInfo
org.teleal.cling.protocol.sync.ReceivingSubscribe -> org.teleal.cling.protocol.sync.ReceivingSubscribe:
    java.util.logging.Logger log -> log
    org.teleal.cling.model.gena.LocalGENASubscription subscription -> subscription
    org.teleal.cling.model.message.gena.OutgoingSubscribeResponseMessage executeSync() -> executeSync
    org.teleal.cling.model.message.gena.OutgoingSubscribeResponseMessage processRenewal(org.teleal.cling.model.meta.LocalService,org.teleal.cling.model.message.gena.IncomingSubscribeRequestMessage) -> processRenewal
    org.teleal.cling.model.message.gena.OutgoingSubscribeResponseMessage processNewSubscription(org.teleal.cling.model.meta.LocalService,org.teleal.cling.model.message.gena.IncomingSubscribeRequestMessage) -> processNewSubscription
    void responseSent(org.teleal.cling.model.message.StreamResponseMessage) -> responseSent
    void responseException(java.lang.Throwable) -> responseException
    org.teleal.cling.model.message.StreamResponseMessage executeSync() -> executeSync
org.teleal.cling.protocol.sync.ReceivingSubscribe$1 -> org.teleal.cling.protocol.sync.ReceivingSubscribe$1:
    org.teleal.cling.protocol.sync.ReceivingSubscribe this$0 -> this$0
    void established() -> established
    void ended(org.teleal.cling.model.gena.CancelReason) -> ended
    void eventReceived() -> eventReceived
org.teleal.cling.protocol.sync.ReceivingUnsubscribe -> org.teleal.cling.protocol.sync.ReceivingUnsubscribe:
    java.util.logging.Logger log -> log
    org.teleal.cling.model.message.StreamResponseMessage executeSync() -> executeSync
org.teleal.cling.protocol.sync.SendingAction -> org.teleal.cling.protocol.sync.SendingAction:
    java.util.logging.Logger log -> log
    org.teleal.cling.model.action.ActionInvocation actionInvocation -> actionInvocation
    org.teleal.cling.model.message.control.IncomingActionResponseMessage executeSync() -> executeSync
    org.teleal.cling.model.message.control.IncomingActionResponseMessage invokeRemote(org.teleal.cling.model.message.control.OutgoingActionRequestMessage) -> invokeRemote
    org.teleal.cling.model.message.StreamResponseMessage sendRemoteRequest(org.teleal.cling.model.message.control.OutgoingActionRequestMessage) -> sendRemoteRequest
    void handleResponse(org.teleal.cling.model.message.control.IncomingActionResponseMessage) -> handleResponse
    void handleResponseFailure(org.teleal.cling.model.message.control.IncomingActionResponseMessage) -> handleResponseFailure
    org.teleal.cling.model.message.StreamResponseMessage executeSync() -> executeSync
org.teleal.cling.protocol.sync.SendingEvent -> org.teleal.cling.protocol.sync.SendingEvent:
    java.util.logging.Logger log -> log
    java.lang.String subscriptionId -> subscriptionId
    org.teleal.cling.model.message.gena.OutgoingEventRequestMessage[] requestMessages -> requestMessages
    org.teleal.cling.model.types.UnsignedIntegerFourBytes currentSequence -> currentSequence
    org.teleal.cling.model.message.StreamResponseMessage executeSync() -> executeSync
org.teleal.cling.protocol.sync.SendingRenewal -> org.teleal.cling.protocol.sync.SendingRenewal:
    java.util.logging.Logger log -> log
    org.teleal.cling.model.gena.RemoteGENASubscription subscription -> subscription
    org.teleal.cling.model.message.gena.IncomingSubscribeResponseMessage executeSync() -> executeSync
    org.teleal.cling.model.message.StreamResponseMessage executeSync() -> executeSync
org.teleal.cling.protocol.sync.SendingRenewal$1 -> org.teleal.cling.protocol.sync.SendingRenewal$1:
    org.teleal.cling.protocol.sync.SendingRenewal this$0 -> this$0
    void run() -> run
org.teleal.cling.protocol.sync.SendingRenewal$2 -> org.teleal.cling.protocol.sync.SendingRenewal$2:
    org.teleal.cling.model.message.gena.IncomingSubscribeResponseMessage val$responseMessage -> val$responseMessage
    org.teleal.cling.protocol.sync.SendingRenewal this$0 -> this$0
    void run() -> run
org.teleal.cling.protocol.sync.SendingSubscribe -> org.teleal.cling.protocol.sync.SendingSubscribe:
    java.util.logging.Logger log -> log
    org.teleal.cling.model.gena.RemoteGENASubscription subscription -> subscription
    org.teleal.cling.model.message.gena.IncomingSubscribeResponseMessage executeSync() -> executeSync
    org.teleal.cling.model.message.StreamResponseMessage executeSync() -> executeSync
org.teleal.cling.protocol.sync.SendingSubscribe$1 -> org.teleal.cling.protocol.sync.SendingSubscribe$1:
    org.teleal.cling.protocol.sync.SendingSubscribe this$0 -> this$0
    void run() -> run
org.teleal.cling.protocol.sync.SendingSubscribe$2 -> org.teleal.cling.protocol.sync.SendingSubscribe$2:
    org.teleal.cling.protocol.sync.SendingSubscribe this$0 -> this$0
    void run() -> run
org.teleal.cling.protocol.sync.SendingSubscribe$3 -> org.teleal.cling.protocol.sync.SendingSubscribe$3:
    org.teleal.cling.model.message.gena.IncomingSubscribeResponseMessage val$responseMessage -> val$responseMessage
    org.teleal.cling.protocol.sync.SendingSubscribe this$0 -> this$0
    void run() -> run
org.teleal.cling.protocol.sync.SendingSubscribe$4 -> org.teleal.cling.protocol.sync.SendingSubscribe$4:
    org.teleal.cling.model.message.gena.IncomingSubscribeResponseMessage val$responseMessage -> val$responseMessage
    org.teleal.cling.protocol.sync.SendingSubscribe this$0 -> this$0
    void run() -> run
org.teleal.cling.protocol.sync.SendingSubscribe$5 -> org.teleal.cling.protocol.sync.SendingSubscribe$5:
    org.teleal.cling.protocol.sync.SendingSubscribe this$0 -> this$0
    void run() -> run
org.teleal.cling.protocol.sync.SendingUnsubscribe -> org.teleal.cling.protocol.sync.SendingUnsubscribe:
    java.util.logging.Logger log -> log
    org.teleal.cling.model.gena.RemoteGENASubscription subscription -> subscription
    org.teleal.cling.model.message.StreamResponseMessage executeSync() -> executeSync
    java.util.logging.Logger access$000() -> access$000
org.teleal.cling.protocol.sync.SendingUnsubscribe$1 -> org.teleal.cling.protocol.sync.SendingUnsubscribe$1:
    org.teleal.cling.model.message.StreamResponseMessage val$response -> val$response
    org.teleal.cling.protocol.sync.SendingUnsubscribe this$0 -> this$0
    void run() -> run
org.teleal.cling.registry.DefaultRegistryListener -> org.teleal.cling.registry.DefaultRegistryListener:
    void remoteDeviceDiscoveryStarted(org.teleal.cling.registry.Registry,org.teleal.cling.model.meta.RemoteDevice) -> remoteDeviceDiscoveryStarted
    void remoteDeviceDiscoveryFailed(org.teleal.cling.registry.Registry,org.teleal.cling.model.meta.RemoteDevice,java.lang.Exception) -> remoteDeviceDiscoveryFailed
    void remoteDeviceAdded(org.teleal.cling.registry.Registry,org.teleal.cling.model.meta.RemoteDevice) -> remoteDeviceAdded
    void remoteDeviceUpdated(org.teleal.cling.registry.Registry,org.teleal.cling.model.meta.RemoteDevice) -> remoteDeviceUpdated
    void remoteDeviceRemoved(org.teleal.cling.registry.Registry,org.teleal.cling.model.meta.RemoteDevice) -> remoteDeviceRemoved
    void localDeviceAdded(org.teleal.cling.registry.Registry,org.teleal.cling.model.meta.LocalDevice) -> localDeviceAdded
    void localDeviceRemoved(org.teleal.cling.registry.Registry,org.teleal.cling.model.meta.LocalDevice) -> localDeviceRemoved
    void deviceAdded(org.teleal.cling.registry.Registry,org.teleal.cling.model.meta.Device) -> deviceAdded
    void deviceRemoved(org.teleal.cling.registry.Registry,org.teleal.cling.model.meta.Device) -> deviceRemoved
    void beforeShutdown(org.teleal.cling.registry.Registry) -> beforeShutdown
    void afterShutdown() -> afterShutdown
org.teleal.cling.registry.LocalItems -> org.teleal.cling.registry.LocalItems:
    java.util.logging.Logger log -> log
    java.util.Random randomGenerator -> randomGenerator
    void add(org.teleal.cling.model.meta.LocalDevice) -> add
    java.util.Collection get() -> get
    boolean remove(org.teleal.cling.model.meta.LocalDevice) -> remove
    boolean remove(org.teleal.cling.model.meta.LocalDevice,boolean) -> remove
    void removeAll() -> removeAll
    void removeAll(boolean) -> removeAll
    void maintain() -> maintain
    void shutdown() -> shutdown
    void advertiseAlive(org.teleal.cling.model.meta.LocalDevice) -> advertiseAlive
    void advertiseByebye(org.teleal.cling.model.meta.LocalDevice,boolean) -> advertiseByebye
    boolean remove(org.teleal.cling.model.meta.Device) -> remove
    void add(org.teleal.cling.model.meta.Device) -> add
    java.util.logging.Logger access$000() -> access$000
org.teleal.cling.registry.LocalItems$1 -> org.teleal.cling.registry.LocalItems$1:
    org.teleal.cling.registry.RegistryItem val$incomingSubscription -> val$incomingSubscription
    org.teleal.cling.registry.LocalItems this$0 -> this$0
    void run() -> run
org.teleal.cling.registry.LocalItems$2 -> org.teleal.cling.registry.LocalItems$2:
    org.teleal.cling.registry.RegistryListener val$listener -> val$listener
    org.teleal.cling.model.meta.LocalDevice val$localDevice -> val$localDevice
    org.teleal.cling.registry.LocalItems this$0 -> this$0
    void run() -> run
org.teleal.cling.registry.LocalItems$3 -> org.teleal.cling.registry.LocalItems$3:
    org.teleal.cling.model.meta.LocalDevice val$localDevice -> val$localDevice
    org.teleal.cling.registry.LocalItems this$0 -> this$0
    void run() -> run
org.teleal.cling.registry.RegistrationException -> org.teleal.cling.registry.RegistrationException:
    java.util.List errors -> errors
    java.util.List getErrors() -> getErrors
org.teleal.cling.registry.Registry -> org.teleal.cling.registry.Registry:
    org.teleal.cling.UpnpService getUpnpService() -> getUpnpService
    org.teleal.cling.UpnpServiceConfiguration getConfiguration() -> getConfiguration
    org.teleal.cling.protocol.ProtocolFactory getProtocolFactory() -> getProtocolFactory
    void shutdown() -> shutdown
    void pause() -> pause
    void resume() -> resume
    boolean isPaused() -> isPaused
    void addListener(org.teleal.cling.registry.RegistryListener) -> addListener
    void removeListener(org.teleal.cling.registry.RegistryListener) -> removeListener
    java.util.Collection getListeners() -> getListeners
    boolean notifyDiscoveryStart(org.teleal.cling.model.meta.RemoteDevice) -> notifyDiscoveryStart
    void notifyDiscoveryFailure(org.teleal.cling.model.meta.RemoteDevice,java.lang.Exception) -> notifyDiscoveryFailure
    void addDevice(org.teleal.cling.model.meta.LocalDevice) -> addDevice
    void addDevice(org.teleal.cling.model.meta.RemoteDevice) -> addDevice
    boolean update(org.teleal.cling.model.meta.RemoteDeviceIdentity) -> update
    boolean removeDevice(org.teleal.cling.model.meta.LocalDevice) -> removeDevice
    boolean removeDevice(org.teleal.cling.model.meta.RemoteDevice) -> removeDevice
    boolean removeDevice(org.teleal.cling.model.types.UDN) -> removeDevice
    void removeAllLocalDevices() -> removeAllLocalDevices
    void removeAllRemoteDevices() -> removeAllRemoteDevices
    org.teleal.cling.model.meta.Device getDevice(org.teleal.cling.model.types.UDN,boolean) -> getDevice
    org.teleal.cling.model.meta.LocalDevice getLocalDevice(org.teleal.cling.model.types.UDN,boolean) -> getLocalDevice
    org.teleal.cling.model.meta.RemoteDevice getRemoteDevice(org.teleal.cling.model.types.UDN,boolean) -> getRemoteDevice
    java.util.Collection getLocalDevices() -> getLocalDevices
    java.util.Collection getRemoteDevices() -> getRemoteDevices
    java.util.Collection getDevices() -> getDevices
    java.util.Collection getDevices(org.teleal.cling.model.types.DeviceType) -> getDevices
    java.util.Collection getDevices(org.teleal.cling.model.types.ServiceType) -> getDevices
    org.teleal.cling.model.meta.Service getService(org.teleal.cling.model.ServiceReference) -> getService
    void addResource(org.teleal.cling.model.resource.Resource) -> addResource
    void addResource(org.teleal.cling.model.resource.Resource,int) -> addResource
    boolean removeResource(org.teleal.cling.model.resource.Resource) -> removeResource
    org.teleal.cling.model.resource.Resource getResource(java.net.URI) -> getResource
    org.teleal.cling.model.resource.Resource getResource(java.lang.Class,java.net.URI) -> getResource
    java.util.Collection getResources() -> getResources
    java.util.Collection getResources(java.lang.Class) -> getResources
    void addLocalSubscription(org.teleal.cling.model.gena.LocalGENASubscription) -> addLocalSubscription
    org.teleal.cling.model.gena.LocalGENASubscription getLocalSubscription(java.lang.String) -> getLocalSubscription
    boolean updateLocalSubscription(org.teleal.cling.model.gena.LocalGENASubscription) -> updateLocalSubscription
    boolean removeLocalSubscription(org.teleal.cling.model.gena.LocalGENASubscription) -> removeLocalSubscription
    void addRemoteSubscription(org.teleal.cling.model.gena.RemoteGENASubscription) -> addRemoteSubscription
    org.teleal.cling.model.gena.RemoteGENASubscription getRemoteSubscription(java.lang.String) -> getRemoteSubscription
    void updateRemoteSubscription(org.teleal.cling.model.gena.RemoteGENASubscription) -> updateRemoteSubscription
    void removeRemoteSubscription(org.teleal.cling.model.gena.RemoteGENASubscription) -> removeRemoteSubscription
    void lockRemoteSubscriptions() -> lockRemoteSubscriptions
    void unlockRemoteSubscriptions() -> unlockRemoteSubscriptions
org.teleal.cling.registry.RegistryImpl -> org.teleal.cling.registry.RegistryImpl:
    java.util.logging.Logger log -> log
    org.teleal.cling.UpnpService upnpService -> upnpService
    org.teleal.cling.registry.RegistryMaintainer registryMaintainer -> registryMaintainer
    java.util.concurrent.locks.ReentrantLock remoteSubscriptionsLock -> remoteSubscriptionsLock
    java.util.Set registryListeners -> registryListeners
    java.util.Set resourceItems -> resourceItems
    java.util.List pendingExecutions -> pendingExecutions
    org.teleal.cling.registry.RemoteItems remoteItems -> remoteItems
    org.teleal.cling.registry.LocalItems localItems -> localItems
    org.teleal.cling.UpnpService getUpnpService() -> getUpnpService
    org.teleal.cling.UpnpServiceConfiguration getConfiguration() -> getConfiguration
    org.teleal.cling.protocol.ProtocolFactory getProtocolFactory() -> getProtocolFactory
    org.teleal.cling.registry.RegistryMaintainer createRegistryMaintainer() -> createRegistryMaintainer
    void addListener(org.teleal.cling.registry.RegistryListener) -> addListener
    void removeListener(org.teleal.cling.registry.RegistryListener) -> removeListener
    java.util.Collection getListeners() -> getListeners
    boolean notifyDiscoveryStart(org.teleal.cling.model.meta.RemoteDevice) -> notifyDiscoveryStart
    void notifyDiscoveryFailure(org.teleal.cling.model.meta.RemoteDevice,java.lang.Exception) -> notifyDiscoveryFailure
    void addDevice(org.teleal.cling.model.meta.LocalDevice) -> addDevice
    void addDevice(org.teleal.cling.model.meta.RemoteDevice) -> addDevice
    boolean update(org.teleal.cling.model.meta.RemoteDeviceIdentity) -> update
    boolean removeDevice(org.teleal.cling.model.meta.LocalDevice) -> removeDevice
    boolean removeDevice(org.teleal.cling.model.meta.RemoteDevice) -> removeDevice
    void removeAllLocalDevices() -> removeAllLocalDevices
    void removeAllRemoteDevices() -> removeAllRemoteDevices
    boolean removeDevice(org.teleal.cling.model.types.UDN) -> removeDevice
    org.teleal.cling.model.meta.Device getDevice(org.teleal.cling.model.types.UDN,boolean) -> getDevice
    org.teleal.cling.model.meta.LocalDevice getLocalDevice(org.teleal.cling.model.types.UDN,boolean) -> getLocalDevice
    org.teleal.cling.model.meta.RemoteDevice getRemoteDevice(org.teleal.cling.model.types.UDN,boolean) -> getRemoteDevice
    java.util.Collection getLocalDevices() -> getLocalDevices
    java.util.Collection getRemoteDevices() -> getRemoteDevices
    java.util.Collection getDevices() -> getDevices
    java.util.Collection getDevices(org.teleal.cling.model.types.DeviceType) -> getDevices
    java.util.Collection getDevices(org.teleal.cling.model.types.ServiceType) -> getDevices
    org.teleal.cling.model.meta.Service getService(org.teleal.cling.model.ServiceReference) -> getService
    org.teleal.cling.model.resource.Resource getResource(java.net.URI) -> getResource
    org.teleal.cling.model.resource.Resource getResource(java.lang.Class,java.net.URI) -> getResource
    java.util.Collection getResources() -> getResources
    java.util.Collection getResources(java.lang.Class) -> getResources
    void addResource(org.teleal.cling.model.resource.Resource) -> addResource
    void addResource(org.teleal.cling.model.resource.Resource,int) -> addResource
    boolean removeResource(org.teleal.cling.model.resource.Resource) -> removeResource
    void addLocalSubscription(org.teleal.cling.model.gena.LocalGENASubscription) -> addLocalSubscription
    org.teleal.cling.model.gena.LocalGENASubscription getLocalSubscription(java.lang.String) -> getLocalSubscription
    boolean updateLocalSubscription(org.teleal.cling.model.gena.LocalGENASubscription) -> updateLocalSubscription
    boolean removeLocalSubscription(org.teleal.cling.model.gena.LocalGENASubscription) -> removeLocalSubscription
    void addRemoteSubscription(org.teleal.cling.model.gena.RemoteGENASubscription) -> addRemoteSubscription
    org.teleal.cling.model.gena.RemoteGENASubscription getRemoteSubscription(java.lang.String) -> getRemoteSubscription
    void updateRemoteSubscription(org.teleal.cling.model.gena.RemoteGENASubscription) -> updateRemoteSubscription
    void removeRemoteSubscription(org.teleal.cling.model.gena.RemoteGENASubscription) -> removeRemoteSubscription
    void shutdown() -> shutdown
    void pause() -> pause
    void resume() -> resume
    boolean isPaused() -> isPaused
    void maintain() -> maintain
    void executeAsyncProtocol(java.lang.Runnable) -> executeAsyncProtocol
    void runPendingExecutions(boolean) -> runPendingExecutions
    void printDebugLog() -> printDebugLog
    void lockRemoteSubscriptions() -> lockRemoteSubscriptions
    void unlockRemoteSubscriptions() -> unlockRemoteSubscriptions
org.teleal.cling.registry.RegistryImpl$1 -> org.teleal.cling.registry.RegistryImpl$1:
    org.teleal.cling.registry.RegistryListener val$listener -> val$listener
    org.teleal.cling.model.meta.RemoteDevice val$device -> val$device
    org.teleal.cling.registry.RegistryImpl this$0 -> this$0
    void run() -> run
org.teleal.cling.registry.RegistryImpl$2 -> org.teleal.cling.registry.RegistryImpl$2:
    org.teleal.cling.registry.RegistryListener val$listener -> val$listener
    org.teleal.cling.model.meta.RemoteDevice val$device -> val$device
    java.lang.Exception val$ex -> val$ex
    org.teleal.cling.registry.RegistryImpl this$0 -> this$0
    void run() -> run
org.teleal.cling.registry.RegistryItem -> org.teleal.cling.registry.RegistryItem:
    java.lang.Object key -> key
    java.lang.Object item -> item
    org.teleal.cling.model.ExpirationDetails expirationDetails -> expirationDetails
    java.lang.Object getKey() -> getKey
    java.lang.Object getItem() -> getItem
    org.teleal.cling.model.ExpirationDetails getExpirationDetails() -> getExpirationDetails
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
org.teleal.cling.registry.RegistryItems -> org.teleal.cling.registry.RegistryItems:
    org.teleal.cling.registry.RegistryImpl registry -> registry
    java.util.Set deviceItems -> deviceItems
    java.util.Set subscriptionItems -> subscriptionItems
    java.util.Set getDeviceItems() -> getDeviceItems
    java.util.Set getSubscriptionItems() -> getSubscriptionItems
    void add(org.teleal.cling.model.meta.Device) -> add
    boolean remove(org.teleal.cling.model.meta.Device) -> remove
    void removeAll() -> removeAll
    void maintain() -> maintain
    void shutdown() -> shutdown
    org.teleal.cling.model.meta.Device get(org.teleal.cling.model.types.UDN,boolean) -> get
    java.util.Collection get(org.teleal.cling.model.types.DeviceType) -> get
    java.util.Collection get(org.teleal.cling.model.types.ServiceType) -> get
    java.util.Collection get() -> get
    boolean contains(org.teleal.cling.model.meta.Device) -> contains
    boolean contains(org.teleal.cling.model.types.UDN) -> contains
    void addSubscription(org.teleal.cling.model.gena.GENASubscription) -> addSubscription
    boolean updateSubscription(org.teleal.cling.model.gena.GENASubscription) -> updateSubscription
    boolean removeSubscription(org.teleal.cling.model.gena.GENASubscription) -> removeSubscription
    org.teleal.cling.model.gena.GENASubscription getSubscription(java.lang.String) -> getSubscription
    org.teleal.cling.model.resource.Resource[] getResources(org.teleal.cling.model.meta.Device) -> getResources
org.teleal.cling.registry.RegistryListener -> org.teleal.cling.registry.RegistryListener:
    void remoteDeviceDiscoveryStarted(org.teleal.cling.registry.Registry,org.teleal.cling.model.meta.RemoteDevice) -> remoteDeviceDiscoveryStarted
    void remoteDeviceDiscoveryFailed(org.teleal.cling.registry.Registry,org.teleal.cling.model.meta.RemoteDevice,java.lang.Exception) -> remoteDeviceDiscoveryFailed
    void remoteDeviceAdded(org.teleal.cling.registry.Registry,org.teleal.cling.model.meta.RemoteDevice) -> remoteDeviceAdded
    void remoteDeviceUpdated(org.teleal.cling.registry.Registry,org.teleal.cling.model.meta.RemoteDevice) -> remoteDeviceUpdated
    void remoteDeviceRemoved(org.teleal.cling.registry.Registry,org.teleal.cling.model.meta.RemoteDevice) -> remoteDeviceRemoved
    void localDeviceAdded(org.teleal.cling.registry.Registry,org.teleal.cling.model.meta.LocalDevice) -> localDeviceAdded
    void localDeviceRemoved(org.teleal.cling.registry.Registry,org.teleal.cling.model.meta.LocalDevice) -> localDeviceRemoved
    void beforeShutdown(org.teleal.cling.registry.Registry) -> beforeShutdown
    void afterShutdown() -> afterShutdown
org.teleal.cling.registry.RegistryMaintainer -> org.teleal.cling.registry.RegistryMaintainer:
    java.util.logging.Logger log -> log
    org.teleal.cling.registry.RegistryImpl registry -> registry
    int sleepIntervalMillis -> sleepIntervalMillis
    boolean stopped -> stopped
    void stop() -> stop
    void run() -> run
org.teleal.cling.registry.RemoteItems -> org.teleal.cling.registry.RemoteItems:
    java.util.logging.Logger log -> log
    void add(org.teleal.cling.model.meta.RemoteDevice) -> add
    boolean update(org.teleal.cling.model.meta.RemoteDeviceIdentity) -> update
    boolean remove(org.teleal.cling.model.meta.RemoteDevice) -> remove
    boolean remove(org.teleal.cling.model.meta.RemoteDevice,boolean) -> remove
    void removeAll() -> removeAll
    void removeAll(boolean) -> removeAll
    void start() -> start
    void maintain() -> maintain
    void resume() -> resume
    void shutdown() -> shutdown
    void renewOutgoingSubscription(org.teleal.cling.model.gena.RemoteGENASubscription) -> renewOutgoingSubscription
    boolean remove(org.teleal.cling.model.meta.Device) -> remove
    void add(org.teleal.cling.model.meta.Device) -> add
org.teleal.cling.registry.RemoteItems$1 -> org.teleal.cling.registry.RemoteItems$1:
    org.teleal.cling.registry.RegistryListener val$listener -> val$listener
    org.teleal.cling.model.meta.RemoteDevice val$device -> val$device
    org.teleal.cling.registry.RemoteItems this$0 -> this$0
    void run() -> run
org.teleal.cling.registry.RemoteItems$2 -> org.teleal.cling.registry.RemoteItems$2:
    org.teleal.cling.registry.RegistryListener val$listener -> val$listener
    org.teleal.cling.registry.RegistryItem val$item -> val$item
    org.teleal.cling.registry.RemoteItems this$0 -> this$0
    void run() -> run
org.teleal.cling.registry.RemoteItems$3 -> org.teleal.cling.registry.RemoteItems$3:
    org.teleal.cling.registry.RegistryItem val$outgoingSubscription -> val$outgoingSubscription
    org.teleal.cling.registry.RemoteItems this$0 -> this$0
    void run() -> run
org.teleal.cling.registry.RemoteItems$4 -> org.teleal.cling.registry.RemoteItems$4:
    org.teleal.cling.registry.RegistryListener val$listener -> val$listener
    org.teleal.cling.model.meta.RemoteDevice val$registeredDevice -> val$registeredDevice
    org.teleal.cling.registry.RemoteItems this$0 -> this$0
    void run() -> run
org.teleal.cling.support.avtransport.AVTransportErrorCode -> org.teleal.cling.support.avtransport.AVTransportErrorCode:
    org.teleal.cling.support.avtransport.AVTransportErrorCode TRANSITION_NOT_AVAILABLE -> TRANSITION_NOT_AVAILABLE
    org.teleal.cling.support.avtransport.AVTransportErrorCode NO_CONTENTS -> NO_CONTENTS
    org.teleal.cling.support.avtransport.AVTransportErrorCode READ_ERROR -> READ_ERROR
    org.teleal.cling.support.avtransport.AVTransportErrorCode PLAYBACK_FORMAT_NOT_SUPPORTED -> PLAYBACK_FORMAT_NOT_SUPPORTED
    org.teleal.cling.support.avtransport.AVTransportErrorCode TRANSPORT_LOCKED -> TRANSPORT_LOCKED
    org.teleal.cling.support.avtransport.AVTransportErrorCode WRITE_ERROR -> WRITE_ERROR
    org.teleal.cling.support.avtransport.AVTransportErrorCode MEDIA_PROTECTED -> MEDIA_PROTECTED
    org.teleal.cling.support.avtransport.AVTransportErrorCode RECORD_FORMAT_NOT_SUPPORTED -> RECORD_FORMAT_NOT_SUPPORTED
    org.teleal.cling.support.avtransport.AVTransportErrorCode MEDIA_FULL -> MEDIA_FULL
    org.teleal.cling.support.avtransport.AVTransportErrorCode SEEKMODE_NOT_SUPPORTED -> SEEKMODE_NOT_SUPPORTED
    org.teleal.cling.support.avtransport.AVTransportErrorCode ILLEGAL_SEEK_TARGET -> ILLEGAL_SEEK_TARGET
    org.teleal.cling.support.avtransport.AVTransportErrorCode PLAYMODE_NOT_SUPPORTED -> PLAYMODE_NOT_SUPPORTED
    org.teleal.cling.support.avtransport.AVTransportErrorCode RECORDQUALITYMODE_NOT_SUPPORTED -> RECORDQUALITYMODE_NOT_SUPPORTED
    org.teleal.cling.support.avtransport.AVTransportErrorCode ILLEGAL_MIME_TYPE -> ILLEGAL_MIME_TYPE
    org.teleal.cling.support.avtransport.AVTransportErrorCode CONTENT_BUSY -> CONTENT_BUSY
    org.teleal.cling.support.avtransport.AVTransportErrorCode RESOURCE_NOT_FOUND -> RESOURCE_NOT_FOUND
    org.teleal.cling.support.avtransport.AVTransportErrorCode INVALID_INSTANCE_ID -> INVALID_INSTANCE_ID
    int code -> code
    java.lang.String description -> description
    org.teleal.cling.support.avtransport.AVTransportErrorCode[] $VALUES -> $VALUES
    org.teleal.cling.support.avtransport.AVTransportErrorCode[] values() -> values
    org.teleal.cling.support.avtransport.AVTransportErrorCode valueOf(java.lang.String) -> valueOf
    int getCode() -> getCode
    java.lang.String getDescription() -> getDescription
    org.teleal.cling.support.avtransport.AVTransportErrorCode getByCode(int) -> getByCode
org.teleal.cling.support.avtransport.AVTransportException -> org.teleal.cling.support.avtransport.AVTransportException:
org.teleal.cling.support.avtransport.AbstractAVTransportService -> org.teleal.cling.support.avtransport.AbstractAVTransportService:
    org.teleal.cling.support.lastchange.LastChange lastChange -> lastChange
    java.beans.PropertyChangeSupport propertyChangeSupport -> propertyChangeSupport
    org.teleal.cling.support.lastchange.LastChange getLastChange() -> getLastChange
    void fireLastChange() -> fireLastChange
    java.beans.PropertyChangeSupport getPropertyChangeSupport() -> getPropertyChangeSupport
    org.teleal.cling.model.types.UnsignedIntegerFourBytes getDefaultInstanceID() -> getDefaultInstanceID
    void setAVTransportURI(org.teleal.cling.model.types.UnsignedIntegerFourBytes,java.lang.String,java.lang.String) -> setAVTransportURI
    void setNextAVTransportURI(org.teleal.cling.model.types.UnsignedIntegerFourBytes,java.lang.String,java.lang.String) -> setNextAVTransportURI
    org.teleal.cling.support.model.MediaInfo getMediaInfo(org.teleal.cling.model.types.UnsignedIntegerFourBytes) -> getMediaInfo
    org.teleal.cling.support.model.TransportInfo getTransportInfo(org.teleal.cling.model.types.UnsignedIntegerFourBytes) -> getTransportInfo
    org.teleal.cling.support.model.PositionInfo getPositionInfo(org.teleal.cling.model.types.UnsignedIntegerFourBytes) -> getPositionInfo
    org.teleal.cling.support.model.DeviceCapabilities getDeviceCapabilities(org.teleal.cling.model.types.UnsignedIntegerFourBytes) -> getDeviceCapabilities
    org.teleal.cling.support.model.TransportSettings getTransportSettings(org.teleal.cling.model.types.UnsignedIntegerFourBytes) -> getTransportSettings
    void stop(org.teleal.cling.model.types.UnsignedIntegerFourBytes) -> stop
    void play(org.teleal.cling.model.types.UnsignedIntegerFourBytes,java.lang.String) -> play
    void pause(org.teleal.cling.model.types.UnsignedIntegerFourBytes) -> pause
    void record(org.teleal.cling.model.types.UnsignedIntegerFourBytes) -> record
    void seek(org.teleal.cling.model.types.UnsignedIntegerFourBytes,java.lang.String,java.lang.String) -> seek
    void next(org.teleal.cling.model.types.UnsignedIntegerFourBytes) -> next
    void previous(org.teleal.cling.model.types.UnsignedIntegerFourBytes) -> previous
    void setPlayMode(org.teleal.cling.model.types.UnsignedIntegerFourBytes,java.lang.String) -> setPlayMode
    void setRecordQualityMode(org.teleal.cling.model.types.UnsignedIntegerFourBytes,java.lang.String) -> setRecordQualityMode
    java.lang.String getCurrentTransportActions(org.teleal.cling.model.types.UnsignedIntegerFourBytes) -> getCurrentTransportActions
org.teleal.cling.support.avtransport.callback.GetCurrentTransportActions -> org.teleal.cling.support.avtransport.callback.GetCurrentTransportActions:
    java.util.logging.Logger log -> log
    void success(org.teleal.cling.model.action.ActionInvocation) -> success
    void received(org.teleal.cling.model.action.ActionInvocation,org.teleal.cling.support.model.TransportAction[]) -> received
org.teleal.cling.support.avtransport.callback.GetDeviceCapabilities -> org.teleal.cling.support.avtransport.callback.GetDeviceCapabilities:
    java.util.logging.Logger log -> log
    void success(org.teleal.cling.model.action.ActionInvocation) -> success
    void received(org.teleal.cling.model.action.ActionInvocation,org.teleal.cling.support.model.DeviceCapabilities) -> received
org.teleal.cling.support.avtransport.callback.GetMediaInfo -> org.teleal.cling.support.avtransport.callback.GetMediaInfo:
    java.util.logging.Logger log -> log
    void success(org.teleal.cling.model.action.ActionInvocation) -> success
    void received(org.teleal.cling.model.action.ActionInvocation,org.teleal.cling.support.model.MediaInfo) -> received
org.teleal.cling.support.avtransport.callback.GetPositionInfo -> org.teleal.cling.support.avtransport.callback.GetPositionInfo:
    java.util.logging.Logger log -> log
    void success(org.teleal.cling.model.action.ActionInvocation) -> success
    void received(org.teleal.cling.model.action.ActionInvocation,org.teleal.cling.support.model.PositionInfo) -> received
org.teleal.cling.support.avtransport.callback.GetTransportInfo -> org.teleal.cling.support.avtransport.callback.GetTransportInfo:
    java.util.logging.Logger log -> log
    void success(org.teleal.cling.model.action.ActionInvocation) -> success
    void received(org.teleal.cling.model.action.ActionInvocation,org.teleal.cling.support.model.TransportInfo) -> received
org.teleal.cling.support.avtransport.callback.Pause -> org.teleal.cling.support.avtransport.callback.Pause:
    java.util.logging.Logger log -> log
    void success(org.teleal.cling.model.action.ActionInvocation) -> success
org.teleal.cling.support.avtransport.callback.Play -> org.teleal.cling.support.avtransport.callback.Play:
    java.util.logging.Logger log -> log
    void success(org.teleal.cling.model.action.ActionInvocation) -> success
org.teleal.cling.support.avtransport.callback.Seek -> org.teleal.cling.support.avtransport.callback.Seek:
    java.util.logging.Logger log -> log
    void success(org.teleal.cling.model.action.ActionInvocation) -> success
org.teleal.cling.support.avtransport.callback.SetAVTransportURI -> org.teleal.cling.support.avtransport.callback.SetAVTransportURI:
    java.util.logging.Logger log -> log
    void success(org.teleal.cling.model.action.ActionInvocation) -> success
org.teleal.cling.support.avtransport.callback.Stop -> org.teleal.cling.support.avtransport.callback.Stop:
    java.util.logging.Logger log -> log
    void success(org.teleal.cling.model.action.ActionInvocation) -> success
org.teleal.cling.support.avtransport.impl.AVTransportService -> org.teleal.cling.support.avtransport.impl.AVTransportService:
    java.util.logging.Logger log -> log
    java.util.Map stateMachines -> stateMachines
    java.lang.Class stateMachineDefinition -> stateMachineDefinition
    java.lang.Class initialState -> initialState
    java.lang.Class transportClass -> transportClass
    void setAVTransportURI(org.teleal.cling.model.types.UnsignedIntegerFourBytes,java.lang.String,java.lang.String) -> setAVTransportURI
    void setNextAVTransportURI(org.teleal.cling.model.types.UnsignedIntegerFourBytes,java.lang.String,java.lang.String) -> setNextAVTransportURI
    void setPlayMode(org.teleal.cling.model.types.UnsignedIntegerFourBytes,java.lang.String) -> setPlayMode
    void setRecordQualityMode(org.teleal.cling.model.types.UnsignedIntegerFourBytes,java.lang.String) -> setRecordQualityMode
    org.teleal.cling.support.model.MediaInfo getMediaInfo(org.teleal.cling.model.types.UnsignedIntegerFourBytes) -> getMediaInfo
    org.teleal.cling.support.model.TransportInfo getTransportInfo(org.teleal.cling.model.types.UnsignedIntegerFourBytes) -> getTransportInfo
    org.teleal.cling.support.model.PositionInfo getPositionInfo(org.teleal.cling.model.types.UnsignedIntegerFourBytes) -> getPositionInfo
    org.teleal.cling.support.model.DeviceCapabilities getDeviceCapabilities(org.teleal.cling.model.types.UnsignedIntegerFourBytes) -> getDeviceCapabilities
    org.teleal.cling.support.model.TransportSettings getTransportSettings(org.teleal.cling.model.types.UnsignedIntegerFourBytes) -> getTransportSettings
    java.lang.String getCurrentTransportActions(org.teleal.cling.model.types.UnsignedIntegerFourBytes) -> getCurrentTransportActions
    void stop(org.teleal.cling.model.types.UnsignedIntegerFourBytes) -> stop
    void play(org.teleal.cling.model.types.UnsignedIntegerFourBytes,java.lang.String) -> play
    void pause(org.teleal.cling.model.types.UnsignedIntegerFourBytes) -> pause
    void record(org.teleal.cling.model.types.UnsignedIntegerFourBytes) -> record
    void seek(org.teleal.cling.model.types.UnsignedIntegerFourBytes,java.lang.String,java.lang.String) -> seek
    void next(org.teleal.cling.model.types.UnsignedIntegerFourBytes) -> next
    void previous(org.teleal.cling.model.types.UnsignedIntegerFourBytes) -> previous
    org.teleal.cling.support.avtransport.impl.AVTransportStateMachine findStateMachine(org.teleal.cling.model.types.UnsignedIntegerFourBytes) -> findStateMachine
    org.teleal.cling.support.avtransport.impl.AVTransportStateMachine findStateMachine(org.teleal.cling.model.types.UnsignedIntegerFourBytes,boolean) -> findStateMachine
    org.teleal.cling.support.avtransport.impl.AVTransportStateMachine createStateMachine(org.teleal.cling.model.types.UnsignedIntegerFourBytes) -> createStateMachine
    org.teleal.cling.support.model.AVTransport createTransport(org.teleal.cling.model.types.UnsignedIntegerFourBytes,org.teleal.cling.support.lastchange.LastChange) -> createTransport
org.teleal.cling.support.avtransport.impl.AVTransportStateMachine -> org.teleal.cling.support.avtransport.impl.AVTransportStateMachine:
    void setTransportURI(java.net.URI,java.lang.String) -> setTransportURI
    void setNextTransportURI(java.net.URI,java.lang.String) -> setNextTransportURI
    void stop() -> stop
    void play(java.lang.String) -> play
    void pause() -> pause
    void record() -> record
    void seek(org.teleal.cling.support.model.SeekMode,java.lang.String) -> seek
    void next() -> next
    void previous() -> previous
org.teleal.cling.support.avtransport.impl.state.AbstractState -> org.teleal.cling.support.avtransport.impl.state.AbstractState:
    org.teleal.cling.support.model.AVTransport transport -> transport
    org.teleal.cling.support.model.AVTransport getTransport() -> getTransport
    org.teleal.cling.support.model.TransportAction[] getCurrentTransportActions() -> getCurrentTransportActions
org.teleal.cling.support.avtransport.impl.state.NoMediaPresent -> org.teleal.cling.support.avtransport.impl.state.NoMediaPresent:
    java.util.logging.Logger log -> log
    void onEntry() -> onEntry
    java.lang.Class setTransportURI(java.net.URI,java.lang.String) -> setTransportURI
    org.teleal.cling.support.model.TransportAction[] getCurrentTransportActions() -> getCurrentTransportActions
org.teleal.cling.support.avtransport.impl.state.PausedPlay -> org.teleal.cling.support.avtransport.impl.state.PausedPlay:
    java.util.logging.Logger log -> log
    void onEntry() -> onEntry
    java.lang.Class setTransportURI(java.net.URI,java.lang.String) -> setTransportURI
    java.lang.Class stop() -> stop
    java.lang.Class play(java.lang.String) -> play
    org.teleal.cling.support.model.TransportAction[] getCurrentTransportActions() -> getCurrentTransportActions
org.teleal.cling.support.avtransport.impl.state.Playing -> org.teleal.cling.support.avtransport.impl.state.Playing:
    java.util.logging.Logger log -> log
    void onEntry() -> onEntry
    java.lang.Class setTransportURI(java.net.URI,java.lang.String) -> setTransportURI
    java.lang.Class stop() -> stop
    java.lang.Class play(java.lang.String) -> play
    java.lang.Class pause() -> pause
    java.lang.Class next() -> next
    java.lang.Class previous() -> previous
    java.lang.Class seek(org.teleal.cling.support.model.SeekMode,java.lang.String) -> seek
    org.teleal.cling.support.model.TransportAction[] getCurrentTransportActions() -> getCurrentTransportActions
org.teleal.cling.support.avtransport.impl.state.Stopped -> org.teleal.cling.support.avtransport.impl.state.Stopped:
    java.util.logging.Logger log -> log
    void onEntry() -> onEntry
    java.lang.Class setTransportURI(java.net.URI,java.lang.String) -> setTransportURI
    java.lang.Class stop() -> stop
    java.lang.Class play(java.lang.String) -> play
    java.lang.Class next() -> next
    java.lang.Class previous() -> previous
    java.lang.Class seek(org.teleal.cling.support.model.SeekMode,java.lang.String) -> seek
    org.teleal.cling.support.model.TransportAction[] getCurrentTransportActions() -> getCurrentTransportActions
org.teleal.cling.support.avtransport.lastchange.AVTransportLastChangeParser -> org.teleal.cling.support.avtransport.lastchange.AVTransportLastChangeParser:
    java.lang.String NAMESPACE_URI -> NAMESPACE_URI
    java.lang.String SCHEMA_RESOURCE -> SCHEMA_RESOURCE
    java.lang.String getNamespace() -> getNamespace
    javax.xml.transform.Source[] getSchemaSources() -> getSchemaSources
    java.util.Set getEventedVariables() -> getEventedVariables
org.teleal.cling.support.avtransport.lastchange.AVTransportVariable -> org.teleal.cling.support.avtransport.lastchange.AVTransportVariable:
    java.util.Set ALL -> ALL
org.teleal.cling.support.avtransport.lastchange.AVTransportVariable$1 -> org.teleal.cling.support.avtransport.lastchange.AVTransportVariable$1:
org.teleal.cling.support.avtransport.lastchange.AVTransportVariable$AVTransportURI -> org.teleal.cling.support.avtransport.lastchange.AVTransportVariable$AVTransportURI:
org.teleal.cling.support.avtransport.lastchange.AVTransportVariable$AVTransportURIMetaData -> org.teleal.cling.support.avtransport.lastchange.AVTransportVariable$AVTransportURIMetaData:
org.teleal.cling.support.avtransport.lastchange.AVTransportVariable$CurrentMediaDuration -> org.teleal.cling.support.avtransport.lastchange.AVTransportVariable$CurrentMediaDuration:
org.teleal.cling.support.avtransport.lastchange.AVTransportVariable$CurrentPlayMode -> org.teleal.cling.support.avtransport.lastchange.AVTransportVariable$CurrentPlayMode:
    org.teleal.cling.support.model.PlayMode enumValueOf(java.lang.String) -> enumValueOf
    java.lang.Enum enumValueOf(java.lang.String) -> enumValueOf
org.teleal.cling.support.avtransport.lastchange.AVTransportVariable$CurrentRecordQualityMode -> org.teleal.cling.support.avtransport.lastchange.AVTransportVariable$CurrentRecordQualityMode:
    org.teleal.cling.support.model.RecordQualityMode enumValueOf(java.lang.String) -> enumValueOf
    java.lang.Enum enumValueOf(java.lang.String) -> enumValueOf
org.teleal.cling.support.avtransport.lastchange.AVTransportVariable$CurrentTrack -> org.teleal.cling.support.avtransport.lastchange.AVTransportVariable$CurrentTrack:
org.teleal.cling.support.avtransport.lastchange.AVTransportVariable$CurrentTrackDuration -> org.teleal.cling.support.avtransport.lastchange.AVTransportVariable$CurrentTrackDuration:
org.teleal.cling.support.avtransport.lastchange.AVTransportVariable$CurrentTrackMetaData -> org.teleal.cling.support.avtransport.lastchange.AVTransportVariable$CurrentTrackMetaData:
org.teleal.cling.support.avtransport.lastchange.AVTransportVariable$CurrentTrackURI -> org.teleal.cling.support.avtransport.lastchange.AVTransportVariable$CurrentTrackURI:
org.teleal.cling.support.avtransport.lastchange.AVTransportVariable$CurrentTransportActions -> org.teleal.cling.support.avtransport.lastchange.AVTransportVariable$CurrentTransportActions:
    org.teleal.cling.support.model.TransportAction[] enumValueOf(java.lang.String[]) -> enumValueOf
    java.lang.Enum[] enumValueOf(java.lang.String[]) -> enumValueOf
org.teleal.cling.support.avtransport.lastchange.AVTransportVariable$NextAVTransportURI -> org.teleal.cling.support.avtransport.lastchange.AVTransportVariable$NextAVTransportURI:
org.teleal.cling.support.avtransport.lastchange.AVTransportVariable$NextAVTransportURIMetaData -> org.teleal.cling.support.avtransport.lastchange.AVTransportVariable$NextAVTransportURIMetaData:
org.teleal.cling.support.avtransport.lastchange.AVTransportVariable$NumberOfTracks -> org.teleal.cling.support.avtransport.lastchange.AVTransportVariable$NumberOfTracks:
org.teleal.cling.support.avtransport.lastchange.AVTransportVariable$PossiblePlaybackStorageMedia -> org.teleal.cling.support.avtransport.lastchange.AVTransportVariable$PossiblePlaybackStorageMedia:
org.teleal.cling.support.avtransport.lastchange.AVTransportVariable$PossibleRecordQualityModes -> org.teleal.cling.support.avtransport.lastchange.AVTransportVariable$PossibleRecordQualityModes:
    org.teleal.cling.support.model.RecordQualityMode[] enumValueOf(java.lang.String[]) -> enumValueOf
    java.lang.Enum[] enumValueOf(java.lang.String[]) -> enumValueOf
org.teleal.cling.support.avtransport.lastchange.AVTransportVariable$PossibleRecordStorageMedia -> org.teleal.cling.support.avtransport.lastchange.AVTransportVariable$PossibleRecordStorageMedia:
    org.teleal.cling.support.model.StorageMedium[] enumValueOf(java.lang.String[]) -> enumValueOf
    java.lang.Enum[] enumValueOf(java.lang.String[]) -> enumValueOf
org.teleal.cling.support.avtransport.lastchange.AVTransportVariable$RecordMediumWriteStatus -> org.teleal.cling.support.avtransport.lastchange.AVTransportVariable$RecordMediumWriteStatus:
    org.teleal.cling.support.model.RecordMediumWriteStatus enumValueOf(java.lang.String) -> enumValueOf
    java.lang.Enum enumValueOf(java.lang.String) -> enumValueOf
org.teleal.cling.support.avtransport.lastchange.AVTransportVariable$RecordStorageMedium -> org.teleal.cling.support.avtransport.lastchange.AVTransportVariable$RecordStorageMedium:
    org.teleal.cling.support.model.StorageMedium enumValueOf(java.lang.String) -> enumValueOf
    java.lang.Enum enumValueOf(java.lang.String) -> enumValueOf
org.teleal.cling.support.avtransport.lastchange.AVTransportVariable$TransportPlaySpeed -> org.teleal.cling.support.avtransport.lastchange.AVTransportVariable$TransportPlaySpeed:
org.teleal.cling.support.avtransport.lastchange.AVTransportVariable$TransportState -> org.teleal.cling.support.avtransport.lastchange.AVTransportVariable$TransportState:
    org.teleal.cling.support.model.TransportState enumValueOf(java.lang.String) -> enumValueOf
    java.lang.Enum enumValueOf(java.lang.String) -> enumValueOf
org.teleal.cling.support.avtransport.lastchange.AVTransportVariable$TransportStatus -> org.teleal.cling.support.avtransport.lastchange.AVTransportVariable$TransportStatus:
    org.teleal.cling.support.model.TransportStatus enumValueOf(java.lang.String) -> enumValueOf
    java.lang.Enum enumValueOf(java.lang.String) -> enumValueOf
org.teleal.cling.support.connectionmanager.AbstractPeeringConnectionManagerService -> org.teleal.cling.support.connectionmanager.AbstractPeeringConnectionManagerService:
    java.util.logging.Logger log -> log
    int getNewConnectionId() -> getNewConnectionId
    void storeConnection(org.teleal.cling.support.model.ConnectionInfo) -> storeConnection
    void removeConnection(int) -> removeConnection
    org.teleal.cling.support.model.ConnectionInfo prepareForConnection(org.teleal.cling.support.model.ProtocolInfo,org.teleal.cling.model.ServiceReference,int,java.lang.String) -> prepareForConnection
    void connectionComplete(int) -> connectionComplete
    int createConnectionWithPeer(org.teleal.cling.model.ServiceReference,org.teleal.cling.controlpoint.ControlPoint,org.teleal.cling.model.meta.Service,org.teleal.cling.support.model.ProtocolInfo,org.teleal.cling.support.model.ConnectionInfo$Direction) -> createConnectionWithPeer
    void closeConnectionWithPeer(org.teleal.cling.controlpoint.ControlPoint,org.teleal.cling.model.meta.Service,int) -> closeConnectionWithPeer
    void closeConnectionWithPeer(org.teleal.cling.controlpoint.ControlPoint,org.teleal.cling.model.meta.Service,org.teleal.cling.support.model.ConnectionInfo) -> closeConnectionWithPeer
    org.teleal.cling.support.model.ConnectionInfo createConnection(int,int,org.teleal.cling.model.ServiceReference,org.teleal.cling.support.model.ConnectionInfo$Direction,org.teleal.cling.support.model.ProtocolInfo) -> createConnection
    void closeConnection(org.teleal.cling.support.model.ConnectionInfo) -> closeConnection
    void peerFailure(org.teleal.cling.model.action.ActionInvocation,org.teleal.cling.model.message.UpnpResponse,java.lang.String) -> peerFailure
org.teleal.cling.support.connectionmanager.AbstractPeeringConnectionManagerService$1 -> org.teleal.cling.support.connectionmanager.AbstractPeeringConnectionManagerService$1:
    int val$localConnectionID -> val$localConnectionID
    org.teleal.cling.support.model.ProtocolInfo val$protInfo -> val$protInfo
    org.teleal.cling.model.meta.Service val$peerService -> val$peerService
    org.teleal.cling.support.model.ConnectionInfo$Direction val$direction -> val$direction
    boolean[] val$failed -> val$failed
    org.teleal.cling.support.connectionmanager.AbstractPeeringConnectionManagerService this$0 -> this$0
    void received(org.teleal.cling.model.action.ActionInvocation,int,int,int) -> received
    void failure(org.teleal.cling.model.action.ActionInvocation,org.teleal.cling.model.message.UpnpResponse,java.lang.String) -> failure
org.teleal.cling.support.connectionmanager.AbstractPeeringConnectionManagerService$2 -> org.teleal.cling.support.connectionmanager.AbstractPeeringConnectionManagerService$2:
    org.teleal.cling.support.model.ConnectionInfo val$connectionInfo -> val$connectionInfo
    org.teleal.cling.support.connectionmanager.AbstractPeeringConnectionManagerService this$0 -> this$0
    void success(org.teleal.cling.model.action.ActionInvocation) -> success
    void failure(org.teleal.cling.model.action.ActionInvocation,org.teleal.cling.model.message.UpnpResponse,java.lang.String) -> failure
org.teleal.cling.support.connectionmanager.ConnectionManagerErrorCode -> org.teleal.cling.support.connectionmanager.ConnectionManagerErrorCode:
    org.teleal.cling.support.connectionmanager.ConnectionManagerErrorCode INCOMPATIBLE_PROTOCOL_INFO -> INCOMPATIBLE_PROTOCOL_INFO
    org.teleal.cling.support.connectionmanager.ConnectionManagerErrorCode INCOMPATIBLE_DIRECTIONS -> INCOMPATIBLE_DIRECTIONS
    org.teleal.cling.support.connectionmanager.ConnectionManagerErrorCode INSUFFICIENT_NETWORK_RESOURCES -> INSUFFICIENT_NETWORK_RESOURCES
    org.teleal.cling.support.connectionmanager.ConnectionManagerErrorCode LOCAL_RESTRICTIONS -> LOCAL_RESTRICTIONS
    org.teleal.cling.support.connectionmanager.ConnectionManagerErrorCode ACCESS_DENIED -> ACCESS_DENIED
    org.teleal.cling.support.connectionmanager.ConnectionManagerErrorCode INVALID_CONNECTION_REFERENCE -> INVALID_CONNECTION_REFERENCE
    org.teleal.cling.support.connectionmanager.ConnectionManagerErrorCode NOT_IN_NETWORK -> NOT_IN_NETWORK
    int code -> code
    java.lang.String description -> description
    org.teleal.cling.support.connectionmanager.ConnectionManagerErrorCode[] $VALUES -> $VALUES
    org.teleal.cling.support.connectionmanager.ConnectionManagerErrorCode[] values() -> values
    org.teleal.cling.support.connectionmanager.ConnectionManagerErrorCode valueOf(java.lang.String) -> valueOf
    int getCode() -> getCode
    java.lang.String getDescription() -> getDescription
    org.teleal.cling.support.connectionmanager.ConnectionManagerErrorCode getByCode(int) -> getByCode
org.teleal.cling.support.connectionmanager.ConnectionManagerException -> org.teleal.cling.support.connectionmanager.ConnectionManagerException:
org.teleal.cling.support.connectionmanager.ConnectionManagerService -> org.teleal.cling.support.connectionmanager.ConnectionManagerService:
    java.util.logging.Logger log -> log
    java.beans.PropertyChangeSupport propertyChangeSupport -> propertyChangeSupport
    java.util.Map activeConnections -> activeConnections
    org.teleal.cling.support.model.ProtocolInfos sourceProtocolInfo -> sourceProtocolInfo
    org.teleal.cling.support.model.ProtocolInfos sinkProtocolInfo -> sinkProtocolInfo
    java.beans.PropertyChangeSupport getPropertyChangeSupport() -> getPropertyChangeSupport
    org.teleal.cling.support.model.ConnectionInfo getCurrentConnectionInfo(int) -> getCurrentConnectionInfo
    org.teleal.cling.model.types.csv.CSV getCurrentConnectionIDs() -> getCurrentConnectionIDs
    void getProtocolInfo() -> getProtocolInfo
    org.teleal.cling.support.model.ProtocolInfos getSourceProtocolInfo() -> getSourceProtocolInfo
    org.teleal.cling.support.model.ProtocolInfos getSinkProtocolInfo() -> getSinkProtocolInfo
org.teleal.cling.support.connectionmanager.callback.ConnectionComplete -> org.teleal.cling.support.connectionmanager.callback.ConnectionComplete:
org.teleal.cling.support.connectionmanager.callback.GetCurrentConnectionInfo -> org.teleal.cling.support.connectionmanager.callback.GetCurrentConnectionInfo:
    void success(org.teleal.cling.model.action.ActionInvocation) -> success
    void received(org.teleal.cling.model.action.ActionInvocation,org.teleal.cling.support.model.ConnectionInfo) -> received
org.teleal.cling.support.connectionmanager.callback.GetProtocolInfo -> org.teleal.cling.support.connectionmanager.callback.GetProtocolInfo:
    void success(org.teleal.cling.model.action.ActionInvocation) -> success
    void received(org.teleal.cling.model.action.ActionInvocation,org.teleal.cling.support.model.ProtocolInfos,org.teleal.cling.support.model.ProtocolInfos) -> received
org.teleal.cling.support.connectionmanager.callback.PrepareForConnection -> org.teleal.cling.support.connectionmanager.callback.PrepareForConnection:
    void success(org.teleal.cling.model.action.ActionInvocation) -> success
    void received(org.teleal.cling.model.action.ActionInvocation,int,int,int) -> received
org.teleal.cling.support.contentdirectory.AbstractContentDirectoryService -> org.teleal.cling.support.contentdirectory.AbstractContentDirectoryService:
    java.lang.String CAPS_WILDCARD -> CAPS_WILDCARD
    org.teleal.cling.model.types.csv.CSV searchCapabilities -> searchCapabilities
    org.teleal.cling.model.types.csv.CSV sortCapabilities -> sortCapabilities
    org.teleal.cling.model.types.UnsignedIntegerFourBytes systemUpdateID -> systemUpdateID
    java.beans.PropertyChangeSupport propertyChangeSupport -> propertyChangeSupport
    org.teleal.cling.model.types.csv.CSV getSearchCapabilities() -> getSearchCapabilities
    org.teleal.cling.model.types.csv.CSV getSortCapabilities() -> getSortCapabilities
    org.teleal.cling.model.types.UnsignedIntegerFourBytes getSystemUpdateID() -> getSystemUpdateID
    java.beans.PropertyChangeSupport getPropertyChangeSupport() -> getPropertyChangeSupport
    void changeSystemUpdateID() -> changeSystemUpdateID
    org.teleal.cling.support.model.BrowseResult browse(java.lang.String,java.lang.String,java.lang.String,org.teleal.cling.model.types.UnsignedIntegerFourBytes,org.teleal.cling.model.types.UnsignedIntegerFourBytes,java.lang.String) -> browse
    org.teleal.cling.support.model.BrowseResult browse(java.lang.String,org.teleal.cling.support.model.BrowseFlag,java.lang.String,long,long,org.teleal.cling.support.model.SortCriterion[]) -> browse
    org.teleal.cling.support.model.BrowseResult search(java.lang.String,java.lang.String,java.lang.String,org.teleal.cling.model.types.UnsignedIntegerFourBytes,org.teleal.cling.model.types.UnsignedIntegerFourBytes,java.lang.String) -> search
    org.teleal.cling.support.model.BrowseResult search(java.lang.String,java.lang.String,java.lang.String,long,long,org.teleal.cling.support.model.SortCriterion[]) -> search
org.teleal.cling.support.contentdirectory.ContentDirectoryErrorCode -> org.teleal.cling.support.contentdirectory.ContentDirectoryErrorCode:
    org.teleal.cling.support.contentdirectory.ContentDirectoryErrorCode NO_SUCH_OBJECT -> NO_SUCH_OBJECT
    org.teleal.cling.support.contentdirectory.ContentDirectoryErrorCode UNSUPPORTED_SORT_CRITERIA -> UNSUPPORTED_SORT_CRITERIA
    org.teleal.cling.support.contentdirectory.ContentDirectoryErrorCode CANNOT_PROCESS -> CANNOT_PROCESS
    int code -> code
    java.lang.String description -> description
    org.teleal.cling.support.contentdirectory.ContentDirectoryErrorCode[] $VALUES -> $VALUES
    org.teleal.cling.support.contentdirectory.ContentDirectoryErrorCode[] values() -> values
    org.teleal.cling.support.contentdirectory.ContentDirectoryErrorCode valueOf(java.lang.String) -> valueOf
    int getCode() -> getCode
    java.lang.String getDescription() -> getDescription
    org.teleal.cling.support.contentdirectory.ContentDirectoryErrorCode getByCode(int) -> getByCode
org.teleal.cling.support.contentdirectory.ContentDirectoryException -> org.teleal.cling.support.contentdirectory.ContentDirectoryException:
org.teleal.cling.support.contentdirectory.DIDLParser -> org.teleal.cling.support.contentdirectory.DIDLParser:
    java.util.logging.Logger log -> log
    org.teleal.cling.support.model.DIDLContent parseResource(java.lang.String) -> parseResource
    org.teleal.cling.support.model.DIDLContent parse(java.lang.String) -> parse
    org.teleal.cling.support.contentdirectory.DIDLParser$RootHandler createRootHandler(org.teleal.cling.support.model.DIDLContent,org.teleal.common.xml.SAXParser) -> createRootHandler
    org.teleal.cling.support.contentdirectory.DIDLParser$ContainerHandler createContainerHandler(org.teleal.cling.support.model.container.Container,org.teleal.common.xml.SAXParser$Handler) -> createContainerHandler
    org.teleal.cling.support.contentdirectory.DIDLParser$ItemHandler createItemHandler(org.teleal.cling.support.model.item.Item,org.teleal.common.xml.SAXParser$Handler) -> createItemHandler
    org.teleal.cling.support.contentdirectory.DIDLParser$ResHandler createResHandler(org.teleal.cling.support.model.Res,org.teleal.common.xml.SAXParser$Handler) -> createResHandler
    org.teleal.cling.support.contentdirectory.DIDLParser$DescMetaHandler createDescMetaHandler(org.teleal.cling.support.model.DescMeta,org.teleal.common.xml.SAXParser$Handler) -> createDescMetaHandler
    org.teleal.cling.support.model.container.Container createContainer(org.xml.sax.Attributes) -> createContainer
    org.teleal.cling.support.model.item.Item createItem(org.xml.sax.Attributes) -> createItem
    org.teleal.cling.support.model.Res createResource(org.xml.sax.Attributes) -> createResource
    org.teleal.cling.support.model.DescMeta createDescMeta(org.xml.sax.Attributes) -> createDescMeta
    java.lang.String generate(org.teleal.cling.support.model.DIDLContent) -> generate
    java.lang.String generate(org.teleal.cling.support.model.DIDLContent,boolean) -> generate
    java.lang.String documentToString(org.w3c.dom.Document,boolean) -> documentToString
    org.w3c.dom.Document buildDOM(org.teleal.cling.support.model.DIDLContent,boolean) -> buildDOM
    void generateRoot(org.teleal.cling.support.model.DIDLContent,org.w3c.dom.Document,boolean) -> generateRoot
    void generateContainer(org.teleal.cling.support.model.container.Container,org.w3c.dom.Document,org.w3c.dom.Element,boolean) -> generateContainer
    void generateItem(org.teleal.cling.support.model.item.Item,org.w3c.dom.Document,org.w3c.dom.Element) -> generateItem
    void generateResource(org.teleal.cling.support.model.Res,org.w3c.dom.Document,org.w3c.dom.Element) -> generateResource
    void generateDescMetadata(org.teleal.cling.support.model.DescMeta,org.w3c.dom.Document,org.w3c.dom.Element) -> generateDescMetadata
    void populateDescMetadata(org.w3c.dom.Element,org.teleal.cling.support.model.DescMeta) -> populateDescMetadata
    void appendProperties(org.w3c.dom.Document,org.w3c.dom.Element,org.teleal.cling.support.model.DIDLObject,java.lang.String,java.lang.Class,java.lang.String) -> appendProperties
    void appendClass(org.w3c.dom.Document,org.w3c.dom.Element,org.teleal.cling.support.model.DIDLObject$Class,java.lang.String,boolean) -> appendClass
    void debugXML(java.lang.String) -> debugXML
    java.util.logging.Logger access$000() -> access$000
org.teleal.cling.support.contentdirectory.DIDLParser$ContainerHandler -> org.teleal.cling.support.contentdirectory.DIDLParser$ContainerHandler:
    org.teleal.cling.support.contentdirectory.DIDLParser this$0 -> this$0
    void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes) -> startElement
    void endElement(java.lang.String,java.lang.String,java.lang.String) -> endElement
    boolean isLastElement(java.lang.String,java.lang.String,java.lang.String) -> isLastElement
org.teleal.cling.support.contentdirectory.DIDLParser$DIDLObjectHandler -> org.teleal.cling.support.contentdirectory.DIDLParser$DIDLObjectHandler:
    org.teleal.cling.support.contentdirectory.DIDLParser this$0 -> this$0
    void endElement(java.lang.String,java.lang.String,java.lang.String) -> endElement
org.teleal.cling.support.contentdirectory.DIDLParser$DescMetaHandler -> org.teleal.cling.support.contentdirectory.DIDLParser$DescMetaHandler:
    org.w3c.dom.Element current -> current
    org.teleal.cling.support.contentdirectory.DIDLParser this$0 -> this$0
    org.teleal.cling.support.model.DescMeta getInstance() -> getInstance
    void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes) -> startElement
    void endElement(java.lang.String,java.lang.String,java.lang.String) -> endElement
    boolean isLastElement(java.lang.String,java.lang.String,java.lang.String) -> isLastElement
    java.lang.Object getInstance() -> getInstance
org.teleal.cling.support.contentdirectory.DIDLParser$ItemHandler -> org.teleal.cling.support.contentdirectory.DIDLParser$ItemHandler:
    org.teleal.cling.support.contentdirectory.DIDLParser this$0 -> this$0
    void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes) -> startElement
    boolean isLastElement(java.lang.String,java.lang.String,java.lang.String) -> isLastElement
org.teleal.cling.support.contentdirectory.DIDLParser$ResHandler -> org.teleal.cling.support.contentdirectory.DIDLParser$ResHandler:
    org.teleal.cling.support.contentdirectory.DIDLParser this$0 -> this$0
    void endElement(java.lang.String,java.lang.String,java.lang.String) -> endElement
    boolean isLastElement(java.lang.String,java.lang.String,java.lang.String) -> isLastElement
org.teleal.cling.support.contentdirectory.DIDLParser$RootHandler -> org.teleal.cling.support.contentdirectory.DIDLParser$RootHandler:
    org.teleal.cling.support.contentdirectory.DIDLParser this$0 -> this$0
    void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes) -> startElement
    boolean isLastElement(java.lang.String,java.lang.String,java.lang.String) -> isLastElement
org.teleal.cling.support.contentdirectory.callback.Browse -> org.teleal.cling.support.contentdirectory.callback.Browse:
    java.lang.String CAPS_WILDCARD -> CAPS_WILDCARD
    java.util.logging.Logger log -> log
    void run() -> run
    void success(org.teleal.cling.model.action.ActionInvocation) -> success
    long getDefaultMaxResults() -> getDefaultMaxResults
    boolean receivedRaw(org.teleal.cling.model.action.ActionInvocation,org.teleal.cling.support.model.BrowseResult) -> receivedRaw
    void received(org.teleal.cling.model.action.ActionInvocation,org.teleal.cling.support.model.DIDLContent) -> received
    void updateStatus(org.teleal.cling.support.contentdirectory.callback.Browse$Status) -> updateStatus
org.teleal.cling.support.contentdirectory.callback.Browse$Status -> org.teleal.cling.support.contentdirectory.callback.Browse$Status:
    org.teleal.cling.support.contentdirectory.callback.Browse$Status NO_CONTENT -> NO_CONTENT
    org.teleal.cling.support.contentdirectory.callback.Browse$Status LOADING -> LOADING
    org.teleal.cling.support.contentdirectory.callback.Browse$Status OK -> OK
    java.lang.String defaultMessage -> defaultMessage
    org.teleal.cling.support.contentdirectory.callback.Browse$Status[] $VALUES -> $VALUES
    org.teleal.cling.support.contentdirectory.callback.Browse$Status[] values() -> values
    org.teleal.cling.support.contentdirectory.callback.Browse$Status valueOf(java.lang.String) -> valueOf
    java.lang.String getDefaultMessage() -> getDefaultMessage
org.teleal.cling.support.contentdirectory.ui.ContentBrowseActionCallback -> org.teleal.cling.support.contentdirectory.ui.ContentBrowseActionCallback:
    java.util.logging.Logger log -> log
    javax.swing.tree.DefaultTreeModel treeModel -> treeModel
    javax.swing.tree.DefaultMutableTreeNode treeNode -> treeNode
    javax.swing.tree.DefaultTreeModel getTreeModel() -> getTreeModel
    javax.swing.tree.DefaultMutableTreeNode getTreeNode() -> getTreeNode
    void received(org.teleal.cling.model.action.ActionInvocation,org.teleal.cling.support.model.DIDLContent) -> received
    void updateStatus(org.teleal.cling.support.contentdirectory.callback.Browse$Status) -> updateStatus
    void failure(org.teleal.cling.model.action.ActionInvocation,org.teleal.cling.model.message.UpnpResponse,java.lang.String) -> failure
    void updateTreeModel(java.util.List) -> updateTreeModel
    void removeChildren() -> removeChildren
    void insertChild(javax.swing.tree.MutableTreeNode) -> insertChild
    void updateStatusUI(org.teleal.cling.support.contentdirectory.callback.Browse$Status,javax.swing.tree.DefaultMutableTreeNode,javax.swing.tree.DefaultTreeModel) -> updateStatusUI
    void failureUI(java.lang.String) -> failureUI
org.teleal.cling.support.contentdirectory.ui.ContentBrowseActionCallback$1 -> org.teleal.cling.support.contentdirectory.ui.ContentBrowseActionCallback$1:
    org.teleal.cling.support.contentdirectory.ui.ContentBrowseActionCallback this$0 -> this$0
    boolean isLeaf() -> isLeaf
org.teleal.cling.support.contentdirectory.ui.ContentBrowseActionCallback$2 -> org.teleal.cling.support.contentdirectory.ui.ContentBrowseActionCallback$2:
    org.teleal.cling.support.contentdirectory.ui.ContentBrowseActionCallback this$0 -> this$0
    boolean isLeaf() -> isLeaf
org.teleal.cling.support.contentdirectory.ui.ContentBrowseActionCallback$3 -> org.teleal.cling.support.contentdirectory.ui.ContentBrowseActionCallback$3:
    java.util.List val$childNodes -> val$childNodes
    org.teleal.cling.support.contentdirectory.ui.ContentBrowseActionCallback this$0 -> this$0
    void run() -> run
org.teleal.cling.support.contentdirectory.ui.ContentBrowseActionCallback$4 -> org.teleal.cling.support.contentdirectory.ui.ContentBrowseActionCallback$4:
    org.teleal.cling.support.contentdirectory.callback.Browse$Status val$status -> val$status
    org.teleal.cling.support.contentdirectory.ui.ContentBrowseActionCallback this$0 -> this$0
    void run() -> run
org.teleal.cling.support.contentdirectory.ui.ContentBrowseActionCallback$5 -> org.teleal.cling.support.contentdirectory.ui.ContentBrowseActionCallback$5:
    java.lang.String val$defaultMsg -> val$defaultMsg
    org.teleal.cling.support.contentdirectory.ui.ContentBrowseActionCallback this$0 -> this$0
    void run() -> run
org.teleal.cling.support.contentdirectory.ui.ContentBrowseActionCallbackCreator -> org.teleal.cling.support.contentdirectory.ui.ContentBrowseActionCallbackCreator:
    org.teleal.cling.controlpoint.ActionCallback createContentBrowseActionCallback(org.teleal.cling.model.meta.Service,javax.swing.tree.DefaultTreeModel,javax.swing.tree.DefaultMutableTreeNode) -> createContentBrowseActionCallback
org.teleal.cling.support.contentdirectory.ui.ContentTree -> org.teleal.cling.support.contentdirectory.ui.ContentTree:
    org.teleal.cling.support.model.container.Container rootContainer -> rootContainer
    javax.swing.tree.DefaultMutableTreeNode rootNode -> rootNode
    org.teleal.cling.support.model.container.Container getRootContainer() -> getRootContainer
    javax.swing.tree.DefaultMutableTreeNode getRootNode() -> getRootNode
    org.teleal.cling.support.model.container.Container createRootContainer(org.teleal.cling.model.meta.Service) -> createRootContainer
    javax.swing.event.TreeWillExpandListener createContainerTreeExpandListener(org.teleal.cling.controlpoint.ControlPoint,org.teleal.cling.model.meta.Service,javax.swing.tree.DefaultTreeModel) -> createContainerTreeExpandListener
    javax.swing.tree.DefaultTreeCellRenderer createContainerTreeCellRenderer() -> createContainerTreeCellRenderer
    org.teleal.cling.controlpoint.ActionCallback createContentBrowseActionCallback(org.teleal.cling.model.meta.Service,javax.swing.tree.DefaultTreeModel,javax.swing.tree.DefaultMutableTreeNode) -> createContentBrowseActionCallback
    void updateStatus(org.teleal.cling.support.contentdirectory.callback.Browse$Status,javax.swing.tree.DefaultMutableTreeNode,javax.swing.tree.DefaultTreeModel) -> updateStatus
    void failure(java.lang.String) -> failure
org.teleal.cling.support.contentdirectory.ui.ContentTree$1 -> org.teleal.cling.support.contentdirectory.ui.ContentTree$1:
    org.teleal.cling.support.contentdirectory.ui.ContentTree this$0 -> this$0
    boolean isLeaf() -> isLeaf
org.teleal.cling.support.contentdirectory.ui.ContentTree$2 -> org.teleal.cling.support.contentdirectory.ui.ContentTree$2:
    org.teleal.cling.support.contentdirectory.ui.ContentTree this$0 -> this$0
    void updateStatusUI(org.teleal.cling.support.contentdirectory.callback.Browse$Status,javax.swing.tree.DefaultMutableTreeNode,javax.swing.tree.DefaultTreeModel) -> updateStatusUI
    void failureUI(java.lang.String) -> failureUI
org.teleal.cling.support.contentdirectory.ui.ContentTree$3 -> org.teleal.cling.support.contentdirectory.ui.ContentTree$3:
    int[] $SwitchMap$org$teleal$cling$support$contentdirectory$callback$Browse$Status -> $SwitchMap$org$teleal$cling$support$contentdirectory$callback$Browse$Status
org.teleal.cling.support.contentdirectory.ui.ContentTreeCellRenderer -> org.teleal.cling.support.contentdirectory.ui.ContentTreeCellRenderer:
    java.awt.Component getTreeCellRendererComponent(javax.swing.JTree,java.lang.Object,boolean,boolean,boolean,int,boolean) -> getTreeCellRendererComponent
    void onCreate() -> onCreate
    javax.swing.Icon getContainerOpenIcon() -> getContainerOpenIcon
    javax.swing.Icon getContainerClosedIcon() -> getContainerClosedIcon
    javax.swing.Icon getItemIcon(org.teleal.cling.support.model.item.Item,java.lang.String) -> getItemIcon
    javax.swing.Icon getInfoIcon() -> getInfoIcon
org.teleal.cling.support.contentdirectory.ui.ContentTreeExpandListener -> org.teleal.cling.support.contentdirectory.ui.ContentTreeExpandListener:
    org.teleal.cling.controlpoint.ControlPoint controlPoint -> controlPoint
    org.teleal.cling.model.meta.Service service -> service
    javax.swing.tree.DefaultTreeModel treeModel -> treeModel
    org.teleal.cling.support.contentdirectory.ui.ContentBrowseActionCallbackCreator actionCreator -> actionCreator
    void treeWillExpand(javax.swing.event.TreeExpansionEvent) -> treeWillExpand
    void treeWillCollapse(javax.swing.event.TreeExpansionEvent) -> treeWillCollapse
org.teleal.cling.support.igd.PortMappingListener -> org.teleal.cling.support.igd.PortMappingListener:
    java.util.logging.Logger log -> log
    org.teleal.cling.model.types.DeviceType IGD_DEVICE_TYPE -> IGD_DEVICE_TYPE
    org.teleal.cling.model.types.DeviceType CONNECTION_DEVICE_TYPE -> CONNECTION_DEVICE_TYPE
    org.teleal.cling.model.types.ServiceType IP_SERVICE_TYPE -> IP_SERVICE_TYPE
    org.teleal.cling.model.types.ServiceType PPP_SERVICE_TYPE -> PPP_SERVICE_TYPE
    org.teleal.cling.support.model.PortMapping[] portMappings -> portMappings
    java.util.Map activePortMappings -> activePortMappings
    void deviceAdded(org.teleal.cling.registry.Registry,org.teleal.cling.model.meta.Device) -> deviceAdded
    void deviceRemoved(org.teleal.cling.registry.Registry,org.teleal.cling.model.meta.Device) -> deviceRemoved
    void beforeShutdown(org.teleal.cling.registry.Registry) -> beforeShutdown
    org.teleal.cling.model.meta.Service discoverConnectionService(org.teleal.cling.model.meta.Device) -> discoverConnectionService
    void handleFailureMessage(java.lang.String) -> handleFailureMessage
    java.util.logging.Logger access$000() -> access$000
org.teleal.cling.support.igd.PortMappingListener$1 -> org.teleal.cling.support.igd.PortMappingListener$1:
    org.teleal.cling.support.model.PortMapping val$pm -> val$pm
    java.util.List val$activeForService -> val$activeForService
    org.teleal.cling.support.igd.PortMappingListener this$0 -> this$0
    void success(org.teleal.cling.model.action.ActionInvocation) -> success
    void failure(org.teleal.cling.model.action.ActionInvocation,org.teleal.cling.model.message.UpnpResponse,java.lang.String) -> failure
org.teleal.cling.support.igd.PortMappingListener$2 -> org.teleal.cling.support.igd.PortMappingListener$2:
    org.teleal.cling.support.model.PortMapping val$pm -> val$pm
    java.util.Iterator val$it -> val$it
    org.teleal.cling.support.igd.PortMappingListener this$0 -> this$0
    void success(org.teleal.cling.model.action.ActionInvocation) -> success
    void failure(org.teleal.cling.model.action.ActionInvocation,org.teleal.cling.model.message.UpnpResponse,java.lang.String) -> failure
org.teleal.cling.support.igd.callback.GetExternalIP -> org.teleal.cling.support.igd.callback.GetExternalIP:
    void success(org.teleal.cling.model.action.ActionInvocation) -> success
    void success(java.lang.String) -> success
org.teleal.cling.support.igd.callback.GetStatusInfo -> org.teleal.cling.support.igd.callback.GetStatusInfo:
    void success(org.teleal.cling.model.action.ActionInvocation) -> success
    void success(org.teleal.cling.support.model.Connection$StatusInfo) -> success
org.teleal.cling.support.igd.callback.PortMappingAdd -> org.teleal.cling.support.igd.callback.PortMappingAdd:
    org.teleal.cling.support.model.PortMapping portMapping -> portMapping
org.teleal.cling.support.igd.callback.PortMappingDelete -> org.teleal.cling.support.igd.callback.PortMappingDelete:
    org.teleal.cling.support.model.PortMapping portMapping -> portMapping
org.teleal.cling.support.lastchange.Event -> org.teleal.cling.support.lastchange.Event:
    java.util.List instanceIDs -> instanceIDs
    java.util.List getInstanceIDs() -> getInstanceIDs
    org.teleal.cling.support.lastchange.InstanceID getInstanceID(org.teleal.cling.model.types.UnsignedIntegerFourBytes) -> getInstanceID
    void clear() -> clear
    void setEventedValue(org.teleal.cling.model.types.UnsignedIntegerFourBytes,org.teleal.cling.support.lastchange.EventedValue) -> setEventedValue
    org.teleal.cling.support.lastchange.EventedValue getEventedValue(org.teleal.cling.model.types.UnsignedIntegerFourBytes,java.lang.Class) -> getEventedValue
    boolean hasChanges() -> hasChanges
org.teleal.cling.support.lastchange.EventedValue -> org.teleal.cling.support.lastchange.EventedValue:
    java.lang.Object value -> value
    java.lang.String getName() -> getName
    java.lang.Object getValue() -> getValue
    java.util.Map$Entry[] getAttributes() -> getAttributes
    java.lang.Object valueOf(java.util.Map$Entry[]) -> valueOf
    java.lang.Object valueOf(java.lang.String) -> valueOf
    java.lang.String toString() -> toString
    org.teleal.cling.model.types.Datatype getDatatype() -> getDatatype
org.teleal.cling.support.lastchange.EventedValueEnum -> org.teleal.cling.support.lastchange.EventedValueEnum:
    java.lang.Enum valueOf(java.lang.String) -> valueOf
    java.lang.Enum enumValueOf(java.lang.String) -> enumValueOf
    java.lang.String toString() -> toString
    org.teleal.cling.model.types.Datatype getDatatype() -> getDatatype
    java.lang.Object valueOf(java.lang.String) -> valueOf
org.teleal.cling.support.lastchange.EventedValueEnumArray -> org.teleal.cling.support.lastchange.EventedValueEnumArray:
    java.lang.Enum[] valueOf(java.lang.String) -> valueOf
    java.lang.Enum[] enumValueOf(java.lang.String[]) -> enumValueOf
    java.lang.String toString() -> toString
    org.teleal.cling.model.types.Datatype getDatatype() -> getDatatype
    java.lang.Object valueOf(java.lang.String) -> valueOf
org.teleal.cling.support.lastchange.EventedValueShort -> org.teleal.cling.support.lastchange.EventedValueShort:
    org.teleal.cling.model.types.Datatype getDatatype() -> getDatatype
org.teleal.cling.support.lastchange.EventedValueString -> org.teleal.cling.support.lastchange.EventedValueString:
    org.teleal.cling.model.types.Datatype getDatatype() -> getDatatype
org.teleal.cling.support.lastchange.EventedValueURI -> org.teleal.cling.support.lastchange.EventedValueURI:
    java.util.logging.Logger log -> log
    java.net.URI valueOf(java.lang.String) -> valueOf
    org.teleal.cling.model.types.Datatype getDatatype() -> getDatatype
    java.lang.Object valueOf(java.lang.String) -> valueOf
org.teleal.cling.support.lastchange.EventedValueUnsignedIntegerFourBytes -> org.teleal.cling.support.lastchange.EventedValueUnsignedIntegerFourBytes:
    org.teleal.cling.model.types.Datatype getDatatype() -> getDatatype
org.teleal.cling.support.lastchange.EventedValueUnsignedIntegerTwoBytes -> org.teleal.cling.support.lastchange.EventedValueUnsignedIntegerTwoBytes:
    org.teleal.cling.model.types.Datatype getDatatype() -> getDatatype
org.teleal.cling.support.lastchange.InstanceID -> org.teleal.cling.support.lastchange.InstanceID:
    org.teleal.cling.model.types.UnsignedIntegerFourBytes id -> id
    java.util.List values -> values
    org.teleal.cling.model.types.UnsignedIntegerFourBytes getId() -> getId
    java.util.List getValues() -> getValues
org.teleal.cling.support.lastchange.LastChange -> org.teleal.cling.support.lastchange.LastChange:
    org.teleal.cling.support.lastchange.Event event -> event
    org.teleal.cling.support.lastchange.LastChangeParser parser -> parser
    java.lang.String previousValue -> previousValue
    void reset() -> reset
    void setEventedValue(int,org.teleal.cling.support.lastchange.EventedValue[]) -> setEventedValue
    void setEventedValue(org.teleal.cling.model.types.UnsignedIntegerFourBytes,org.teleal.cling.support.lastchange.EventedValue[]) -> setEventedValue
    org.teleal.cling.model.types.UnsignedIntegerFourBytes[] getInstanceIDs() -> getInstanceIDs
    org.teleal.cling.support.lastchange.EventedValue[] getEventedValues(org.teleal.cling.model.types.UnsignedIntegerFourBytes) -> getEventedValues
    org.teleal.cling.support.lastchange.EventedValue getEventedValue(int,java.lang.Class) -> getEventedValue
    org.teleal.cling.support.lastchange.EventedValue getEventedValue(org.teleal.cling.model.types.UnsignedIntegerFourBytes,java.lang.Class) -> getEventedValue
    void fire(java.beans.PropertyChangeSupport) -> fire
    java.lang.String toString() -> toString
org.teleal.cling.support.lastchange.LastChangeParser -> org.teleal.cling.support.lastchange.LastChangeParser:
    java.util.logging.Logger log -> log
    java.lang.String getNamespace() -> getNamespace
    java.util.Set getEventedVariables() -> getEventedVariables
    org.teleal.cling.support.lastchange.EventedValue createValue(java.lang.String,java.util.Map$Entry[]) -> createValue
    org.teleal.cling.support.lastchange.Event parseResource(java.lang.String) -> parseResource
    org.teleal.cling.support.lastchange.Event parse(java.lang.String) -> parse
    java.lang.String generate(org.teleal.cling.support.lastchange.Event) -> generate
    org.w3c.dom.Document buildDOM(org.teleal.cling.support.lastchange.Event) -> buildDOM
    void generateRoot(org.teleal.cling.support.lastchange.Event,org.w3c.dom.Document) -> generateRoot
    void generateInstanceIDs(org.teleal.cling.support.lastchange.Event,org.w3c.dom.Document,org.w3c.dom.Element) -> generateInstanceIDs
    void generateEventedValue(org.teleal.cling.support.lastchange.EventedValue,org.w3c.dom.Document,org.w3c.dom.Element) -> generateEventedValue
    java.util.logging.Logger access$000() -> access$000
org.teleal.cling.support.lastchange.LastChangeParser$CONSTANTS -> org.teleal.cling.support.lastchange.LastChangeParser$CONSTANTS:
    org.teleal.cling.support.lastchange.LastChangeParser$CONSTANTS Event -> Event
    org.teleal.cling.support.lastchange.LastChangeParser$CONSTANTS InstanceID -> InstanceID
    org.teleal.cling.support.lastchange.LastChangeParser$CONSTANTS val -> val
    org.teleal.cling.support.lastchange.LastChangeParser$CONSTANTS[] $VALUES -> $VALUES
    org.teleal.cling.support.lastchange.LastChangeParser$CONSTANTS[] values() -> values
    org.teleal.cling.support.lastchange.LastChangeParser$CONSTANTS valueOf(java.lang.String) -> valueOf
    boolean equals(java.lang.String) -> equals
org.teleal.cling.support.lastchange.LastChangeParser$InstanceIDHandler -> org.teleal.cling.support.lastchange.LastChangeParser$InstanceIDHandler:
    org.teleal.cling.support.lastchange.LastChangeParser this$0 -> this$0
    void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes) -> startElement
    boolean isLastElement(java.lang.String,java.lang.String,java.lang.String) -> isLastElement
org.teleal.cling.support.lastchange.LastChangeParser$RootHandler -> org.teleal.cling.support.lastchange.LastChangeParser$RootHandler:
    org.teleal.cling.support.lastchange.LastChangeParser this$0 -> this$0
    void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes) -> startElement
org.teleal.cling.support.messagebox.AddMessage -> org.teleal.cling.support.messagebox.AddMessage:
    org.teleal.common.util.MimeType mimeType -> mimeType
org.teleal.cling.support.messagebox.RemoveMessage -> org.teleal.cling.support.messagebox.RemoveMessage:
org.teleal.cling.support.messagebox.model.DateTime -> org.teleal.cling.support.messagebox.model.DateTime:
    java.lang.String date -> date
    java.lang.String time -> time
    java.lang.String getDate() -> getDate
    java.lang.String getTime() -> getTime
    void appendMessageElements(org.teleal.cling.support.messagebox.parser.MessageElement) -> appendMessageElements
    java.lang.String getCurrentDate() -> getCurrentDate
    java.lang.String getCurrentTime() -> getCurrentTime
org.teleal.cling.support.messagebox.model.ElementAppender -> org.teleal.cling.support.messagebox.model.ElementAppender:
    void appendMessageElements(org.teleal.cling.support.messagebox.parser.MessageElement) -> appendMessageElements
org.teleal.cling.support.messagebox.model.Message -> org.teleal.cling.support.messagebox.model.Message:
    java.util.Random randomGenerator -> randomGenerator
    int id -> id
    org.teleal.cling.support.messagebox.model.Message$Category category -> category
    org.teleal.cling.support.messagebox.model.Message$DisplayType displayType -> displayType
    int getId() -> getId
    org.teleal.cling.support.messagebox.model.Message$Category getCategory() -> getCategory
    org.teleal.cling.support.messagebox.model.Message$DisplayType getDisplayType() -> getDisplayType
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
org.teleal.cling.support.messagebox.model.Message$Category -> org.teleal.cling.support.messagebox.model.Message$Category:
    org.teleal.cling.support.messagebox.model.Message$Category SMS -> SMS
    org.teleal.cling.support.messagebox.model.Message$Category INCOMING_CALL -> INCOMING_CALL
    org.teleal.cling.support.messagebox.model.Message$Category SCHEDULE_REMINDER -> SCHEDULE_REMINDER
    java.lang.String text -> text
    org.teleal.cling.support.messagebox.model.Message$Category[] $VALUES -> $VALUES
    org.teleal.cling.support.messagebox.model.Message$Category[] values() -> values
    org.teleal.cling.support.messagebox.model.Message$Category valueOf(java.lang.String) -> valueOf
org.teleal.cling.support.messagebox.model.Message$DisplayType -> org.teleal.cling.support.messagebox.model.Message$DisplayType:
    org.teleal.cling.support.messagebox.model.Message$DisplayType MINIMUM -> MINIMUM
    org.teleal.cling.support.messagebox.model.Message$DisplayType MAXIMUM -> MAXIMUM
    java.lang.String text -> text
    org.teleal.cling.support.messagebox.model.Message$DisplayType[] $VALUES -> $VALUES
    org.teleal.cling.support.messagebox.model.Message$DisplayType[] values() -> values
    org.teleal.cling.support.messagebox.model.Message$DisplayType valueOf(java.lang.String) -> valueOf
org.teleal.cling.support.messagebox.model.MessageIncomingCall -> org.teleal.cling.support.messagebox.model.MessageIncomingCall:
    org.teleal.cling.support.messagebox.model.DateTime callTime -> callTime
    org.teleal.cling.support.messagebox.model.NumberName callee -> callee
    org.teleal.cling.support.messagebox.model.NumberName caller -> caller
    org.teleal.cling.support.messagebox.model.DateTime getCallTime() -> getCallTime
    org.teleal.cling.support.messagebox.model.NumberName getCallee() -> getCallee
    org.teleal.cling.support.messagebox.model.NumberName getCaller() -> getCaller
    void appendMessageElements(org.teleal.cling.support.messagebox.parser.MessageElement) -> appendMessageElements
org.teleal.cling.support.messagebox.model.MessageSMS -> org.teleal.cling.support.messagebox.model.MessageSMS:
    org.teleal.cling.support.messagebox.model.DateTime receiveTime -> receiveTime
    org.teleal.cling.support.messagebox.model.NumberName receiver -> receiver
    org.teleal.cling.support.messagebox.model.NumberName sender -> sender
    java.lang.String body -> body
    org.teleal.cling.support.messagebox.model.DateTime getReceiveTime() -> getReceiveTime
    org.teleal.cling.support.messagebox.model.NumberName getReceiver() -> getReceiver
    org.teleal.cling.support.messagebox.model.NumberName getSender() -> getSender
    java.lang.String getBody() -> getBody
    void appendMessageElements(org.teleal.cling.support.messagebox.parser.MessageElement) -> appendMessageElements
org.teleal.cling.support.messagebox.model.MessageScheduleReminder -> org.teleal.cling.support.messagebox.model.MessageScheduleReminder:
    org.teleal.cling.support.messagebox.model.DateTime startTime -> startTime
    org.teleal.cling.support.messagebox.model.NumberName owner -> owner
    java.lang.String subject -> subject
    org.teleal.cling.support.messagebox.model.DateTime endTime -> endTime
    java.lang.String location -> location
    java.lang.String body -> body
    org.teleal.cling.support.messagebox.model.DateTime getStartTime() -> getStartTime
    org.teleal.cling.support.messagebox.model.NumberName getOwner() -> getOwner
    java.lang.String getSubject() -> getSubject
    org.teleal.cling.support.messagebox.model.DateTime getEndTime() -> getEndTime
    java.lang.String getLocation() -> getLocation
    java.lang.String getBody() -> getBody
    void appendMessageElements(org.teleal.cling.support.messagebox.parser.MessageElement) -> appendMessageElements
org.teleal.cling.support.messagebox.model.NumberName -> org.teleal.cling.support.messagebox.model.NumberName:
    java.lang.String number -> number
    java.lang.String name -> name
    java.lang.String getNumber() -> getNumber
    java.lang.String getName() -> getName
    void appendMessageElements(org.teleal.cling.support.messagebox.parser.MessageElement) -> appendMessageElements
org.teleal.cling.support.messagebox.parser.MessageDOM -> org.teleal.cling.support.messagebox.parser.MessageDOM:
    java.lang.String NAMESPACE_URI -> NAMESPACE_URI
    java.lang.String getRootElementNamespace() -> getRootElementNamespace
    org.teleal.cling.support.messagebox.parser.MessageElement getRoot(javax.xml.xpath.XPath) -> getRoot
    org.teleal.cling.support.messagebox.parser.MessageDOM copy() -> copy
    org.teleal.cling.support.messagebox.parser.MessageElement createRoot(javax.xml.xpath.XPath,java.lang.String) -> createRoot
    org.teleal.common.xml.DOM copy() -> copy
    org.teleal.common.xml.DOMElement getRoot(javax.xml.xpath.XPath) -> getRoot
org.teleal.cling.support.messagebox.parser.MessageDOMParser -> org.teleal.cling.support.messagebox.parser.MessageDOMParser:
    org.teleal.cling.support.messagebox.parser.MessageDOM createDOM(org.w3c.dom.Document) -> createDOM
    org.teleal.common.xml.NamespaceContextMap createDefaultNamespaceContext(java.lang.String[]) -> createDefaultNamespaceContext
    javax.xml.xpath.XPath createXPath() -> createXPath
    org.teleal.common.xml.DOM createDOM(org.w3c.dom.Document) -> createDOM
org.teleal.cling.support.messagebox.parser.MessageDOMParser$1 -> org.teleal.cling.support.messagebox.parser.MessageDOMParser$1:
    org.teleal.cling.support.messagebox.parser.MessageDOMParser this$0 -> this$0
    java.lang.String getDefaultNamespaceURI() -> getDefaultNamespaceURI
org.teleal.cling.support.messagebox.parser.MessageElement -> org.teleal.cling.support.messagebox.parser.MessageElement:
    java.lang.String XPATH_PREFIX -> XPATH_PREFIX
    java.lang.String prefix(java.lang.String) -> prefix
    org.teleal.common.xml.DOMElement$Builder createParentBuilder(org.teleal.common.xml.DOMElement) -> createParentBuilder
    org.teleal.common.xml.DOMElement$ArrayBuilder createChildBuilder(org.teleal.common.xml.DOMElement) -> createChildBuilder
org.teleal.cling.support.messagebox.parser.MessageElement$1 -> org.teleal.cling.support.messagebox.parser.MessageElement$1:
    org.teleal.cling.support.messagebox.parser.MessageElement this$0 -> this$0
    org.teleal.cling.support.messagebox.parser.MessageElement build(org.w3c.dom.Element) -> build
    org.teleal.common.xml.DOMElement build(org.w3c.dom.Element) -> build
org.teleal.cling.support.messagebox.parser.MessageElement$2 -> org.teleal.cling.support.messagebox.parser.MessageElement$2:
    org.teleal.cling.support.messagebox.parser.MessageElement this$0 -> this$0
    org.teleal.cling.support.messagebox.parser.MessageElement[] newChildrenArray(int) -> newChildrenArray
    org.teleal.cling.support.messagebox.parser.MessageElement build(org.w3c.dom.Element) -> build
    org.teleal.common.xml.DOMElement[] newChildrenArray(int) -> newChildrenArray
    org.teleal.common.xml.DOMElement build(org.w3c.dom.Element) -> build
org.teleal.cling.support.model.AVTransport -> org.teleal.cling.support.model.AVTransport:
    org.teleal.cling.model.types.UnsignedIntegerFourBytes instanceID -> instanceID
    org.teleal.cling.support.lastchange.LastChange lastChange -> lastChange
    org.teleal.cling.support.model.MediaInfo mediaInfo -> mediaInfo
    org.teleal.cling.support.model.TransportInfo transportInfo -> transportInfo
    org.teleal.cling.support.model.PositionInfo positionInfo -> positionInfo
    org.teleal.cling.support.model.DeviceCapabilities deviceCapabilities -> deviceCapabilities
    org.teleal.cling.support.model.TransportSettings transportSettings -> transportSettings
    org.teleal.cling.model.types.UnsignedIntegerFourBytes getInstanceId() -> getInstanceId
    org.teleal.cling.support.lastchange.LastChange getLastChange() -> getLastChange
    org.teleal.cling.support.model.MediaInfo getMediaInfo() -> getMediaInfo
    void setMediaInfo(org.teleal.cling.support.model.MediaInfo) -> setMediaInfo
    org.teleal.cling.support.model.TransportInfo getTransportInfo() -> getTransportInfo
    void setTransportInfo(org.teleal.cling.support.model.TransportInfo) -> setTransportInfo
    org.teleal.cling.support.model.PositionInfo getPositionInfo() -> getPositionInfo
    void setPositionInfo(org.teleal.cling.support.model.PositionInfo) -> setPositionInfo
    org.teleal.cling.support.model.DeviceCapabilities getDeviceCapabilities() -> getDeviceCapabilities
    void setDeviceCapabilities(org.teleal.cling.support.model.DeviceCapabilities) -> setDeviceCapabilities
    org.teleal.cling.support.model.TransportSettings getTransportSettings() -> getTransportSettings
    void setTransportSettings(org.teleal.cling.support.model.TransportSettings) -> setTransportSettings
org.teleal.cling.support.model.BrowseFlag -> org.teleal.cling.support.model.BrowseFlag:
    org.teleal.cling.support.model.BrowseFlag METADATA -> METADATA
    org.teleal.cling.support.model.BrowseFlag DIRECT_CHILDREN -> DIRECT_CHILDREN
    java.lang.String protocolString -> protocolString
    org.teleal.cling.support.model.BrowseFlag[] $VALUES -> $VALUES
    org.teleal.cling.support.model.BrowseFlag[] values() -> values
    org.teleal.cling.support.model.BrowseFlag valueOf(java.lang.String) -> valueOf
    java.lang.String toString() -> toString
    org.teleal.cling.support.model.BrowseFlag valueOrNullOf(java.lang.String) -> valueOrNullOf
org.teleal.cling.support.model.BrowseResult -> org.teleal.cling.support.model.BrowseResult:
    java.lang.String result -> result
    org.teleal.cling.model.types.UnsignedIntegerFourBytes count -> count
    org.teleal.cling.model.types.UnsignedIntegerFourBytes totalMatches -> totalMatches
    org.teleal.cling.model.types.UnsignedIntegerFourBytes containerUpdateID -> containerUpdateID
    java.lang.String getResult() -> getResult
    org.teleal.cling.model.types.UnsignedIntegerFourBytes getCount() -> getCount
    long getCountLong() -> getCountLong
    org.teleal.cling.model.types.UnsignedIntegerFourBytes getTotalMatches() -> getTotalMatches
    long getTotalMatchesLong() -> getTotalMatchesLong
    org.teleal.cling.model.types.UnsignedIntegerFourBytes getContainerUpdateID() -> getContainerUpdateID
    long getContainerUpdateIDLong() -> getContainerUpdateIDLong
org.teleal.cling.support.model.Channel -> org.teleal.cling.support.model.Channel:
    org.teleal.cling.support.model.Channel Master -> Master
    org.teleal.cling.support.model.Channel LF -> LF
    org.teleal.cling.support.model.Channel RF -> RF
    org.teleal.cling.support.model.Channel CF -> CF
    org.teleal.cling.support.model.Channel LFE -> LFE
    org.teleal.cling.support.model.Channel LS -> LS
    org.teleal.cling.support.model.Channel RS -> RS
    org.teleal.cling.support.model.Channel LFC -> LFC
    org.teleal.cling.support.model.Channel RFC -> RFC
    org.teleal.cling.support.model.Channel SD -> SD
    org.teleal.cling.support.model.Channel SL -> SL
    org.teleal.cling.support.model.Channel SR -> SR
    org.teleal.cling.support.model.Channel T -> T
    org.teleal.cling.support.model.Channel[] $VALUES -> $VALUES
    org.teleal.cling.support.model.Channel[] values() -> values
    org.teleal.cling.support.model.Channel valueOf(java.lang.String) -> valueOf
org.teleal.cling.support.model.Connection -> org.teleal.cling.support.model.Connection:
org.teleal.cling.support.model.Connection$Error -> org.teleal.cling.support.model.Connection$Error:
    org.teleal.cling.support.model.Connection$Error ERROR_NONE -> ERROR_NONE
    org.teleal.cling.support.model.Connection$Error ERROR_COMMAND_ABORTED -> ERROR_COMMAND_ABORTED
    org.teleal.cling.support.model.Connection$Error ERROR_NOT_ENABLED_FOR_INTERNET -> ERROR_NOT_ENABLED_FOR_INTERNET
    org.teleal.cling.support.model.Connection$Error ERROR_USER_DISCONNECT -> ERROR_USER_DISCONNECT
    org.teleal.cling.support.model.Connection$Error ERROR_ISP_DISCONNECT -> ERROR_ISP_DISCONNECT
    org.teleal.cling.support.model.Connection$Error ERROR_IDLE_DISCONNECT -> ERROR_IDLE_DISCONNECT
    org.teleal.cling.support.model.Connection$Error ERROR_FORCED_DISCONNECT -> ERROR_FORCED_DISCONNECT
    org.teleal.cling.support.model.Connection$Error ERROR_NO_CARRIER -> ERROR_NO_CARRIER
    org.teleal.cling.support.model.Connection$Error ERROR_IP_CONFIGURATION -> ERROR_IP_CONFIGURATION
    org.teleal.cling.support.model.Connection$Error ERROR_UNKNOWN -> ERROR_UNKNOWN
    org.teleal.cling.support.model.Connection$Error[] $VALUES -> $VALUES
    org.teleal.cling.support.model.Connection$Error[] values() -> values
    org.teleal.cling.support.model.Connection$Error valueOf(java.lang.String) -> valueOf
org.teleal.cling.support.model.Connection$Status -> org.teleal.cling.support.model.Connection$Status:
    org.teleal.cling.support.model.Connection$Status Unconfigured -> Unconfigured
    org.teleal.cling.support.model.Connection$Status Connecting -> Connecting
    org.teleal.cling.support.model.Connection$Status Connected -> Connected
    org.teleal.cling.support.model.Connection$Status PendingDisconnect -> PendingDisconnect
    org.teleal.cling.support.model.Connection$Status Disconnecting -> Disconnecting
    org.teleal.cling.support.model.Connection$Status Disconnected -> Disconnected
    org.teleal.cling.support.model.Connection$Status[] $VALUES -> $VALUES
    org.teleal.cling.support.model.Connection$Status[] values() -> values
    org.teleal.cling.support.model.Connection$Status valueOf(java.lang.String) -> valueOf
org.teleal.cling.support.model.Connection$StatusInfo -> org.teleal.cling.support.model.Connection$StatusInfo:
    org.teleal.cling.support.model.Connection$Status status -> status
    long uptimeSeconds -> uptimeSeconds
    org.teleal.cling.support.model.Connection$Error lastError -> lastError
    org.teleal.cling.support.model.Connection$Status getStatus() -> getStatus
    long getUptimeSeconds() -> getUptimeSeconds
    org.teleal.cling.model.types.UnsignedIntegerFourBytes getUptime() -> getUptime
    org.teleal.cling.support.model.Connection$Error getLastError() -> getLastError
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
org.teleal.cling.support.model.Connection$Type -> org.teleal.cling.support.model.Connection$Type:
    org.teleal.cling.support.model.Connection$Type Unconfigured -> Unconfigured
    org.teleal.cling.support.model.Connection$Type IP_Routed -> IP_Routed
    org.teleal.cling.support.model.Connection$Type IP_Bridged -> IP_Bridged
    org.teleal.cling.support.model.Connection$Type[] $VALUES -> $VALUES
    org.teleal.cling.support.model.Connection$Type[] values() -> values
    org.teleal.cling.support.model.Connection$Type valueOf(java.lang.String) -> valueOf
org.teleal.cling.support.model.ConnectionInfo -> org.teleal.cling.support.model.ConnectionInfo:
    int connectionID -> connectionID
    int rcsID -> rcsID
    int avTransportID -> avTransportID
    org.teleal.cling.support.model.ProtocolInfo protocolInfo -> protocolInfo
    org.teleal.cling.model.ServiceReference peerConnectionManager -> peerConnectionManager
    int peerConnectionID -> peerConnectionID
    org.teleal.cling.support.model.ConnectionInfo$Direction direction -> direction
    org.teleal.cling.support.model.ConnectionInfo$Status connectionStatus -> connectionStatus
    int getConnectionID() -> getConnectionID
    int getRcsID() -> getRcsID
    int getAvTransportID() -> getAvTransportID
    org.teleal.cling.support.model.ProtocolInfo getProtocolInfo() -> getProtocolInfo
    org.teleal.cling.model.ServiceReference getPeerConnectionManager() -> getPeerConnectionManager
    int getPeerConnectionID() -> getPeerConnectionID
    org.teleal.cling.support.model.ConnectionInfo$Direction getDirection() -> getDirection
    org.teleal.cling.support.model.ConnectionInfo$Status getConnectionStatus() -> getConnectionStatus
    void setConnectionStatus(org.teleal.cling.support.model.ConnectionInfo$Status) -> setConnectionStatus
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
org.teleal.cling.support.model.ConnectionInfo$Direction -> org.teleal.cling.support.model.ConnectionInfo$Direction:
    org.teleal.cling.support.model.ConnectionInfo$Direction Output -> Output
    org.teleal.cling.support.model.ConnectionInfo$Direction Input -> Input
    org.teleal.cling.support.model.ConnectionInfo$Direction[] $VALUES -> $VALUES
    org.teleal.cling.support.model.ConnectionInfo$Direction[] values() -> values
    org.teleal.cling.support.model.ConnectionInfo$Direction valueOf(java.lang.String) -> valueOf
    org.teleal.cling.support.model.ConnectionInfo$Direction getOpposite() -> getOpposite
org.teleal.cling.support.model.ConnectionInfo$Status -> org.teleal.cling.support.model.ConnectionInfo$Status:
    org.teleal.cling.support.model.ConnectionInfo$Status OK -> OK
    org.teleal.cling.support.model.ConnectionInfo$Status ContentFormatMismatch -> ContentFormatMismatch
    org.teleal.cling.support.model.ConnectionInfo$Status InsufficientBandwidth -> InsufficientBandwidth
    org.teleal.cling.support.model.ConnectionInfo$Status UnreliableChannel -> UnreliableChannel
    org.teleal.cling.support.model.ConnectionInfo$Status Unknown -> Unknown
    org.teleal.cling.support.model.ConnectionInfo$Status[] $VALUES -> $VALUES
    org.teleal.cling.support.model.ConnectionInfo$Status[] values() -> values
    org.teleal.cling.support.model.ConnectionInfo$Status valueOf(java.lang.String) -> valueOf
org.teleal.cling.support.model.DIDLAttribute -> org.teleal.cling.support.model.DIDLAttribute:
    java.lang.String namespaceURI -> namespaceURI
    java.lang.String prefix -> prefix
    java.lang.String value -> value
    java.lang.String getNamespaceURI() -> getNamespaceURI
    java.lang.String getPrefix() -> getPrefix
    java.lang.String getValue() -> getValue
org.teleal.cling.support.model.DIDLContent -> org.teleal.cling.support.model.DIDLContent:
    java.lang.String NAMESPACE_URI -> NAMESPACE_URI
    java.lang.String DESC_WRAPPER_NAMESPACE_URI -> DESC_WRAPPER_NAMESPACE_URI
    java.util.List containers -> containers
    java.util.List items -> items
    java.util.List descMetadata -> descMetadata
    org.teleal.cling.support.model.container.Container getFirstContainer() -> getFirstContainer
    org.teleal.cling.support.model.DIDLContent addContainer(org.teleal.cling.support.model.container.Container) -> addContainer
    java.util.List getContainers() -> getContainers
    void setContainers(java.util.List) -> setContainers
    org.teleal.cling.support.model.DIDLContent addItem(org.teleal.cling.support.model.item.Item) -> addItem
    java.util.List getItems() -> getItems
    void setItems(java.util.List) -> setItems
    org.teleal.cling.support.model.DIDLContent addDescMetadata(org.teleal.cling.support.model.DescMeta) -> addDescMetadata
    java.util.List getDescMetadata() -> getDescMetadata
    void setDescMetadata(java.util.List) -> setDescMetadata
    void replaceGenericContainerAndItems() -> replaceGenericContainerAndItems
    java.util.List replaceGenericItems(java.util.List) -> replaceGenericItems
    java.util.List replaceGenericContainers(java.util.List) -> replaceGenericContainers
org.teleal.cling.support.model.DIDLObject -> org.teleal.cling.support.model.DIDLObject:
    java.lang.String id -> id
    java.lang.String parentID -> parentID
    java.lang.String title -> title
    java.lang.String creator -> creator
    boolean restricted -> restricted
    org.teleal.cling.support.model.WriteStatus writeStatus -> writeStatus
    org.teleal.cling.support.model.DIDLObject$Class clazz -> clazz
    java.util.List resources -> resources
    java.util.List properties -> properties
    java.util.List descMetadata -> descMetadata
    java.lang.String getId() -> getId
    org.teleal.cling.support.model.DIDLObject setId(java.lang.String) -> setId
    java.lang.String getParentID() -> getParentID
    org.teleal.cling.support.model.DIDLObject setParentID(java.lang.String) -> setParentID
    java.lang.String getTitle() -> getTitle
    org.teleal.cling.support.model.DIDLObject setTitle(java.lang.String) -> setTitle
    java.lang.String getCreator() -> getCreator
    org.teleal.cling.support.model.DIDLObject setCreator(java.lang.String) -> setCreator
    boolean isRestricted() -> isRestricted
    org.teleal.cling.support.model.DIDLObject setRestricted(boolean) -> setRestricted
    org.teleal.cling.support.model.WriteStatus getWriteStatus() -> getWriteStatus
    org.teleal.cling.support.model.DIDLObject setWriteStatus(org.teleal.cling.support.model.WriteStatus) -> setWriteStatus
    org.teleal.cling.support.model.Res getFirstResource() -> getFirstResource
    java.util.List getResources() -> getResources
    org.teleal.cling.support.model.DIDLObject setResources(java.util.List) -> setResources
    org.teleal.cling.support.model.DIDLObject addResource(org.teleal.cling.support.model.Res) -> addResource
    org.teleal.cling.support.model.DIDLObject$Class getClazz() -> getClazz
    org.teleal.cling.support.model.DIDLObject setClazz(org.teleal.cling.support.model.DIDLObject$Class) -> setClazz
    java.util.List getProperties() -> getProperties
    org.teleal.cling.support.model.DIDLObject setProperties(java.util.List) -> setProperties
    org.teleal.cling.support.model.DIDLObject addProperty(org.teleal.cling.support.model.DIDLObject$Property) -> addProperty
    org.teleal.cling.support.model.DIDLObject replaceFirstProperty(org.teleal.cling.support.model.DIDLObject$Property) -> replaceFirstProperty
    org.teleal.cling.support.model.DIDLObject replaceProperties(java.lang.Class,org.teleal.cling.support.model.DIDLObject$Property[]) -> replaceProperties
    org.teleal.cling.support.model.DIDLObject addProperties(org.teleal.cling.support.model.DIDLObject$Property[]) -> addProperties
    org.teleal.cling.support.model.DIDLObject removeProperties(java.lang.Class) -> removeProperties
    boolean hasProperty(java.lang.Class) -> hasProperty
    org.teleal.cling.support.model.DIDLObject$Property getFirstProperty(java.lang.Class) -> getFirstProperty
    org.teleal.cling.support.model.DIDLObject$Property getLastProperty(java.lang.Class) -> getLastProperty
    org.teleal.cling.support.model.DIDLObject$Property[] getProperties(java.lang.Class) -> getProperties
    org.teleal.cling.support.model.DIDLObject$Property[] getPropertiesByNamespace(java.lang.Class) -> getPropertiesByNamespace
    java.lang.Object getFirstPropertyValue(java.lang.Class) -> getFirstPropertyValue
    java.util.List getPropertyValues(java.lang.Class) -> getPropertyValues
    java.util.List getDescMetadata() -> getDescMetadata
    void setDescMetadata(java.util.List) -> setDescMetadata
    org.teleal.cling.support.model.DIDLObject addDescMetadata(org.teleal.cling.support.model.DescMeta) -> addDescMetadata
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
org.teleal.cling.support.model.DIDLObject$Class -> org.teleal.cling.support.model.DIDLObject$Class:
    java.lang.String value -> value
    java.lang.String friendlyName -> friendlyName
    boolean includeDerived -> includeDerived
    java.lang.String getValue() -> getValue
    void setValue(java.lang.String) -> setValue
    java.lang.String getFriendlyName() -> getFriendlyName
    void setFriendlyName(java.lang.String) -> setFriendlyName
    boolean isIncludeDerived() -> isIncludeDerived
    void setIncludeDerived(boolean) -> setIncludeDerived
    boolean equals(org.teleal.cling.support.model.DIDLObject) -> equals
org.teleal.cling.support.model.DIDLObject$Property -> org.teleal.cling.support.model.DIDLObject$Property:
    java.lang.Object value -> value
    java.lang.String descriptorName -> descriptorName
    java.util.List attributes -> attributes
    java.lang.Object getValue() -> getValue
    void setValue(java.lang.Object) -> setValue
    java.lang.String getDescriptorName() -> getDescriptorName
    void setOnElement(org.w3c.dom.Element) -> setOnElement
    void addAttribute(org.teleal.cling.support.model.DIDLObject$Property) -> addAttribute
    void removeAttribute(org.teleal.cling.support.model.DIDLObject$Property) -> removeAttribute
    void removeAttribute(java.lang.String) -> removeAttribute
    org.teleal.cling.support.model.DIDLObject$Property getAttribute(java.lang.String) -> getAttribute
    java.lang.String toString() -> toString
org.teleal.cling.support.model.DIDLObject$Property$DC -> org.teleal.cling.support.model.DIDLObject$Property$DC:
org.teleal.cling.support.model.DIDLObject$Property$DC$CONTRIBUTOR -> org.teleal.cling.support.model.DIDLObject$Property$DC$CONTRIBUTOR:
org.teleal.cling.support.model.DIDLObject$Property$DC$DATE -> org.teleal.cling.support.model.DIDLObject$Property$DC$DATE:
org.teleal.cling.support.model.DIDLObject$Property$DC$DESCRIPTION -> org.teleal.cling.support.model.DIDLObject$Property$DC$DESCRIPTION:
org.teleal.cling.support.model.DIDLObject$Property$DC$LANGUAGE -> org.teleal.cling.support.model.DIDLObject$Property$DC$LANGUAGE:
org.teleal.cling.support.model.DIDLObject$Property$DC$NAMESPACE -> org.teleal.cling.support.model.DIDLObject$Property$DC$NAMESPACE:
    java.lang.String URI -> URI
org.teleal.cling.support.model.DIDLObject$Property$DC$PUBLISHER -> org.teleal.cling.support.model.DIDLObject$Property$DC$PUBLISHER:
org.teleal.cling.support.model.DIDLObject$Property$DC$RELATION -> org.teleal.cling.support.model.DIDLObject$Property$DC$RELATION:
org.teleal.cling.support.model.DIDLObject$Property$DC$RIGHTS -> org.teleal.cling.support.model.DIDLObject$Property$DC$RIGHTS:
org.teleal.cling.support.model.DIDLObject$Property$DLNA -> org.teleal.cling.support.model.DIDLObject$Property$DLNA:
org.teleal.cling.support.model.DIDLObject$Property$DLNA$NAMESPACE -> org.teleal.cling.support.model.DIDLObject$Property$DLNA$NAMESPACE:
    java.lang.String URI -> URI
org.teleal.cling.support.model.DIDLObject$Property$DLNA$PROFILE_ID -> org.teleal.cling.support.model.DIDLObject$Property$DLNA$PROFILE_ID:
org.teleal.cling.support.model.DIDLObject$Property$NAMESPACE -> org.teleal.cling.support.model.DIDLObject$Property$NAMESPACE:
org.teleal.cling.support.model.DIDLObject$Property$PropertyPersonWithRole -> org.teleal.cling.support.model.DIDLObject$Property$PropertyPersonWithRole:
    void setOnElement(org.w3c.dom.Element) -> setOnElement
org.teleal.cling.support.model.DIDLObject$Property$UPNP -> org.teleal.cling.support.model.DIDLObject$Property$UPNP:
org.teleal.cling.support.model.DIDLObject$Property$UPNP$ACTOR -> org.teleal.cling.support.model.DIDLObject$Property$UPNP$ACTOR:
org.teleal.cling.support.model.DIDLObject$Property$UPNP$ALBUM -> org.teleal.cling.support.model.DIDLObject$Property$UPNP$ALBUM:
org.teleal.cling.support.model.DIDLObject$Property$UPNP$ALBUM_ART_URI -> org.teleal.cling.support.model.DIDLObject$Property$UPNP$ALBUM_ART_URI:
org.teleal.cling.support.model.DIDLObject$Property$UPNP$ARTIST -> org.teleal.cling.support.model.DIDLObject$Property$UPNP$ARTIST:
org.teleal.cling.support.model.DIDLObject$Property$UPNP$ARTIST_DISCO_URI -> org.teleal.cling.support.model.DIDLObject$Property$UPNP$ARTIST_DISCO_URI:
org.teleal.cling.support.model.DIDLObject$Property$UPNP$AUTHOR -> org.teleal.cling.support.model.DIDLObject$Property$UPNP$AUTHOR:
org.teleal.cling.support.model.DIDLObject$Property$UPNP$CHANNEL_NAME -> org.teleal.cling.support.model.DIDLObject$Property$UPNP$CHANNEL_NAME:
org.teleal.cling.support.model.DIDLObject$Property$UPNP$CHANNEL_NR -> org.teleal.cling.support.model.DIDLObject$Property$UPNP$CHANNEL_NR:
org.teleal.cling.support.model.DIDLObject$Property$UPNP$DIRECTOR -> org.teleal.cling.support.model.DIDLObject$Property$UPNP$DIRECTOR:
org.teleal.cling.support.model.DIDLObject$Property$UPNP$DVD_REGION_CODE -> org.teleal.cling.support.model.DIDLObject$Property$UPNP$DVD_REGION_CODE:
org.teleal.cling.support.model.DIDLObject$Property$UPNP$GENRE -> org.teleal.cling.support.model.DIDLObject$Property$UPNP$GENRE:
org.teleal.cling.support.model.DIDLObject$Property$UPNP$ICON -> org.teleal.cling.support.model.DIDLObject$Property$UPNP$ICON:
org.teleal.cling.support.model.DIDLObject$Property$UPNP$LONG_DESCRIPTION -> org.teleal.cling.support.model.DIDLObject$Property$UPNP$LONG_DESCRIPTION:
org.teleal.cling.support.model.DIDLObject$Property$UPNP$LYRICS_URI -> org.teleal.cling.support.model.DIDLObject$Property$UPNP$LYRICS_URI:
org.teleal.cling.support.model.DIDLObject$Property$UPNP$NAMESPACE -> org.teleal.cling.support.model.DIDLObject$Property$UPNP$NAMESPACE:
    java.lang.String URI -> URI
org.teleal.cling.support.model.DIDLObject$Property$UPNP$ORIGINAL_TRACK_NUMBER -> org.teleal.cling.support.model.DIDLObject$Property$UPNP$ORIGINAL_TRACK_NUMBER:
org.teleal.cling.support.model.DIDLObject$Property$UPNP$PLAYLIST -> org.teleal.cling.support.model.DIDLObject$Property$UPNP$PLAYLIST:
org.teleal.cling.support.model.DIDLObject$Property$UPNP$PRODUCER -> org.teleal.cling.support.model.DIDLObject$Property$UPNP$PRODUCER:
org.teleal.cling.support.model.DIDLObject$Property$UPNP$RADIO_BAND -> org.teleal.cling.support.model.DIDLObject$Property$UPNP$RADIO_BAND:
org.teleal.cling.support.model.DIDLObject$Property$UPNP$RADIO_CALL_SIGN -> org.teleal.cling.support.model.DIDLObject$Property$UPNP$RADIO_CALL_SIGN:
org.teleal.cling.support.model.DIDLObject$Property$UPNP$RADIO_STATION_ID -> org.teleal.cling.support.model.DIDLObject$Property$UPNP$RADIO_STATION_ID:
org.teleal.cling.support.model.DIDLObject$Property$UPNP$RATING -> org.teleal.cling.support.model.DIDLObject$Property$UPNP$RATING:
org.teleal.cling.support.model.DIDLObject$Property$UPNP$REGION -> org.teleal.cling.support.model.DIDLObject$Property$UPNP$REGION:
org.teleal.cling.support.model.DIDLObject$Property$UPNP$SCHEDULED_END_TIME -> org.teleal.cling.support.model.DIDLObject$Property$UPNP$SCHEDULED_END_TIME:
org.teleal.cling.support.model.DIDLObject$Property$UPNP$SCHEDULED_START_TIME -> org.teleal.cling.support.model.DIDLObject$Property$UPNP$SCHEDULED_START_TIME:
org.teleal.cling.support.model.DIDLObject$Property$UPNP$STORAGE_FREE -> org.teleal.cling.support.model.DIDLObject$Property$UPNP$STORAGE_FREE:
org.teleal.cling.support.model.DIDLObject$Property$UPNP$STORAGE_MAX_PARTITION -> org.teleal.cling.support.model.DIDLObject$Property$UPNP$STORAGE_MAX_PARTITION:
org.teleal.cling.support.model.DIDLObject$Property$UPNP$STORAGE_MEDIUM -> org.teleal.cling.support.model.DIDLObject$Property$UPNP$STORAGE_MEDIUM:
org.teleal.cling.support.model.DIDLObject$Property$UPNP$STORAGE_TOTAL -> org.teleal.cling.support.model.DIDLObject$Property$UPNP$STORAGE_TOTAL:
org.teleal.cling.support.model.DIDLObject$Property$UPNP$STORAGE_USED -> org.teleal.cling.support.model.DIDLObject$Property$UPNP$STORAGE_USED:
org.teleal.cling.support.model.DIDLObject$Property$UPNP$TOC -> org.teleal.cling.support.model.DIDLObject$Property$UPNP$TOC:
org.teleal.cling.support.model.DIDLObject$Property$UPNP$USER_ANNOTATION -> org.teleal.cling.support.model.DIDLObject$Property$UPNP$USER_ANNOTATION:
org.teleal.cling.support.model.DescMeta -> org.teleal.cling.support.model.DescMeta:
    java.lang.String id -> id
    java.lang.String type -> type
    java.net.URI nameSpace -> nameSpace
    java.lang.Object metadata -> metadata
    java.lang.String getId() -> getId
    void setId(java.lang.String) -> setId
    java.lang.String getType() -> getType
    void setType(java.lang.String) -> setType
    java.net.URI getNameSpace() -> getNameSpace
    void setNameSpace(java.net.URI) -> setNameSpace
    java.lang.Object getMetadata() -> getMetadata
    void setMetadata(java.lang.Object) -> setMetadata
    org.w3c.dom.Document createMetadataDocument() -> createMetadataDocument
org.teleal.cling.support.model.DeviceCapabilities -> org.teleal.cling.support.model.DeviceCapabilities:
    org.teleal.cling.support.model.StorageMedium[] playMedia -> playMedia
    org.teleal.cling.support.model.StorageMedium[] recMedia -> recMedia
    org.teleal.cling.support.model.RecordQualityMode[] recQualityModes -> recQualityModes
    org.teleal.cling.support.model.StorageMedium[] getPlayMedia() -> getPlayMedia
    org.teleal.cling.support.model.StorageMedium[] getRecMedia() -> getRecMedia
    org.teleal.cling.support.model.RecordQualityMode[] getRecQualityModes() -> getRecQualityModes
    java.lang.String getPlayMediaString() -> getPlayMediaString
    java.lang.String getRecMediaString() -> getRecMediaString
    java.lang.String getRecQualityModesString() -> getRecQualityModesString
org.teleal.cling.support.model.MediaInfo -> org.teleal.cling.support.model.MediaInfo:
    java.lang.String currentURI -> currentURI
    java.lang.String currentURIMetaData -> currentURIMetaData
    java.lang.String nextURI -> nextURI
    java.lang.String nextURIMetaData -> nextURIMetaData
    org.teleal.cling.model.types.UnsignedIntegerFourBytes numberOfTracks -> numberOfTracks
    java.lang.String mediaDuration -> mediaDuration
    org.teleal.cling.support.model.StorageMedium playMedium -> playMedium
    org.teleal.cling.support.model.StorageMedium recordMedium -> recordMedium
    org.teleal.cling.support.model.RecordMediumWriteStatus writeStatus -> writeStatus
    java.lang.String getCurrentURI() -> getCurrentURI
    java.lang.String getCurrentURIMetaData() -> getCurrentURIMetaData
    java.lang.String getNextURI() -> getNextURI
    java.lang.String getNextURIMetaData() -> getNextURIMetaData
    org.teleal.cling.model.types.UnsignedIntegerFourBytes getNumberOfTracks() -> getNumberOfTracks
    java.lang.String getMediaDuration() -> getMediaDuration
    org.teleal.cling.support.model.StorageMedium getPlayMedium() -> getPlayMedium
    org.teleal.cling.support.model.StorageMedium getRecordMedium() -> getRecordMedium
    org.teleal.cling.support.model.RecordMediumWriteStatus getWriteStatus() -> getWriteStatus
org.teleal.cling.support.model.Person -> org.teleal.cling.support.model.Person:
    java.lang.String name -> name
    java.lang.String getName() -> getName
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
org.teleal.cling.support.model.PersonWithRole -> org.teleal.cling.support.model.PersonWithRole:
    java.lang.String role -> role
    java.lang.String getRole() -> getRole
    void setOnElement(org.w3c.dom.Element) -> setOnElement
org.teleal.cling.support.model.PlayMode -> org.teleal.cling.support.model.PlayMode:
    org.teleal.cling.support.model.PlayMode NORMAL -> NORMAL
    org.teleal.cling.support.model.PlayMode SHUFFLE -> SHUFFLE
    org.teleal.cling.support.model.PlayMode REPEAT_ONE -> REPEAT_ONE
    org.teleal.cling.support.model.PlayMode REPEAT_ALL -> REPEAT_ALL
    org.teleal.cling.support.model.PlayMode RANDOM -> RANDOM
    org.teleal.cling.support.model.PlayMode DIRECT_1 -> DIRECT_1
    org.teleal.cling.support.model.PlayMode INTRO -> INTRO
    org.teleal.cling.support.model.PlayMode[] $VALUES -> $VALUES
    org.teleal.cling.support.model.PlayMode[] values() -> values
    org.teleal.cling.support.model.PlayMode valueOf(java.lang.String) -> valueOf
org.teleal.cling.support.model.PortMapping -> org.teleal.cling.support.model.PortMapping:
    boolean enabled -> enabled
    org.teleal.cling.model.types.UnsignedIntegerFourBytes leaseDurationSeconds -> leaseDurationSeconds
    java.lang.String remoteHost -> remoteHost
    org.teleal.cling.model.types.UnsignedIntegerTwoBytes externalPort -> externalPort
    org.teleal.cling.model.types.UnsignedIntegerTwoBytes internalPort -> internalPort
    java.lang.String internalClient -> internalClient
    org.teleal.cling.support.model.PortMapping$Protocol protocol -> protocol
    java.lang.String description -> description
    boolean isEnabled() -> isEnabled
    void setEnabled(boolean) -> setEnabled
    org.teleal.cling.model.types.UnsignedIntegerFourBytes getLeaseDurationSeconds() -> getLeaseDurationSeconds
    void setLeaseDurationSeconds(org.teleal.cling.model.types.UnsignedIntegerFourBytes) -> setLeaseDurationSeconds
    boolean hasRemoteHost() -> hasRemoteHost
    java.lang.String getRemoteHost() -> getRemoteHost
    void setRemoteHost(java.lang.String) -> setRemoteHost
    org.teleal.cling.model.types.UnsignedIntegerTwoBytes getExternalPort() -> getExternalPort
    void setExternalPort(org.teleal.cling.model.types.UnsignedIntegerTwoBytes) -> setExternalPort
    org.teleal.cling.model.types.UnsignedIntegerTwoBytes getInternalPort() -> getInternalPort
    void setInternalPort(org.teleal.cling.model.types.UnsignedIntegerTwoBytes) -> setInternalPort
    java.lang.String getInternalClient() -> getInternalClient
    void setInternalClient(java.lang.String) -> setInternalClient
    org.teleal.cling.support.model.PortMapping$Protocol getProtocol() -> getProtocol
    void setProtocol(org.teleal.cling.support.model.PortMapping$Protocol) -> setProtocol
    boolean hasDescription() -> hasDescription
    java.lang.String getDescription() -> getDescription
    void setDescription(java.lang.String) -> setDescription
    java.lang.String toString() -> toString
org.teleal.cling.support.model.PortMapping$Protocol -> org.teleal.cling.support.model.PortMapping$Protocol:
    org.teleal.cling.support.model.PortMapping$Protocol UDP -> UDP
    org.teleal.cling.support.model.PortMapping$Protocol TCP -> TCP
    org.teleal.cling.support.model.PortMapping$Protocol[] $VALUES -> $VALUES
    org.teleal.cling.support.model.PortMapping$Protocol[] values() -> values
    org.teleal.cling.support.model.PortMapping$Protocol valueOf(java.lang.String) -> valueOf
org.teleal.cling.support.model.PositionInfo -> org.teleal.cling.support.model.PositionInfo:
    org.teleal.cling.model.types.UnsignedIntegerFourBytes track -> track
    java.lang.String trackDuration -> trackDuration
    java.lang.String trackMetaData -> trackMetaData
    java.lang.String trackURI -> trackURI
    java.lang.String relTime -> relTime
    java.lang.String absTime -> absTime
    int relCount -> relCount
    int absCount -> absCount
    org.teleal.cling.model.types.UnsignedIntegerFourBytes getTrack() -> getTrack
    java.lang.String getTrackDuration() -> getTrackDuration
    java.lang.String getTrackMetaData() -> getTrackMetaData
    java.lang.String getTrackURI() -> getTrackURI
    java.lang.String getRelTime() -> getRelTime
    java.lang.String getAbsTime() -> getAbsTime
    int getRelCount() -> getRelCount
    int getAbsCount() -> getAbsCount
    long getTrackDurationSeconds() -> getTrackDurationSeconds
    long getTrackElapsedSeconds() -> getTrackElapsedSeconds
    long getTrackRemainingSeconds() -> getTrackRemainingSeconds
    int getElapsedPercent() -> getElapsedPercent
    java.lang.String toString() -> toString
org.teleal.cling.support.model.PresetName -> org.teleal.cling.support.model.PresetName:
    org.teleal.cling.support.model.PresetName FactoryDefault -> FactoryDefault
    org.teleal.cling.support.model.PresetName[] $VALUES -> $VALUES
    org.teleal.cling.support.model.PresetName[] values() -> values
    org.teleal.cling.support.model.PresetName valueOf(java.lang.String) -> valueOf
org.teleal.cling.support.model.Protocol -> org.teleal.cling.support.model.Protocol:
    org.teleal.cling.support.model.Protocol ALL -> ALL
    org.teleal.cling.support.model.Protocol HTTP_GET -> HTTP_GET
    org.teleal.cling.support.model.Protocol RTSP_RTP_UDP -> RTSP_RTP_UDP
    org.teleal.cling.support.model.Protocol INTERNAL -> INTERNAL
    org.teleal.cling.support.model.Protocol IEC61883 -> IEC61883
    java.lang.String protocolString -> protocolString
    org.teleal.cling.support.model.Protocol[] $VALUES -> $VALUES
    org.teleal.cling.support.model.Protocol[] values() -> values
    org.teleal.cling.support.model.Protocol valueOf(java.lang.String) -> valueOf
    java.lang.String toString() -> toString
    org.teleal.cling.support.model.Protocol valueOrNullOf(java.lang.String) -> valueOrNullOf
org.teleal.cling.support.model.ProtocolInfo -> org.teleal.cling.support.model.ProtocolInfo:
    java.lang.String WILDCARD -> WILDCARD
    java.lang.String TRAILING_ZEROS -> TRAILING_ZEROS
    org.teleal.cling.support.model.Protocol protocol -> protocol
    java.lang.String network -> network
    java.lang.String contentFormat -> contentFormat
    java.lang.String additionalInfo -> additionalInfo
    org.teleal.cling.support.model.Protocol getProtocol() -> getProtocol
    java.lang.String getNetwork() -> getNetwork
    java.lang.String getContentFormat() -> getContentFormat
    org.teleal.common.util.MimeType getContentFormatMimeType() -> getContentFormatMimeType
    java.lang.String getAdditionalInfo() -> getAdditionalInfo
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
org.teleal.cling.support.model.ProtocolInfo$DLNAFlags -> org.teleal.cling.support.model.ProtocolInfo$DLNAFlags:
    int SENDER_PACED -> SENDER_PACED
    int TIME_BASED_SEEK -> TIME_BASED_SEEK
    int BYTE_BASED_SEEK -> BYTE_BASED_SEEK
    int FLAG_PLAY_CONTAINER -> FLAG_PLAY_CONTAINER
    int S0_INCREASE -> S0_INCREASE
    int SN_INCREASE -> SN_INCREASE
    int RTSP_PAUSE -> RTSP_PAUSE
    int STREAMING_TRANSFER_MODE -> STREAMING_TRANSFER_MODE
    int INTERACTIVE_TRANSFERT_MODE -> INTERACTIVE_TRANSFERT_MODE
    int BACKGROUND_TRANSFERT_MODE -> BACKGROUND_TRANSFERT_MODE
    int CONNECTION_STALL -> CONNECTION_STALL
    int DLNA_V15 -> DLNA_V15
org.teleal.cling.support.model.ProtocolInfos -> org.teleal.cling.support.model.ProtocolInfos:
    java.lang.String toString() -> toString
org.teleal.cling.support.model.RecordMediumWriteStatus -> org.teleal.cling.support.model.RecordMediumWriteStatus:
    org.teleal.cling.support.model.RecordMediumWriteStatus WRITABLE -> WRITABLE
    org.teleal.cling.support.model.RecordMediumWriteStatus PROTECTED -> PROTECTED
    org.teleal.cling.support.model.RecordMediumWriteStatus NOT_WRITABLE -> NOT_WRITABLE
    org.teleal.cling.support.model.RecordMediumWriteStatus UNKNOWN -> UNKNOWN
    org.teleal.cling.support.model.RecordMediumWriteStatus NOT_IMPLEMENTED -> NOT_IMPLEMENTED
    org.teleal.cling.support.model.RecordMediumWriteStatus[] $VALUES -> $VALUES
    org.teleal.cling.support.model.RecordMediumWriteStatus[] values() -> values
    org.teleal.cling.support.model.RecordMediumWriteStatus valueOf(java.lang.String) -> valueOf
    org.teleal.cling.support.model.RecordMediumWriteStatus valueOrUnknownOf(java.lang.String) -> valueOrUnknownOf
org.teleal.cling.support.model.RecordQualityMode -> org.teleal.cling.support.model.RecordQualityMode:
    org.teleal.cling.support.model.RecordQualityMode EP -> EP
    org.teleal.cling.support.model.RecordQualityMode LP -> LP
    org.teleal.cling.support.model.RecordQualityMode SP -> SP
    org.teleal.cling.support.model.RecordQualityMode BASIC -> BASIC
    org.teleal.cling.support.model.RecordQualityMode MEDIUM -> MEDIUM
    org.teleal.cling.support.model.RecordQualityMode HIGH -> HIGH
    org.teleal.cling.support.model.RecordQualityMode NOT_IMPLEMENTED -> NOT_IMPLEMENTED
    java.lang.String protocolString -> protocolString
    org.teleal.cling.support.model.RecordQualityMode[] $VALUES -> $VALUES
    org.teleal.cling.support.model.RecordQualityMode[] values() -> values
    org.teleal.cling.support.model.RecordQualityMode valueOf(java.lang.String) -> valueOf
    java.lang.String toString() -> toString
    org.teleal.cling.support.model.RecordQualityMode valueOrExceptionOf(java.lang.String) -> valueOrExceptionOf
    org.teleal.cling.support.model.RecordQualityMode[] valueOfCommaSeparatedList(java.lang.String) -> valueOfCommaSeparatedList
org.teleal.cling.support.model.Res -> org.teleal.cling.support.model.Res:
    java.net.URI importUri -> importUri
    org.teleal.cling.support.model.ProtocolInfo protocolInfo -> protocolInfo
    java.lang.Long size -> size
    java.lang.String duration -> duration
    java.lang.Long bitrate -> bitrate
    java.lang.Long sampleFrequency -> sampleFrequency
    java.lang.Long bitsPerSample -> bitsPerSample
    java.lang.Long nrAudioChannels -> nrAudioChannels
    java.lang.Long colorDepth -> colorDepth
    java.lang.String protection -> protection
    java.lang.String resolution -> resolution
    java.lang.String value -> value
    java.net.URI getImportUri() -> getImportUri
    void setImportUri(java.net.URI) -> setImportUri
    org.teleal.cling.support.model.ProtocolInfo getProtocolInfo() -> getProtocolInfo
    void setProtocolInfo(org.teleal.cling.support.model.ProtocolInfo) -> setProtocolInfo
    java.lang.Long getSize() -> getSize
    void setSize(java.lang.Long) -> setSize
    java.lang.String getDuration() -> getDuration
    void setDuration(java.lang.String) -> setDuration
    java.lang.Long getBitrate() -> getBitrate
    void setBitrate(java.lang.Long) -> setBitrate
    java.lang.Long getSampleFrequency() -> getSampleFrequency
    void setSampleFrequency(java.lang.Long) -> setSampleFrequency
    java.lang.Long getBitsPerSample() -> getBitsPerSample
    void setBitsPerSample(java.lang.Long) -> setBitsPerSample
    java.lang.Long getNrAudioChannels() -> getNrAudioChannels
    void setNrAudioChannels(java.lang.Long) -> setNrAudioChannels
    java.lang.Long getColorDepth() -> getColorDepth
    void setColorDepth(java.lang.Long) -> setColorDepth
    java.lang.String getProtection() -> getProtection
    void setProtection(java.lang.String) -> setProtection
    java.lang.String getResolution() -> getResolution
    void setResolution(java.lang.String) -> setResolution
    void setResolution(int,int) -> setResolution
    int getResolutionX() -> getResolutionX
    int getResolutionY() -> getResolutionY
    java.lang.String getValue() -> getValue
    void setValue(java.lang.String) -> setValue
org.teleal.cling.support.model.SeekMode -> org.teleal.cling.support.model.SeekMode:
    org.teleal.cling.support.model.SeekMode TRACK_NR -> TRACK_NR
    org.teleal.cling.support.model.SeekMode ABS_TIME -> ABS_TIME
    org.teleal.cling.support.model.SeekMode REL_TIME -> REL_TIME
    org.teleal.cling.support.model.SeekMode ABS_COUNT -> ABS_COUNT
    org.teleal.cling.support.model.SeekMode REL_COUNT -> REL_COUNT
    org.teleal.cling.support.model.SeekMode CHANNEL_FREQ -> CHANNEL_FREQ
    org.teleal.cling.support.model.SeekMode TAPE_INDEX -> TAPE_INDEX
    org.teleal.cling.support.model.SeekMode FRAME -> FRAME
    java.lang.String protocolString -> protocolString
    org.teleal.cling.support.model.SeekMode[] $VALUES -> $VALUES
    org.teleal.cling.support.model.SeekMode[] values() -> values
    org.teleal.cling.support.model.SeekMode valueOf(java.lang.String) -> valueOf
    java.lang.String toString() -> toString
    org.teleal.cling.support.model.SeekMode valueOrExceptionOf(java.lang.String) -> valueOrExceptionOf
org.teleal.cling.support.model.SortCriterion -> org.teleal.cling.support.model.SortCriterion:
    boolean ascending -> ascending
    java.lang.String propertyName -> propertyName
    boolean isAscending() -> isAscending
    java.lang.String getPropertyName() -> getPropertyName
    org.teleal.cling.support.model.SortCriterion[] valueOf(java.lang.String) -> valueOf
    java.lang.String toString(org.teleal.cling.support.model.SortCriterion[]) -> toString
    java.lang.String toString() -> toString
org.teleal.cling.support.model.StorageMedium -> org.teleal.cling.support.model.StorageMedium:
    org.teleal.cling.support.model.StorageMedium UNKNOWN -> UNKNOWN
    org.teleal.cling.support.model.StorageMedium DV -> DV
    org.teleal.cling.support.model.StorageMedium MINI_DV -> MINI_DV
    org.teleal.cling.support.model.StorageMedium VHS -> VHS
    org.teleal.cling.support.model.StorageMedium W_VHS -> W_VHS
    org.teleal.cling.support.model.StorageMedium S_VHS -> S_VHS
    org.teleal.cling.support.model.StorageMedium D_VHS -> D_VHS
    org.teleal.cling.support.model.StorageMedium VHSC -> VHSC
    org.teleal.cling.support.model.StorageMedium VIDEO8 -> VIDEO8
    org.teleal.cling.support.model.StorageMedium HI8 -> HI8
    org.teleal.cling.support.model.StorageMedium CD_ROM -> CD_ROM
    org.teleal.cling.support.model.StorageMedium CD_DA -> CD_DA
    org.teleal.cling.support.model.StorageMedium CD_R -> CD_R
    org.teleal.cling.support.model.StorageMedium CD_RW -> CD_RW
    org.teleal.cling.support.model.StorageMedium VIDEO_CD -> VIDEO_CD
    org.teleal.cling.support.model.StorageMedium SACD -> SACD
    org.teleal.cling.support.model.StorageMedium MD_AUDIO -> MD_AUDIO
    org.teleal.cling.support.model.StorageMedium MD_PICTURE -> MD_PICTURE
    org.teleal.cling.support.model.StorageMedium DVD_ROM -> DVD_ROM
    org.teleal.cling.support.model.StorageMedium DVD_VIDEO -> DVD_VIDEO
    org.teleal.cling.support.model.StorageMedium DVD_R -> DVD_R
    org.teleal.cling.support.model.StorageMedium DVD_PLUS_RW -> DVD_PLUS_RW
    org.teleal.cling.support.model.StorageMedium DVD_MINUS_RW -> DVD_MINUS_RW
    org.teleal.cling.support.model.StorageMedium DVD_RAM -> DVD_RAM
    org.teleal.cling.support.model.StorageMedium DVD_AUDIO -> DVD_AUDIO
    org.teleal.cling.support.model.StorageMedium DAT -> DAT
    org.teleal.cling.support.model.StorageMedium LD -> LD
    org.teleal.cling.support.model.StorageMedium HDD -> HDD
    org.teleal.cling.support.model.StorageMedium MICRO_MV -> MICRO_MV
    org.teleal.cling.support.model.StorageMedium NETWORK -> NETWORK
    org.teleal.cling.support.model.StorageMedium NONE -> NONE
    org.teleal.cling.support.model.StorageMedium NOT_IMPLEMENTED -> NOT_IMPLEMENTED
    org.teleal.cling.support.model.StorageMedium VENDOR_SPECIFIC -> VENDOR_SPECIFIC
    java.util.Map byProtocolString -> byProtocolString
    java.lang.String protocolString -> protocolString
    org.teleal.cling.support.model.StorageMedium[] $VALUES -> $VALUES
    org.teleal.cling.support.model.StorageMedium[] values() -> values
    org.teleal.cling.support.model.StorageMedium valueOf(java.lang.String) -> valueOf
    java.lang.String toString() -> toString
    org.teleal.cling.support.model.StorageMedium valueOrExceptionOf(java.lang.String) -> valueOrExceptionOf
    org.teleal.cling.support.model.StorageMedium valueOrVendorSpecificOf(java.lang.String) -> valueOrVendorSpecificOf
    org.teleal.cling.support.model.StorageMedium[] valueOfCommaSeparatedList(java.lang.String) -> valueOfCommaSeparatedList
    java.lang.String access$000(org.teleal.cling.support.model.StorageMedium) -> access$000
org.teleal.cling.support.model.StorageMedium$1 -> org.teleal.cling.support.model.StorageMedium$1:
org.teleal.cling.support.model.TransportAction -> org.teleal.cling.support.model.TransportAction:
    org.teleal.cling.support.model.TransportAction Play -> Play
    org.teleal.cling.support.model.TransportAction Stop -> Stop
    org.teleal.cling.support.model.TransportAction Pause -> Pause
    org.teleal.cling.support.model.TransportAction Seek -> Seek
    org.teleal.cling.support.model.TransportAction Next -> Next
    org.teleal.cling.support.model.TransportAction Previous -> Previous
    org.teleal.cling.support.model.TransportAction Record -> Record
    org.teleal.cling.support.model.TransportAction[] $VALUES -> $VALUES
    org.teleal.cling.support.model.TransportAction[] values() -> values
    org.teleal.cling.support.model.TransportAction valueOf(java.lang.String) -> valueOf
    org.teleal.cling.support.model.TransportAction[] valueOfCommaSeparatedList(java.lang.String) -> valueOfCommaSeparatedList
org.teleal.cling.support.model.TransportInfo -> org.teleal.cling.support.model.TransportInfo:
    org.teleal.cling.support.model.TransportState currentTransportState -> currentTransportState
    org.teleal.cling.support.model.TransportStatus currentTransportStatus -> currentTransportStatus
    java.lang.String currentSpeed -> currentSpeed
    org.teleal.cling.support.model.TransportState getCurrentTransportState() -> getCurrentTransportState
    org.teleal.cling.support.model.TransportStatus getCurrentTransportStatus() -> getCurrentTransportStatus
    java.lang.String getCurrentSpeed() -> getCurrentSpeed
org.teleal.cling.support.model.TransportSettings -> org.teleal.cling.support.model.TransportSettings:
    org.teleal.cling.support.model.PlayMode playMode -> playMode
    org.teleal.cling.support.model.RecordQualityMode recQualityMode -> recQualityMode
    org.teleal.cling.support.model.PlayMode getPlayMode() -> getPlayMode
    org.teleal.cling.support.model.RecordQualityMode getRecQualityMode() -> getRecQualityMode
org.teleal.cling.support.model.TransportState -> org.teleal.cling.support.model.TransportState:
    org.teleal.cling.support.model.TransportState STOPPED -> STOPPED
    org.teleal.cling.support.model.TransportState PLAYING -> PLAYING
    org.teleal.cling.support.model.TransportState TRANSITIONING -> TRANSITIONING
    org.teleal.cling.support.model.TransportState PAUSED_PLAYBACK -> PAUSED_PLAYBACK
    org.teleal.cling.support.model.TransportState PAUSED_RECORDING -> PAUSED_RECORDING
    org.teleal.cling.support.model.TransportState RECORDING -> RECORDING
    org.teleal.cling.support.model.TransportState NO_MEDIA_PRESENT -> NO_MEDIA_PRESENT
    org.teleal.cling.support.model.TransportState CUSTOM -> CUSTOM
    java.lang.String value -> value
    org.teleal.cling.support.model.TransportState[] $VALUES -> $VALUES
    org.teleal.cling.support.model.TransportState[] values() -> values
    org.teleal.cling.support.model.TransportState valueOf(java.lang.String) -> valueOf
    java.lang.String getValue() -> getValue
    org.teleal.cling.support.model.TransportState setValue(java.lang.String) -> setValue
    org.teleal.cling.support.model.TransportState valueOrCustomOf(java.lang.String) -> valueOrCustomOf
org.teleal.cling.support.model.TransportStatus -> org.teleal.cling.support.model.TransportStatus:
    org.teleal.cling.support.model.TransportStatus OK -> OK
    org.teleal.cling.support.model.TransportStatus ERROR_OCCURED -> ERROR_OCCURED
    org.teleal.cling.support.model.TransportStatus CUSTOM -> CUSTOM
    java.lang.String value -> value
    org.teleal.cling.support.model.TransportStatus[] $VALUES -> $VALUES
    org.teleal.cling.support.model.TransportStatus[] values() -> values
    org.teleal.cling.support.model.TransportStatus valueOf(java.lang.String) -> valueOf
    java.lang.String getValue() -> getValue
    org.teleal.cling.support.model.TransportStatus setValue(java.lang.String) -> setValue
    org.teleal.cling.support.model.TransportStatus valueOrCustomOf(java.lang.String) -> valueOrCustomOf
org.teleal.cling.support.model.VolumeDBRange -> org.teleal.cling.support.model.VolumeDBRange:
    java.lang.Integer minValue -> minValue
    java.lang.Integer maxValue -> maxValue
    java.lang.Integer getMinValue() -> getMinValue
    java.lang.Integer getMaxValue() -> getMaxValue
org.teleal.cling.support.model.WriteStatus -> org.teleal.cling.support.model.WriteStatus:
    org.teleal.cling.support.model.WriteStatus WRITABLE -> WRITABLE
    org.teleal.cling.support.model.WriteStatus NOT_WRITABLE -> NOT_WRITABLE
    org.teleal.cling.support.model.WriteStatus UNKNOWN -> UNKNOWN
    org.teleal.cling.support.model.WriteStatus MIXED -> MIXED
    org.teleal.cling.support.model.WriteStatus[] $VALUES -> $VALUES
    org.teleal.cling.support.model.WriteStatus[] values() -> values
    org.teleal.cling.support.model.WriteStatus valueOf(java.lang.String) -> valueOf
org.teleal.cling.support.model.container.Album -> org.teleal.cling.support.model.container.Album:
    org.teleal.cling.support.model.DIDLObject$Class CLASS -> CLASS
    java.lang.String getDescription() -> getDescription
    org.teleal.cling.support.model.container.Album setDescription(java.lang.String) -> setDescription
    java.lang.String getLongDescription() -> getLongDescription
    org.teleal.cling.support.model.container.Album setLongDescription(java.lang.String) -> setLongDescription
    org.teleal.cling.support.model.StorageMedium getStorageMedium() -> getStorageMedium
    org.teleal.cling.support.model.container.Album setStorageMedium(org.teleal.cling.support.model.StorageMedium) -> setStorageMedium
    java.lang.String getDate() -> getDate
    org.teleal.cling.support.model.container.Album setDate(java.lang.String) -> setDate
    java.net.URI getFirstRelation() -> getFirstRelation
    java.net.URI[] getRelations() -> getRelations
    org.teleal.cling.support.model.container.Album setRelations(java.net.URI[]) -> setRelations
    java.lang.String getFirstRights() -> getFirstRights
    java.lang.String[] getRights() -> getRights
    org.teleal.cling.support.model.container.Album setRights(java.lang.String[]) -> setRights
    org.teleal.cling.support.model.Person getFirstContributor() -> getFirstContributor
    org.teleal.cling.support.model.Person[] getContributors() -> getContributors
    org.teleal.cling.support.model.container.Album setContributors(org.teleal.cling.support.model.Person[]) -> setContributors
    org.teleal.cling.support.model.Person getFirstPublisher() -> getFirstPublisher
    org.teleal.cling.support.model.Person[] getPublishers() -> getPublishers
    org.teleal.cling.support.model.container.Album setPublishers(org.teleal.cling.support.model.Person[]) -> setPublishers
org.teleal.cling.support.model.container.Container -> org.teleal.cling.support.model.container.Container:
    java.lang.Integer childCount -> childCount
    boolean searchable -> searchable
    java.util.List createClasses -> createClasses
    java.util.List searchClasses -> searchClasses
    java.util.List containers -> containers
    java.util.List items -> items
    java.lang.Integer getChildCount() -> getChildCount
    void setChildCount(java.lang.Integer) -> setChildCount
    boolean isSearchable() -> isSearchable
    void setSearchable(boolean) -> setSearchable
    java.util.List getCreateClasses() -> getCreateClasses
    void setCreateClasses(java.util.List) -> setCreateClasses
    java.util.List getSearchClasses() -> getSearchClasses
    void setSearchClasses(java.util.List) -> setSearchClasses
    org.teleal.cling.support.model.container.Container getFirstContainer() -> getFirstContainer
    org.teleal.cling.support.model.container.Container addContainer(org.teleal.cling.support.model.container.Container) -> addContainer
    java.util.List getContainers() -> getContainers
    void setContainers(java.util.List) -> setContainers
    java.util.List getItems() -> getItems
    void setItems(java.util.List) -> setItems
    org.teleal.cling.support.model.container.Container addItem(org.teleal.cling.support.model.item.Item) -> addItem
org.teleal.cling.support.model.container.GenreContainer -> org.teleal.cling.support.model.container.GenreContainer:
    org.teleal.cling.support.model.DIDLObject$Class CLASS -> CLASS
org.teleal.cling.support.model.container.MovieGenre -> org.teleal.cling.support.model.container.MovieGenre:
    org.teleal.cling.support.model.DIDLObject$Class CLASS -> CLASS
org.teleal.cling.support.model.container.MusicAlbum -> org.teleal.cling.support.model.container.MusicAlbum:
    org.teleal.cling.support.model.DIDLObject$Class CLASS -> CLASS
    org.teleal.cling.support.model.PersonWithRole getFirstArtist() -> getFirstArtist
    org.teleal.cling.support.model.PersonWithRole[] getArtists() -> getArtists
    org.teleal.cling.support.model.container.MusicAlbum setArtists(org.teleal.cling.support.model.PersonWithRole[]) -> setArtists
    java.lang.String getFirstGenre() -> getFirstGenre
    java.lang.String[] getGenres() -> getGenres
    org.teleal.cling.support.model.container.MusicAlbum setGenres(java.lang.String[]) -> setGenres
    org.teleal.cling.support.model.Person getFirstProducer() -> getFirstProducer
    org.teleal.cling.support.model.Person[] getProducers() -> getProducers
    org.teleal.cling.support.model.container.MusicAlbum setProducers(org.teleal.cling.support.model.Person[]) -> setProducers
    java.net.URI getFirstAlbumArtURI() -> getFirstAlbumArtURI
    java.net.URI[] getAlbumArtURIs() -> getAlbumArtURIs
    org.teleal.cling.support.model.container.MusicAlbum setAlbumArtURIs(java.net.URI[]) -> setAlbumArtURIs
    java.lang.String getToc() -> getToc
    org.teleal.cling.support.model.container.MusicAlbum setToc(java.lang.String) -> setToc
    org.teleal.cling.support.model.item.MusicTrack[] getMusicTracks() -> getMusicTracks
    void addMusicTracks(java.util.List) -> addMusicTracks
    void addMusicTracks(org.teleal.cling.support.model.item.MusicTrack[]) -> addMusicTracks
org.teleal.cling.support.model.container.MusicArtist -> org.teleal.cling.support.model.container.MusicArtist:
    org.teleal.cling.support.model.DIDLObject$Class CLASS -> CLASS
    java.lang.String getFirstGenre() -> getFirstGenre
    java.lang.String[] getGenres() -> getGenres
    org.teleal.cling.support.model.container.MusicArtist setGenres(java.lang.String[]) -> setGenres
    java.net.URI getArtistDiscographyURI() -> getArtistDiscographyURI
    org.teleal.cling.support.model.container.MusicArtist setArtistDiscographyURI(java.net.URI) -> setArtistDiscographyURI
org.teleal.cling.support.model.container.MusicGenre -> org.teleal.cling.support.model.container.MusicGenre:
    org.teleal.cling.support.model.DIDLObject$Class CLASS -> CLASS
org.teleal.cling.support.model.container.PersonContainer -> org.teleal.cling.support.model.container.PersonContainer:
    org.teleal.cling.support.model.DIDLObject$Class CLASS -> CLASS
    java.lang.String getLanguage() -> getLanguage
    org.teleal.cling.support.model.container.PersonContainer setLanguage(java.lang.String) -> setLanguage
org.teleal.cling.support.model.container.PhotoAlbum -> org.teleal.cling.support.model.container.PhotoAlbum:
    org.teleal.cling.support.model.DIDLObject$Class CLASS -> CLASS
    org.teleal.cling.support.model.item.Photo[] getPhotos() -> getPhotos
    void addPhotos(java.util.List) -> addPhotos
    void addPhotos(org.teleal.cling.support.model.item.Photo[]) -> addPhotos
org.teleal.cling.support.model.container.PlaylistContainer -> org.teleal.cling.support.model.container.PlaylistContainer:
    org.teleal.cling.support.model.DIDLObject$Class CLASS -> CLASS
    org.teleal.cling.support.model.PersonWithRole getFirstArtist() -> getFirstArtist
    org.teleal.cling.support.model.PersonWithRole[] getArtists() -> getArtists
    org.teleal.cling.support.model.container.PlaylistContainer setArtists(org.teleal.cling.support.model.PersonWithRole[]) -> setArtists
    java.lang.String getFirstGenre() -> getFirstGenre
    java.lang.String[] getGenres() -> getGenres
    org.teleal.cling.support.model.container.PlaylistContainer setGenres(java.lang.String[]) -> setGenres
    java.lang.String getDescription() -> getDescription
    org.teleal.cling.support.model.container.PlaylistContainer setDescription(java.lang.String) -> setDescription
    java.lang.String getLongDescription() -> getLongDescription
    org.teleal.cling.support.model.container.PlaylistContainer setLongDescription(java.lang.String) -> setLongDescription
    org.teleal.cling.support.model.Person getFirstProducer() -> getFirstProducer
    org.teleal.cling.support.model.Person[] getProducers() -> getProducers
    org.teleal.cling.support.model.container.PlaylistContainer setProducers(org.teleal.cling.support.model.Person[]) -> setProducers
    org.teleal.cling.support.model.StorageMedium getStorageMedium() -> getStorageMedium
    org.teleal.cling.support.model.container.PlaylistContainer setStorageMedium(org.teleal.cling.support.model.StorageMedium) -> setStorageMedium
    java.lang.String getDate() -> getDate
    org.teleal.cling.support.model.container.PlaylistContainer setDate(java.lang.String) -> setDate
    java.lang.String getFirstRights() -> getFirstRights
    java.lang.String[] getRights() -> getRights
    org.teleal.cling.support.model.container.PlaylistContainer setRights(java.lang.String[]) -> setRights
    org.teleal.cling.support.model.Person getFirstContributor() -> getFirstContributor
    org.teleal.cling.support.model.Person[] getContributors() -> getContributors
    org.teleal.cling.support.model.container.PlaylistContainer setContributors(org.teleal.cling.support.model.Person[]) -> setContributors
    java.lang.String getLanguage() -> getLanguage
    org.teleal.cling.support.model.container.PlaylistContainer setLanguage(java.lang.String) -> setLanguage
org.teleal.cling.support.model.container.StorageFolder -> org.teleal.cling.support.model.container.StorageFolder:
    org.teleal.cling.support.model.DIDLObject$Class CLASS -> CLASS
    java.lang.Long getStorageUsed() -> getStorageUsed
    org.teleal.cling.support.model.container.StorageFolder setStorageUsed(java.lang.Long) -> setStorageUsed
org.teleal.cling.support.model.container.StorageSystem -> org.teleal.cling.support.model.container.StorageSystem:
    org.teleal.cling.support.model.DIDLObject$Class CLASS -> CLASS
    java.lang.Long getStorageTotal() -> getStorageTotal
    org.teleal.cling.support.model.container.StorageSystem setStorageTotal(java.lang.Long) -> setStorageTotal
    java.lang.Long getStorageUsed() -> getStorageUsed
    org.teleal.cling.support.model.container.StorageSystem setStorageUsed(java.lang.Long) -> setStorageUsed
    java.lang.Long getStorageFree() -> getStorageFree
    org.teleal.cling.support.model.container.StorageSystem setStorageFree(java.lang.Long) -> setStorageFree
    java.lang.Long getStorageMaxPartition() -> getStorageMaxPartition
    org.teleal.cling.support.model.container.StorageSystem setStorageMaxPartition(java.lang.Long) -> setStorageMaxPartition
    org.teleal.cling.support.model.StorageMedium getStorageMedium() -> getStorageMedium
    org.teleal.cling.support.model.container.StorageSystem setStorageMedium(org.teleal.cling.support.model.StorageMedium) -> setStorageMedium
org.teleal.cling.support.model.container.StorageVolume -> org.teleal.cling.support.model.container.StorageVolume:
    org.teleal.cling.support.model.DIDLObject$Class CLASS -> CLASS
    java.lang.Long getStorageTotal() -> getStorageTotal
    org.teleal.cling.support.model.container.StorageVolume setStorageTotal(java.lang.Long) -> setStorageTotal
    java.lang.Long getStorageUsed() -> getStorageUsed
    org.teleal.cling.support.model.container.StorageVolume setStorageUsed(java.lang.Long) -> setStorageUsed
    java.lang.Long getStorageFree() -> getStorageFree
    org.teleal.cling.support.model.container.StorageVolume setStorageFree(java.lang.Long) -> setStorageFree
    org.teleal.cling.support.model.StorageMedium getStorageMedium() -> getStorageMedium
    org.teleal.cling.support.model.container.StorageVolume setStorageMedium(org.teleal.cling.support.model.StorageMedium) -> setStorageMedium
org.teleal.cling.support.model.item.AudioBook -> org.teleal.cling.support.model.item.AudioBook:
    org.teleal.cling.support.model.DIDLObject$Class CLASS -> CLASS
    org.teleal.cling.support.model.StorageMedium getStorageMedium() -> getStorageMedium
    org.teleal.cling.support.model.item.AudioBook setStorageMedium(org.teleal.cling.support.model.StorageMedium) -> setStorageMedium
    org.teleal.cling.support.model.Person getFirstProducer() -> getFirstProducer
    org.teleal.cling.support.model.Person[] getProducers() -> getProducers
    org.teleal.cling.support.model.item.AudioBook setProducers(org.teleal.cling.support.model.Person[]) -> setProducers
    org.teleal.cling.support.model.Person getFirstContributor() -> getFirstContributor
    org.teleal.cling.support.model.Person[] getContributors() -> getContributors
    org.teleal.cling.support.model.item.AudioBook setContributors(org.teleal.cling.support.model.Person[]) -> setContributors
    java.lang.String getDate() -> getDate
    org.teleal.cling.support.model.item.AudioBook setDate(java.lang.String) -> setDate
org.teleal.cling.support.model.item.AudioBroadcast -> org.teleal.cling.support.model.item.AudioBroadcast:
    org.teleal.cling.support.model.DIDLObject$Class CLASS -> CLASS
    java.lang.String getRegion() -> getRegion
    org.teleal.cling.support.model.item.AudioBroadcast setRegion(java.lang.String) -> setRegion
    java.lang.String getRadioCallSign() -> getRadioCallSign
    org.teleal.cling.support.model.item.AudioBroadcast setRadioCallSign(java.lang.String) -> setRadioCallSign
    java.lang.String getRadioStationID() -> getRadioStationID
    org.teleal.cling.support.model.item.AudioBroadcast setRadioStationID(java.lang.String) -> setRadioStationID
    java.lang.String getRadioBand() -> getRadioBand
    org.teleal.cling.support.model.item.AudioBroadcast setRadioBand(java.lang.String) -> setRadioBand
    java.lang.Integer getChannelNr() -> getChannelNr
    org.teleal.cling.support.model.item.AudioBroadcast setChannelNr(java.lang.Integer) -> setChannelNr
org.teleal.cling.support.model.item.AudioItem -> org.teleal.cling.support.model.item.AudioItem:
    org.teleal.cling.support.model.DIDLObject$Class CLASS -> CLASS
    java.lang.String getFirstGenre() -> getFirstGenre
    java.lang.String[] getGenres() -> getGenres
    org.teleal.cling.support.model.item.AudioItem setGenres(java.lang.String[]) -> setGenres
    java.lang.String getDescription() -> getDescription
    org.teleal.cling.support.model.item.AudioItem setDescription(java.lang.String) -> setDescription
    java.lang.String getLongDescription() -> getLongDescription
    org.teleal.cling.support.model.item.AudioItem setLongDescription(java.lang.String) -> setLongDescription
    org.teleal.cling.support.model.Person getFirstPublisher() -> getFirstPublisher
    org.teleal.cling.support.model.Person[] getPublishers() -> getPublishers
    org.teleal.cling.support.model.item.AudioItem setPublishers(org.teleal.cling.support.model.Person[]) -> setPublishers
    java.net.URI getFirstRelation() -> getFirstRelation
    java.net.URI[] getRelations() -> getRelations
    org.teleal.cling.support.model.item.AudioItem setRelations(java.net.URI[]) -> setRelations
    java.lang.String getLanguage() -> getLanguage
    org.teleal.cling.support.model.item.AudioItem setLanguage(java.lang.String) -> setLanguage
    java.lang.String getFirstRights() -> getFirstRights
    java.lang.String[] getRights() -> getRights
    org.teleal.cling.support.model.item.AudioItem setRights(java.lang.String[]) -> setRights
org.teleal.cling.support.model.item.ImageItem -> org.teleal.cling.support.model.item.ImageItem:
    org.teleal.cling.support.model.DIDLObject$Class CLASS -> CLASS
    java.lang.String getDescription() -> getDescription
    org.teleal.cling.support.model.item.ImageItem setDescription(java.lang.String) -> setDescription
    java.lang.String getLongDescription() -> getLongDescription
    org.teleal.cling.support.model.item.ImageItem setLongDescription(java.lang.String) -> setLongDescription
    org.teleal.cling.support.model.Person getFirstPublisher() -> getFirstPublisher
    org.teleal.cling.support.model.Person[] getPublishers() -> getPublishers
    org.teleal.cling.support.model.item.ImageItem setPublishers(org.teleal.cling.support.model.Person[]) -> setPublishers
    org.teleal.cling.support.model.StorageMedium getStorageMedium() -> getStorageMedium
    org.teleal.cling.support.model.item.ImageItem setStorageMedium(org.teleal.cling.support.model.StorageMedium) -> setStorageMedium
    java.lang.String getRating() -> getRating
    org.teleal.cling.support.model.item.ImageItem setRating(java.lang.String) -> setRating
    java.lang.String getDate() -> getDate
    org.teleal.cling.support.model.item.ImageItem setDate(java.lang.String) -> setDate
    java.lang.String getFirstRights() -> getFirstRights
    java.lang.String[] getRights() -> getRights
    org.teleal.cling.support.model.item.ImageItem setRights(java.lang.String[]) -> setRights
org.teleal.cling.support.model.item.Item -> org.teleal.cling.support.model.item.Item:
    java.lang.String refID -> refID
    java.lang.String getRefID() -> getRefID
    void setRefID(java.lang.String) -> setRefID
org.teleal.cling.support.model.item.Movie -> org.teleal.cling.support.model.item.Movie:
    org.teleal.cling.support.model.DIDLObject$Class CLASS -> CLASS
    org.teleal.cling.support.model.StorageMedium getStorageMedium() -> getStorageMedium
    org.teleal.cling.support.model.item.Movie setStorageMedium(org.teleal.cling.support.model.StorageMedium) -> setStorageMedium
    java.lang.Integer getDVDRegionCode() -> getDVDRegionCode
    org.teleal.cling.support.model.item.Movie setDVDRegionCode(java.lang.Integer) -> setDVDRegionCode
    java.lang.String getChannelName() -> getChannelName
    org.teleal.cling.support.model.item.Movie setChannelName(java.lang.String) -> setChannelName
    java.lang.String getFirstScheduledStartTime() -> getFirstScheduledStartTime
    java.lang.String[] getScheduledStartTimes() -> getScheduledStartTimes
    org.teleal.cling.support.model.item.Movie setScheduledStartTimes(java.lang.String[]) -> setScheduledStartTimes
    java.lang.String getFirstScheduledEndTime() -> getFirstScheduledEndTime
    java.lang.String[] getScheduledEndTimes() -> getScheduledEndTimes
    org.teleal.cling.support.model.item.Movie setScheduledEndTimes(java.lang.String[]) -> setScheduledEndTimes
org.teleal.cling.support.model.item.MusicTrack -> org.teleal.cling.support.model.item.MusicTrack:
    org.teleal.cling.support.model.DIDLObject$Class CLASS -> CLASS
    org.teleal.cling.support.model.PersonWithRole getFirstArtist() -> getFirstArtist
    org.teleal.cling.support.model.PersonWithRole[] getArtists() -> getArtists
    org.teleal.cling.support.model.item.MusicTrack setArtists(org.teleal.cling.support.model.PersonWithRole[]) -> setArtists
    java.lang.String getAlbum() -> getAlbum
    org.teleal.cling.support.model.item.MusicTrack setAlbum(java.lang.String) -> setAlbum
    java.lang.Integer getOriginalTrackNumber() -> getOriginalTrackNumber
    org.teleal.cling.support.model.item.MusicTrack setOriginalTrackNumber(java.lang.Integer) -> setOriginalTrackNumber
    java.lang.String getFirstPlaylist() -> getFirstPlaylist
    java.lang.String[] getPlaylists() -> getPlaylists
    org.teleal.cling.support.model.item.MusicTrack setPlaylists(java.lang.String[]) -> setPlaylists
    org.teleal.cling.support.model.StorageMedium getStorageMedium() -> getStorageMedium
    org.teleal.cling.support.model.item.MusicTrack setStorageMedium(org.teleal.cling.support.model.StorageMedium) -> setStorageMedium
    org.teleal.cling.support.model.Person getFirstContributor() -> getFirstContributor
    org.teleal.cling.support.model.Person[] getContributors() -> getContributors
    org.teleal.cling.support.model.item.MusicTrack setContributors(org.teleal.cling.support.model.Person[]) -> setContributors
    java.lang.String getDate() -> getDate
    org.teleal.cling.support.model.item.MusicTrack setDate(java.lang.String) -> setDate
org.teleal.cling.support.model.item.MusicVideoClip -> org.teleal.cling.support.model.item.MusicVideoClip:
    org.teleal.cling.support.model.DIDLObject$Class CLASS -> CLASS
    org.teleal.cling.support.model.PersonWithRole getFirstArtist() -> getFirstArtist
    org.teleal.cling.support.model.PersonWithRole[] getArtists() -> getArtists
    org.teleal.cling.support.model.item.MusicVideoClip setArtists(org.teleal.cling.support.model.PersonWithRole[]) -> setArtists
    org.teleal.cling.support.model.StorageMedium getStorageMedium() -> getStorageMedium
    org.teleal.cling.support.model.item.MusicVideoClip setStorageMedium(org.teleal.cling.support.model.StorageMedium) -> setStorageMedium
    java.lang.String getAlbum() -> getAlbum
    org.teleal.cling.support.model.item.MusicVideoClip setAlbum(java.lang.String) -> setAlbum
    java.lang.String getFirstScheduledStartTime() -> getFirstScheduledStartTime
    java.lang.String[] getScheduledStartTimes() -> getScheduledStartTimes
    org.teleal.cling.support.model.item.MusicVideoClip setScheduledStartTimes(java.lang.String[]) -> setScheduledStartTimes
    java.lang.String getFirstScheduledEndTime() -> getFirstScheduledEndTime
    java.lang.String[] getScheduledEndTimes() -> getScheduledEndTimes
    org.teleal.cling.support.model.item.MusicVideoClip setScheduledEndTimes(java.lang.String[]) -> setScheduledEndTimes
    org.teleal.cling.support.model.Person getFirstContributor() -> getFirstContributor
    org.teleal.cling.support.model.Person[] getContributors() -> getContributors
    org.teleal.cling.support.model.item.MusicVideoClip setContributors(org.teleal.cling.support.model.Person[]) -> setContributors
    java.lang.String getDate() -> getDate
    org.teleal.cling.support.model.item.MusicVideoClip setDate(java.lang.String) -> setDate
org.teleal.cling.support.model.item.Photo -> org.teleal.cling.support.model.item.Photo:
    org.teleal.cling.support.model.DIDLObject$Class CLASS -> CLASS
    java.lang.String getAlbum() -> getAlbum
    org.teleal.cling.support.model.item.Photo setAlbum(java.lang.String) -> setAlbum
org.teleal.cling.support.model.item.PlaylistItem -> org.teleal.cling.support.model.item.PlaylistItem:
    org.teleal.cling.support.model.DIDLObject$Class CLASS -> CLASS
    org.teleal.cling.support.model.PersonWithRole getFirstArtist() -> getFirstArtist
    org.teleal.cling.support.model.PersonWithRole[] getArtists() -> getArtists
    org.teleal.cling.support.model.item.PlaylistItem setArtists(org.teleal.cling.support.model.PersonWithRole[]) -> setArtists
    java.lang.String getFirstGenre() -> getFirstGenre
    java.lang.String[] getGenres() -> getGenres
    org.teleal.cling.support.model.item.PlaylistItem setGenres(java.lang.String[]) -> setGenres
    java.lang.String getDescription() -> getDescription
    org.teleal.cling.support.model.item.PlaylistItem setDescription(java.lang.String) -> setDescription
    java.lang.String getLongDescription() -> getLongDescription
    org.teleal.cling.support.model.item.PlaylistItem setLongDescription(java.lang.String) -> setLongDescription
    java.lang.String getLanguage() -> getLanguage
    org.teleal.cling.support.model.item.PlaylistItem setLanguage(java.lang.String) -> setLanguage
    org.teleal.cling.support.model.StorageMedium getStorageMedium() -> getStorageMedium
    org.teleal.cling.support.model.item.PlaylistItem setStorageMedium(org.teleal.cling.support.model.StorageMedium) -> setStorageMedium
    java.lang.String getDate() -> getDate
    org.teleal.cling.support.model.item.PlaylistItem setDate(java.lang.String) -> setDate
org.teleal.cling.support.model.item.TextItem -> org.teleal.cling.support.model.item.TextItem:
    org.teleal.cling.support.model.DIDLObject$Class CLASS -> CLASS
    org.teleal.cling.support.model.PersonWithRole getFirstAuthor() -> getFirstAuthor
    org.teleal.cling.support.model.PersonWithRole[] getAuthors() -> getAuthors
    org.teleal.cling.support.model.item.TextItem setAuthors(org.teleal.cling.support.model.PersonWithRole[]) -> setAuthors
    java.lang.String getDescription() -> getDescription
    org.teleal.cling.support.model.item.TextItem setDescription(java.lang.String) -> setDescription
    java.lang.String getLongDescription() -> getLongDescription
    org.teleal.cling.support.model.item.TextItem setLongDescription(java.lang.String) -> setLongDescription
    java.lang.String getLanguage() -> getLanguage
    org.teleal.cling.support.model.item.TextItem setLanguage(java.lang.String) -> setLanguage
    org.teleal.cling.support.model.StorageMedium getStorageMedium() -> getStorageMedium
    org.teleal.cling.support.model.item.TextItem setStorageMedium(org.teleal.cling.support.model.StorageMedium) -> setStorageMedium
    java.lang.String getDate() -> getDate
    org.teleal.cling.support.model.item.TextItem setDate(java.lang.String) -> setDate
    java.net.URI getFirstRelation() -> getFirstRelation
    java.net.URI[] getRelations() -> getRelations
    org.teleal.cling.support.model.item.TextItem setRelations(java.net.URI[]) -> setRelations
    java.lang.String getFirstRights() -> getFirstRights
    java.lang.String[] getRights() -> getRights
    org.teleal.cling.support.model.item.TextItem setRights(java.lang.String[]) -> setRights
    java.lang.String getRating() -> getRating
    org.teleal.cling.support.model.item.TextItem setRating(java.lang.String) -> setRating
    org.teleal.cling.support.model.Person getFirstContributor() -> getFirstContributor
    org.teleal.cling.support.model.Person[] getContributors() -> getContributors
    org.teleal.cling.support.model.item.TextItem setContributors(org.teleal.cling.support.model.Person[]) -> setContributors
    org.teleal.cling.support.model.Person getFirstPublisher() -> getFirstPublisher
    org.teleal.cling.support.model.Person[] getPublishers() -> getPublishers
    org.teleal.cling.support.model.item.TextItem setPublishers(org.teleal.cling.support.model.Person[]) -> setPublishers
org.teleal.cling.support.model.item.VideoBroadcast -> org.teleal.cling.support.model.item.VideoBroadcast:
    org.teleal.cling.support.model.DIDLObject$Class CLASS -> CLASS
    java.net.URI getIcon() -> getIcon
    org.teleal.cling.support.model.item.VideoBroadcast setIcon(java.net.URI) -> setIcon
    java.lang.String getRegion() -> getRegion
    org.teleal.cling.support.model.item.VideoBroadcast setRegion(java.lang.String) -> setRegion
    java.lang.Integer getChannelNr() -> getChannelNr
    org.teleal.cling.support.model.item.VideoBroadcast setChannelNr(java.lang.Integer) -> setChannelNr
org.teleal.cling.support.model.item.VideoItem -> org.teleal.cling.support.model.item.VideoItem:
    org.teleal.cling.support.model.DIDLObject$Class CLASS -> CLASS
    java.lang.String getFirstGenre() -> getFirstGenre
    java.lang.String[] getGenres() -> getGenres
    org.teleal.cling.support.model.item.VideoItem setGenres(java.lang.String[]) -> setGenres
    java.lang.String getDescription() -> getDescription
    org.teleal.cling.support.model.item.VideoItem setDescription(java.lang.String) -> setDescription
    java.lang.String getLongDescription() -> getLongDescription
    org.teleal.cling.support.model.item.VideoItem setLongDescription(java.lang.String) -> setLongDescription
    org.teleal.cling.support.model.Person getFirstProducer() -> getFirstProducer
    org.teleal.cling.support.model.Person[] getProducers() -> getProducers
    org.teleal.cling.support.model.item.VideoItem setProducers(org.teleal.cling.support.model.Person[]) -> setProducers
    java.lang.String getRating() -> getRating
    org.teleal.cling.support.model.item.VideoItem setRating(java.lang.String) -> setRating
    org.teleal.cling.support.model.PersonWithRole getFirstActor() -> getFirstActor
    org.teleal.cling.support.model.PersonWithRole[] getActors() -> getActors
    org.teleal.cling.support.model.item.VideoItem setActors(org.teleal.cling.support.model.PersonWithRole[]) -> setActors
    org.teleal.cling.support.model.Person getFirstDirector() -> getFirstDirector
    org.teleal.cling.support.model.Person[] getDirectors() -> getDirectors
    org.teleal.cling.support.model.item.VideoItem setDirectors(org.teleal.cling.support.model.Person[]) -> setDirectors
    org.teleal.cling.support.model.Person getFirstPublisher() -> getFirstPublisher
    org.teleal.cling.support.model.Person[] getPublishers() -> getPublishers
    org.teleal.cling.support.model.item.VideoItem setPublishers(org.teleal.cling.support.model.Person[]) -> setPublishers
    java.lang.String getLanguage() -> getLanguage
    org.teleal.cling.support.model.item.VideoItem setLanguage(java.lang.String) -> setLanguage
    java.net.URI getFirstRelation() -> getFirstRelation
    java.net.URI[] getRelations() -> getRelations
    org.teleal.cling.support.model.item.VideoItem setRelations(java.net.URI[]) -> setRelations
org.teleal.cling.support.renderingcontrol.AbstractAudioRenderingControl -> org.teleal.cling.support.renderingcontrol.AbstractAudioRenderingControl:
    org.teleal.cling.support.lastchange.LastChange lastChange -> lastChange
    java.beans.PropertyChangeSupport propertyChangeSupport -> propertyChangeSupport
    org.teleal.cling.support.lastchange.LastChange getLastChange() -> getLastChange
    void fireLastChange() -> fireLastChange
    java.beans.PropertyChangeSupport getPropertyChangeSupport() -> getPropertyChangeSupport
    org.teleal.cling.model.types.UnsignedIntegerFourBytes getDefaultInstanceID() -> getDefaultInstanceID
    java.lang.String listPresets(org.teleal.cling.model.types.UnsignedIntegerFourBytes) -> listPresets
    void selectPreset(org.teleal.cling.model.types.UnsignedIntegerFourBytes,java.lang.String) -> selectPreset
    boolean getMute(org.teleal.cling.model.types.UnsignedIntegerFourBytes,java.lang.String) -> getMute
    void setMute(org.teleal.cling.model.types.UnsignedIntegerFourBytes,java.lang.String,boolean) -> setMute
    org.teleal.cling.model.types.UnsignedIntegerTwoBytes getVolume(org.teleal.cling.model.types.UnsignedIntegerFourBytes,java.lang.String) -> getVolume
    void setVolume(org.teleal.cling.model.types.UnsignedIntegerFourBytes,java.lang.String,org.teleal.cling.model.types.UnsignedIntegerTwoBytes) -> setVolume
    java.lang.Integer getVolumeDB(org.teleal.cling.model.types.UnsignedIntegerFourBytes,java.lang.String) -> getVolumeDB
    void setVolumeDB(org.teleal.cling.model.types.UnsignedIntegerFourBytes,java.lang.String,java.lang.Integer) -> setVolumeDB
    org.teleal.cling.support.model.VolumeDBRange getVolumeDBRange(org.teleal.cling.model.types.UnsignedIntegerFourBytes,java.lang.String) -> getVolumeDBRange
    boolean getLoudness(org.teleal.cling.model.types.UnsignedIntegerFourBytes,java.lang.String) -> getLoudness
    void setLoudness(org.teleal.cling.model.types.UnsignedIntegerFourBytes,java.lang.String,boolean) -> setLoudness
    org.teleal.cling.support.model.Channel getChannel(java.lang.String) -> getChannel
org.teleal.cling.support.renderingcontrol.RenderingControlErrorCode -> org.teleal.cling.support.renderingcontrol.RenderingControlErrorCode:
    org.teleal.cling.support.renderingcontrol.RenderingControlErrorCode INVALID_PRESET_NAME -> INVALID_PRESET_NAME
    org.teleal.cling.support.renderingcontrol.RenderingControlErrorCode INVALID_INSTANCE_ID -> INVALID_INSTANCE_ID
    int code -> code
    java.lang.String description -> description
    org.teleal.cling.support.renderingcontrol.RenderingControlErrorCode[] $VALUES -> $VALUES
    org.teleal.cling.support.renderingcontrol.RenderingControlErrorCode[] values() -> values
    org.teleal.cling.support.renderingcontrol.RenderingControlErrorCode valueOf(java.lang.String) -> valueOf
    int getCode() -> getCode
    java.lang.String getDescription() -> getDescription
    org.teleal.cling.support.renderingcontrol.RenderingControlErrorCode getByCode(int) -> getByCode
org.teleal.cling.support.renderingcontrol.RenderingControlException -> org.teleal.cling.support.renderingcontrol.RenderingControlException:
org.teleal.cling.support.renderingcontrol.callback.GetMute -> org.teleal.cling.support.renderingcontrol.callback.GetMute:
    java.util.logging.Logger log -> log
    void success(org.teleal.cling.model.action.ActionInvocation) -> success
    void received(org.teleal.cling.model.action.ActionInvocation,boolean) -> received
org.teleal.cling.support.renderingcontrol.callback.GetVolume -> org.teleal.cling.support.renderingcontrol.callback.GetVolume:
    java.util.logging.Logger log -> log
    void success(org.teleal.cling.model.action.ActionInvocation) -> success
    void received(org.teleal.cling.model.action.ActionInvocation,int) -> received
org.teleal.cling.support.renderingcontrol.callback.SetMute -> org.teleal.cling.support.renderingcontrol.callback.SetMute:
    java.util.logging.Logger log -> log
    void success(org.teleal.cling.model.action.ActionInvocation) -> success
org.teleal.cling.support.renderingcontrol.callback.SetVolume -> org.teleal.cling.support.renderingcontrol.callback.SetVolume:
    java.util.logging.Logger log -> log
    void success(org.teleal.cling.model.action.ActionInvocation) -> success
org.teleal.cling.support.renderingcontrol.lastchange.ChannelMute -> org.teleal.cling.support.renderingcontrol.lastchange.ChannelMute:
    org.teleal.cling.support.model.Channel channel -> channel
    java.lang.Boolean mute -> mute
    org.teleal.cling.support.model.Channel getChannel() -> getChannel
    java.lang.Boolean getMute() -> getMute
    java.lang.String toString() -> toString
org.teleal.cling.support.renderingcontrol.lastchange.ChannelVolume -> org.teleal.cling.support.renderingcontrol.lastchange.ChannelVolume:
    org.teleal.cling.support.model.Channel channel -> channel
    java.lang.Integer volume -> volume
    org.teleal.cling.support.model.Channel getChannel() -> getChannel
    java.lang.Integer getVolume() -> getVolume
    java.lang.String toString() -> toString
org.teleal.cling.support.renderingcontrol.lastchange.ChannelVolumeDB -> org.teleal.cling.support.renderingcontrol.lastchange.ChannelVolumeDB:
    org.teleal.cling.support.model.Channel channel -> channel
    java.lang.Integer volumeDB -> volumeDB
    org.teleal.cling.support.model.Channel getChannel() -> getChannel
    java.lang.Integer getVolumeDB() -> getVolumeDB
    java.lang.String toString() -> toString
org.teleal.cling.support.renderingcontrol.lastchange.EventedValueChannelMute -> org.teleal.cling.support.renderingcontrol.lastchange.EventedValueChannelMute:
    org.teleal.cling.support.renderingcontrol.lastchange.ChannelMute valueOf(java.util.Map$Entry[]) -> valueOf
    java.util.Map$Entry[] getAttributes() -> getAttributes
    java.lang.String toString() -> toString
    org.teleal.cling.model.types.Datatype getDatatype() -> getDatatype
    java.lang.Object valueOf(java.util.Map$Entry[]) -> valueOf
org.teleal.cling.support.renderingcontrol.lastchange.EventedValueChannelVolume -> org.teleal.cling.support.renderingcontrol.lastchange.EventedValueChannelVolume:
    org.teleal.cling.support.renderingcontrol.lastchange.ChannelVolume valueOf(java.util.Map$Entry[]) -> valueOf
    java.util.Map$Entry[] getAttributes() -> getAttributes
    java.lang.String toString() -> toString
    org.teleal.cling.model.types.Datatype getDatatype() -> getDatatype
    java.lang.Object valueOf(java.util.Map$Entry[]) -> valueOf
org.teleal.cling.support.renderingcontrol.lastchange.EventedValueChannelVolumeDB -> org.teleal.cling.support.renderingcontrol.lastchange.EventedValueChannelVolumeDB:
    org.teleal.cling.support.renderingcontrol.lastchange.ChannelVolumeDB valueOf(java.util.Map$Entry[]) -> valueOf
    java.util.Map$Entry[] getAttributes() -> getAttributes
    java.lang.String toString() -> toString
    org.teleal.cling.model.types.Datatype getDatatype() -> getDatatype
    java.lang.Object valueOf(java.util.Map$Entry[]) -> valueOf
org.teleal.cling.support.renderingcontrol.lastchange.RenderingControlLastChangeParser -> org.teleal.cling.support.renderingcontrol.lastchange.RenderingControlLastChangeParser:
    java.lang.String NAMESPACE_URI -> NAMESPACE_URI
    java.lang.String SCHEMA_RESOURCE -> SCHEMA_RESOURCE
    java.lang.String getNamespace() -> getNamespace
    javax.xml.transform.Source[] getSchemaSources() -> getSchemaSources
    java.util.Set getEventedVariables() -> getEventedVariables
org.teleal.cling.support.renderingcontrol.lastchange.RenderingControlVariable -> org.teleal.cling.support.renderingcontrol.lastchange.RenderingControlVariable:
    java.util.Set ALL -> ALL
org.teleal.cling.support.renderingcontrol.lastchange.RenderingControlVariable$1 -> org.teleal.cling.support.renderingcontrol.lastchange.RenderingControlVariable$1:
org.teleal.cling.support.renderingcontrol.lastchange.RenderingControlVariable$BlueVideoBlackLevel -> org.teleal.cling.support.renderingcontrol.lastchange.RenderingControlVariable$BlueVideoBlackLevel:
org.teleal.cling.support.renderingcontrol.lastchange.RenderingControlVariable$BlueVideoGain -> org.teleal.cling.support.renderingcontrol.lastchange.RenderingControlVariable$BlueVideoGain:
org.teleal.cling.support.renderingcontrol.lastchange.RenderingControlVariable$Brightness -> org.teleal.cling.support.renderingcontrol.lastchange.RenderingControlVariable$Brightness:
org.teleal.cling.support.renderingcontrol.lastchange.RenderingControlVariable$ColorTemperature -> org.teleal.cling.support.renderingcontrol.lastchange.RenderingControlVariable$ColorTemperature:
org.teleal.cling.support.renderingcontrol.lastchange.RenderingControlVariable$Contrast -> org.teleal.cling.support.renderingcontrol.lastchange.RenderingControlVariable$Contrast:
org.teleal.cling.support.renderingcontrol.lastchange.RenderingControlVariable$GreenVideoBlackLevel -> org.teleal.cling.support.renderingcontrol.lastchange.RenderingControlVariable$GreenVideoBlackLevel:
org.teleal.cling.support.renderingcontrol.lastchange.RenderingControlVariable$GreenVideoGain -> org.teleal.cling.support.renderingcontrol.lastchange.RenderingControlVariable$GreenVideoGain:
org.teleal.cling.support.renderingcontrol.lastchange.RenderingControlVariable$HorizontalKeystone -> org.teleal.cling.support.renderingcontrol.lastchange.RenderingControlVariable$HorizontalKeystone:
org.teleal.cling.support.renderingcontrol.lastchange.RenderingControlVariable$Mute -> org.teleal.cling.support.renderingcontrol.lastchange.RenderingControlVariable$Mute:
org.teleal.cling.support.renderingcontrol.lastchange.RenderingControlVariable$PresetNameList -> org.teleal.cling.support.renderingcontrol.lastchange.RenderingControlVariable$PresetNameList:
org.teleal.cling.support.renderingcontrol.lastchange.RenderingControlVariable$RedVideoBlackLevel -> org.teleal.cling.support.renderingcontrol.lastchange.RenderingControlVariable$RedVideoBlackLevel:
org.teleal.cling.support.renderingcontrol.lastchange.RenderingControlVariable$RedVideoGain -> org.teleal.cling.support.renderingcontrol.lastchange.RenderingControlVariable$RedVideoGain:
org.teleal.cling.support.renderingcontrol.lastchange.RenderingControlVariable$Sharpness -> org.teleal.cling.support.renderingcontrol.lastchange.RenderingControlVariable$Sharpness:
org.teleal.cling.support.renderingcontrol.lastchange.RenderingControlVariable$VerticalKeystone -> org.teleal.cling.support.renderingcontrol.lastchange.RenderingControlVariable$VerticalKeystone:
org.teleal.cling.support.renderingcontrol.lastchange.RenderingControlVariable$Volume -> org.teleal.cling.support.renderingcontrol.lastchange.RenderingControlVariable$Volume:
org.teleal.cling.support.renderingcontrol.lastchange.RenderingControlVariable$VolumeDB -> org.teleal.cling.support.renderingcontrol.lastchange.RenderingControlVariable$VolumeDB:
org.teleal.cling.support.shared.AWTExceptionHandler -> org.teleal.cling.support.shared.AWTExceptionHandler:
    void handle(java.lang.Throwable) -> handle
org.teleal.cling.support.shared.AbstractMap -> org.teleal.cling.support.shared.AbstractMap:
    java.util.Set keySet -> keySet
    java.util.Collection valuesCollection -> valuesCollection
    void clear() -> clear
    boolean containsKey(java.lang.Object) -> containsKey
    boolean containsValue(java.lang.Object) -> containsValue
    java.util.Set entrySet() -> entrySet
    boolean equals(java.lang.Object) -> equals
    java.lang.Object get(java.lang.Object) -> get
    int hashCode() -> hashCode
    boolean isEmpty() -> isEmpty
    java.util.Set keySet() -> keySet
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    void putAll(java.util.Map) -> putAll
    java.lang.Object remove(java.lang.Object) -> remove
    int size() -> size
    java.lang.String toString() -> toString
    java.util.Collection values() -> values
    java.lang.Object clone() -> clone
org.teleal.cling.support.shared.AbstractMap$1 -> org.teleal.cling.support.shared.AbstractMap$1:
    org.teleal.cling.support.shared.AbstractMap this$0 -> this$0
    boolean contains(java.lang.Object) -> contains
    int size() -> size
    java.util.Iterator iterator() -> iterator
org.teleal.cling.support.shared.AbstractMap$1$1 -> org.teleal.cling.support.shared.AbstractMap$1$1:
    java.util.Iterator setIterator -> setIterator
    org.teleal.cling.support.shared.AbstractMap$1 this$1 -> this$1
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    void remove() -> remove
org.teleal.cling.support.shared.AbstractMap$2 -> org.teleal.cling.support.shared.AbstractMap$2:
    org.teleal.cling.support.shared.AbstractMap this$0 -> this$0
    int size() -> size
    boolean contains(java.lang.Object) -> contains
    java.util.Iterator iterator() -> iterator
org.teleal.cling.support.shared.AbstractMap$2$1 -> org.teleal.cling.support.shared.AbstractMap$2$1:
    java.util.Iterator setIterator -> setIterator
    org.teleal.cling.support.shared.AbstractMap$2 this$1 -> this$1
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    void remove() -> remove
org.teleal.cling.support.shared.AbstractMap$SimpleEntry -> org.teleal.cling.support.shared.AbstractMap$SimpleEntry:
    long serialVersionUID -> serialVersionUID
    java.lang.Object key -> key
    java.lang.Object value -> value
    java.lang.Object getKey() -> getKey
    java.lang.Object getValue() -> getValue
    java.lang.Object setValue(java.lang.Object) -> setValue
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
org.teleal.cling.support.shared.AbstractMap$SimpleImmutableEntry -> org.teleal.cling.support.shared.AbstractMap$SimpleImmutableEntry:
    long serialVersionUID -> serialVersionUID
    java.lang.Object key -> key
    java.lang.Object value -> value
    java.lang.Object getKey() -> getKey
    java.lang.Object getValue() -> getValue
    java.lang.Object setValue(java.lang.Object) -> setValue
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
org.teleal.cling.support.shared.LogCategories -> org.teleal.cling.support.shared.LogCategories:
org.teleal.cling.support.shared.MainController -> org.teleal.cling.support.shared.MainController:
    org.teleal.common.swingfwk.logging.LogController logController -> logController
    javax.swing.JPanel logPanel -> logPanel
    org.teleal.common.swingfwk.logging.LogController getLogController() -> getLogController
    javax.swing.JPanel getLogPanel() -> getLogPanel
    void log(java.util.logging.Level,java.lang.String) -> log
    void log(org.teleal.common.swingfwk.logging.LogMessage) -> log
    void dispose() -> dispose
    org.teleal.cling.UpnpService getUpnpService() -> getUpnpService
    org.teleal.common.swingfwk.logging.LogController access$000(org.teleal.cling.support.shared.MainController) -> access$000
org.teleal.cling.support.shared.MainController$1 -> org.teleal.cling.support.shared.MainController$1:
    org.teleal.cling.support.shared.MainController this$0 -> this$0
    void run() -> run
org.teleal.cling.support.shared.MainController$2 -> org.teleal.cling.support.shared.MainController$2:
    org.teleal.cling.support.shared.MainController this$0 -> this$0
    void expand(org.teleal.common.swingfwk.logging.LogMessage) -> expand
    java.awt.Frame getParentWindow() -> getParentWindow
org.teleal.cling.support.shared.MainController$3 -> org.teleal.cling.support.shared.MainController$3:
    org.teleal.cling.support.shared.MainController this$0 -> this$0
    void log(org.teleal.common.swingfwk.logging.LogMessage) -> log
org.teleal.cling.support.shared.MainController$4 -> org.teleal.cling.support.shared.MainController$4:
    org.teleal.cling.support.shared.MainController this$0 -> this$0
    void run() -> run
org.teleal.cling.support.shared.MainController$ShutdownWindow -> org.teleal.cling.support.shared.MainController$ShutdownWindow:
    javax.swing.JWindow INSTANCE -> INSTANCE
org.teleal.cling.support.shared.PlatformApple -> org.teleal.cling.support.shared.PlatformApple:
    void setup(org.teleal.common.swingfwk.Controller,java.lang.String) -> setup
org.teleal.cling.support.shared.PlatformApple$AppListenerProxy -> org.teleal.cling.support.shared.PlatformApple$AppListenerProxy:
    org.teleal.common.swingfwk.Controller appController -> appController
    java.lang.Object object -> object
    java.lang.Object newInstance(java.lang.Object,org.teleal.common.swingfwk.Controller) -> newInstance
    java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[]) -> invoke
org.teleal.cling.support.shared.TextExpandDialog -> org.teleal.cling.support.shared.TextExpandDialog:
    java.util.logging.Logger log -> log
org.teleal.cling.support.shared.TextExpandDialog$1 -> org.teleal.cling.support.shared.TextExpandDialog$1:
    org.teleal.cling.support.shared.TextExpandDialog this$0 -> this$0
    org.teleal.common.xml.DOM createDOM(org.w3c.dom.Document) -> createDOM
org.teleal.cling.support.shared.TextExpandEvent -> org.teleal.cling.support.shared.TextExpandEvent:
org.teleal.cling.support.xmicrosoft.AbstractMediaReceiverRegistrarService -> org.teleal.cling.support.xmicrosoft.AbstractMediaReceiverRegistrarService:
    java.beans.PropertyChangeSupport propertyChangeSupport -> propertyChangeSupport
    org.teleal.cling.model.types.UnsignedIntegerFourBytes authorizationGrantedUpdateID -> authorizationGrantedUpdateID
    org.teleal.cling.model.types.UnsignedIntegerFourBytes authorizationDeniedUpdateID -> authorizationDeniedUpdateID
    org.teleal.cling.model.types.UnsignedIntegerFourBytes validationSucceededUpdateID -> validationSucceededUpdateID
    org.teleal.cling.model.types.UnsignedIntegerFourBytes validationRevokedUpdateID -> validationRevokedUpdateID
    java.beans.PropertyChangeSupport getPropertyChangeSupport() -> getPropertyChangeSupport
    org.teleal.cling.model.types.UnsignedIntegerFourBytes getAuthorizationGrantedUpdateID() -> getAuthorizationGrantedUpdateID
    org.teleal.cling.model.types.UnsignedIntegerFourBytes getAuthorizationDeniedUpdateID() -> getAuthorizationDeniedUpdateID
    org.teleal.cling.model.types.UnsignedIntegerFourBytes getValidationSucceededUpdateID() -> getValidationSucceededUpdateID
    org.teleal.cling.model.types.UnsignedIntegerFourBytes getValidationRevokedUpdateID() -> getValidationRevokedUpdateID
    int isAuthorized(java.lang.String) -> isAuthorized
    int isValidated(java.lang.String) -> isValidated
    byte[] registerDevice(byte[]) -> registerDevice
org.teleal.cling.transport.Router -> org.teleal.cling.transport.Router:
    org.teleal.cling.UpnpServiceConfiguration getConfiguration() -> getConfiguration
    org.teleal.cling.protocol.ProtocolFactory getProtocolFactory() -> getProtocolFactory
    org.teleal.cling.transport.spi.NetworkAddressFactory getNetworkAddressFactory() -> getNetworkAddressFactory
    java.util.List getActiveStreamServers(java.net.InetAddress) -> getActiveStreamServers
    void shutdown() -> shutdown
    void received(org.teleal.cling.model.message.IncomingDatagramMessage) -> received
    void received(org.teleal.cling.transport.spi.UpnpStream) -> received
    void send(org.teleal.cling.model.message.OutgoingDatagramMessage) -> send
    org.teleal.cling.model.message.StreamResponseMessage send(org.teleal.cling.model.message.StreamRequestMessage) -> send
    void broadcast(byte[]) -> broadcast
org.teleal.cling.transport.RouterImpl -> org.teleal.cling.transport.RouterImpl:
    java.util.logging.Logger log -> log
    org.teleal.cling.UpnpServiceConfiguration configuration -> configuration
    org.teleal.cling.protocol.ProtocolFactory protocolFactory -> protocolFactory
    org.teleal.cling.transport.spi.StreamClient streamClient -> streamClient
    org.teleal.cling.transport.spi.NetworkAddressFactory networkAddressFactory -> networkAddressFactory
    java.util.Map multicastReceivers -> multicastReceivers
    java.util.Map datagramIOs -> datagramIOs
    java.util.Map streamServers -> streamServers
    org.teleal.cling.UpnpServiceConfiguration getConfiguration() -> getConfiguration
    org.teleal.cling.protocol.ProtocolFactory getProtocolFactory() -> getProtocolFactory
    org.teleal.cling.transport.spi.NetworkAddressFactory getNetworkAddressFactory() -> getNetworkAddressFactory
    java.util.Map getMulticastReceivers() -> getMulticastReceivers
    java.util.Map getDatagramIOs() -> getDatagramIOs
    org.teleal.cling.transport.spi.StreamClient getStreamClient() -> getStreamClient
    java.util.Map getStreamServers() -> getStreamServers
    java.util.List getActiveStreamServers(java.net.InetAddress) -> getActiveStreamServers
    void shutdown() -> shutdown
    void received(org.teleal.cling.model.message.IncomingDatagramMessage) -> received
    void received(org.teleal.cling.transport.spi.UpnpStream) -> received
    void send(org.teleal.cling.model.message.OutgoingDatagramMessage) -> send
    org.teleal.cling.model.message.StreamResponseMessage send(org.teleal.cling.model.message.StreamRequestMessage) -> send
    void broadcast(byte[]) -> broadcast
org.teleal.cling.transport.SwitchableRouter -> org.teleal.cling.transport.SwitchableRouter:
    boolean isEnabled() -> isEnabled
    boolean enable() -> enable
    boolean disable() -> disable
    void handleStartFailure(org.teleal.cling.transport.spi.InitializationException) -> handleStartFailure
org.teleal.cling.transport.SwitchableRouterImpl -> org.teleal.cling.transport.SwitchableRouterImpl:
    java.util.logging.Logger log -> log
    org.teleal.cling.UpnpServiceConfiguration configuration -> configuration
    org.teleal.cling.protocol.ProtocolFactory protocolFactory -> protocolFactory
    org.teleal.cling.transport.Router router -> router
    java.util.concurrent.locks.ReentrantReadWriteLock routerLock -> routerLock
    java.util.concurrent.locks.Lock readLock -> readLock
    java.util.concurrent.locks.Lock writeLock -> writeLock
    org.teleal.cling.UpnpServiceConfiguration getConfiguration() -> getConfiguration
    org.teleal.cling.protocol.ProtocolFactory getProtocolFactory() -> getProtocolFactory
    boolean isEnabled() -> isEnabled
    boolean enable() -> enable
    void handleStartFailure(org.teleal.cling.transport.spi.InitializationException) -> handleStartFailure
    boolean disable() -> disable
    org.teleal.cling.transport.spi.NetworkAddressFactory getNetworkAddressFactory() -> getNetworkAddressFactory
    java.util.List getActiveStreamServers(java.net.InetAddress) -> getActiveStreamServers
    void shutdown() -> shutdown
    void received(org.teleal.cling.model.message.IncomingDatagramMessage) -> received
    void received(org.teleal.cling.transport.spi.UpnpStream) -> received
    void send(org.teleal.cling.model.message.OutgoingDatagramMessage) -> send
    org.teleal.cling.model.message.StreamResponseMessage send(org.teleal.cling.model.message.StreamRequestMessage) -> send
    void broadcast(byte[]) -> broadcast
    void lock(java.util.concurrent.locks.Lock,int) -> lock
    void lock(java.util.concurrent.locks.Lock) -> lock
    void unlock(java.util.concurrent.locks.Lock) -> unlock
    int getLockTimeoutMillis() -> getLockTimeoutMillis
org.teleal.cling.transport.SwitchableRouterImpl$DisabledNetworkAddressFactory -> org.teleal.cling.transport.SwitchableRouterImpl$DisabledNetworkAddressFactory:
    org.teleal.cling.transport.SwitchableRouterImpl this$0 -> this$0
    java.net.InetAddress getMulticastGroup() -> getMulticastGroup
    int getMulticastPort() -> getMulticastPort
    int getStreamListenPort() -> getStreamListenPort
    java.net.NetworkInterface[] getNetworkInterfaces() -> getNetworkInterfaces
    java.net.InetAddress[] getBindAddresses() -> getBindAddresses
    byte[] getHardwareAddress(java.net.InetAddress) -> getHardwareAddress
    java.net.InetAddress getBroadcastAddress(java.net.InetAddress) -> getBroadcastAddress
    java.net.InetAddress getLocalAddress(java.net.NetworkInterface,boolean,java.net.InetAddress) -> getLocalAddress
org.teleal.cling.transport.SwitchableRouterImpl$RouterLockAcquisitionException -> org.teleal.cling.transport.SwitchableRouterImpl$RouterLockAcquisitionException:
org.teleal.cling.transport.impl.DatagramIOConfigurationImpl -> org.teleal.cling.transport.impl.DatagramIOConfigurationImpl:
    int timeToLive -> timeToLive
    int maxDatagramBytes -> maxDatagramBytes
    int getTimeToLive() -> getTimeToLive
    void setTimeToLive(int) -> setTimeToLive
    int getMaxDatagramBytes() -> getMaxDatagramBytes
    void setMaxDatagramBytes(int) -> setMaxDatagramBytes
org.teleal.cling.transport.impl.DatagramIOImpl -> org.teleal.cling.transport.impl.DatagramIOImpl:
    java.util.logging.Logger log -> log
    org.teleal.cling.transport.impl.DatagramIOConfigurationImpl configuration -> configuration
    org.teleal.cling.transport.Router router -> router
    org.teleal.cling.transport.spi.DatagramProcessor datagramProcessor -> datagramProcessor
    java.net.InetSocketAddress localAddress -> localAddress
    java.net.MulticastSocket socket -> socket
    org.teleal.cling.transport.impl.DatagramIOConfigurationImpl getConfiguration() -> getConfiguration
    void init(java.net.InetAddress,org.teleal.cling.transport.Router,org.teleal.cling.transport.spi.DatagramProcessor) -> init
    void stop() -> stop
    void run() -> run
    void send(org.teleal.cling.model.message.OutgoingDatagramMessage) -> send
    void send(java.net.DatagramPacket) -> send
    org.teleal.cling.transport.spi.DatagramIOConfiguration getConfiguration() -> getConfiguration
org.teleal.cling.transport.impl.DatagramProcessorImpl -> org.teleal.cling.transport.impl.DatagramProcessorImpl:
    java.util.logging.Logger log -> log
    org.teleal.cling.model.message.IncomingDatagramMessage read(java.net.InetAddress,java.net.DatagramPacket) -> read
    java.net.DatagramPacket write(org.teleal.cling.model.message.OutgoingDatagramMessage) -> write
    org.teleal.cling.model.message.IncomingDatagramMessage readRequestMessage(java.net.InetAddress,java.net.DatagramPacket,java.io.ByteArrayInputStream,java.lang.String,java.lang.String) -> readRequestMessage
    org.teleal.cling.model.message.IncomingDatagramMessage readResponseMessage(java.net.InetAddress,java.net.DatagramPacket,java.io.ByteArrayInputStream,int,java.lang.String,java.lang.String) -> readResponseMessage
org.teleal.cling.transport.impl.GENAEventProcessorImpl -> org.teleal.cling.transport.impl.GENAEventProcessorImpl:
    java.util.logging.Logger log -> log
    void writeBody(org.teleal.cling.model.message.gena.OutgoingEventRequestMessage) -> writeBody
    void readBody(org.teleal.cling.model.message.gena.IncomingEventRequestMessage) -> readBody
    org.w3c.dom.Element writePropertysetElement(org.w3c.dom.Document) -> writePropertysetElement
    org.w3c.dom.Element readPropertysetElement(org.w3c.dom.Document) -> readPropertysetElement
    void writeProperties(org.w3c.dom.Document,org.w3c.dom.Element,org.teleal.cling.model.message.gena.OutgoingEventRequestMessage) -> writeProperties
    void readProperties(org.w3c.dom.Element,org.teleal.cling.model.message.gena.IncomingEventRequestMessage) -> readProperties
    java.lang.String toString(org.w3c.dom.Document) -> toString
    java.lang.String getUnprefixedNodeName(org.w3c.dom.Node) -> getUnprefixedNodeName
org.teleal.cling.transport.impl.HttpExchangeUpnpStream -> org.teleal.cling.transport.impl.HttpExchangeUpnpStream:
    java.util.logging.Logger log -> log
    com.sun.net.httpserver.HttpExchange httpExchange -> httpExchange
    com.sun.net.httpserver.HttpExchange getHttpExchange() -> getHttpExchange
    void run() -> run
org.teleal.cling.transport.impl.MulticastReceiverConfigurationImpl -> org.teleal.cling.transport.impl.MulticastReceiverConfigurationImpl:
    java.net.InetAddress group -> group
    int port -> port
    int maxDatagramBytes -> maxDatagramBytes
    java.net.InetAddress getGroup() -> getGroup
    void setGroup(java.net.InetAddress) -> setGroup
    int getPort() -> getPort
    void setPort(int) -> setPort
    int getMaxDatagramBytes() -> getMaxDatagramBytes
    void setMaxDatagramBytes(int) -> setMaxDatagramBytes
org.teleal.cling.transport.impl.MulticastReceiverImpl -> org.teleal.cling.transport.impl.MulticastReceiverImpl:
    java.util.logging.Logger log -> log
    org.teleal.cling.transport.impl.MulticastReceiverConfigurationImpl configuration -> configuration
    org.teleal.cling.transport.Router router -> router
    org.teleal.cling.transport.spi.DatagramProcessor datagramProcessor -> datagramProcessor
    java.net.NetworkInterface multicastInterface -> multicastInterface
    java.net.InetSocketAddress multicastAddress -> multicastAddress
    java.net.MulticastSocket socket -> socket
    org.teleal.cling.transport.impl.MulticastReceiverConfigurationImpl getConfiguration() -> getConfiguration
    void init(java.net.NetworkInterface,org.teleal.cling.transport.Router,org.teleal.cling.transport.spi.DatagramProcessor) -> init
    void stop() -> stop
    void run() -> run
    org.teleal.cling.transport.spi.MulticastReceiverConfiguration getConfiguration() -> getConfiguration
org.teleal.cling.transport.impl.NetworkAddressFactoryImpl -> org.teleal.cling.transport.impl.NetworkAddressFactoryImpl:
    int DEFAULT_TCP_HTTP_LISTEN_PORT -> DEFAULT_TCP_HTTP_LISTEN_PORT
    java.util.logging.Logger log -> log
    java.util.Set useInterfaces -> useInterfaces
    java.util.Set useAddresses -> useAddresses
    java.util.List networkInterfaces -> networkInterfaces
    java.util.List bindAddresses -> bindAddresses
    int streamListenPort -> streamListenPort
    java.net.InetAddress getMulticastGroup() -> getMulticastGroup
    int getMulticastPort() -> getMulticastPort
    int getStreamListenPort() -> getStreamListenPort
    java.net.NetworkInterface[] getNetworkInterfaces() -> getNetworkInterfaces
    java.net.InetAddress[] getBindAddresses() -> getBindAddresses
    byte[] getHardwareAddress(java.net.InetAddress) -> getHardwareAddress
    java.net.InetAddress getBroadcastAddress(java.net.InetAddress) -> getBroadcastAddress
    java.net.InetAddress getLocalAddress(java.net.NetworkInterface,boolean,java.net.InetAddress) -> getLocalAddress
    java.util.List getInterfaceAddresses(java.net.NetworkInterface) -> getInterfaceAddresses
    java.util.List getInetAddresses(java.net.NetworkInterface) -> getInetAddresses
    java.net.InetAddress getBindAddressInSubnetOf(java.net.InetAddress) -> getBindAddressInSubnetOf
    boolean isInSubnet(byte[],byte[],short) -> isInSubnet
    void discoverNetworkInterfaces() -> discoverNetworkInterfaces
    boolean isUsableNetworkInterface(java.net.NetworkInterface) -> isUsableNetworkInterface
    void discoverBindAddresses() -> discoverBindAddresses
    boolean isUsableAddress(java.net.NetworkInterface,java.net.InetAddress) -> isUsableAddress
    void displayInterfaceInformation(java.net.NetworkInterface) -> displayInterfaceInformation
org.teleal.cling.transport.impl.SOAPActionProcessorImpl -> org.teleal.cling.transport.impl.SOAPActionProcessorImpl:
    java.util.logging.Logger log -> log
    void writeBody(org.teleal.cling.model.message.control.ActionRequestMessage,org.teleal.cling.model.action.ActionInvocation) -> writeBody
    void writeBody(org.teleal.cling.model.message.control.ActionResponseMessage,org.teleal.cling.model.action.ActionInvocation) -> writeBody
    void readBody(org.teleal.cling.model.message.control.ActionRequestMessage,org.teleal.cling.model.action.ActionInvocation) -> readBody
    void readBody(org.teleal.cling.model.message.control.ActionResponseMessage,org.teleal.cling.model.action.ActionInvocation) -> readBody
    void writeBodyFailure(org.w3c.dom.Document,org.w3c.dom.Element,org.teleal.cling.model.message.control.ActionResponseMessage,org.teleal.cling.model.action.ActionInvocation) -> writeBodyFailure
    void writeBodyRequest(org.w3c.dom.Document,org.w3c.dom.Element,org.teleal.cling.model.message.control.ActionRequestMessage,org.teleal.cling.model.action.ActionInvocation) -> writeBodyRequest
    void writeBodyResponse(org.w3c.dom.Document,org.w3c.dom.Element,org.teleal.cling.model.message.control.ActionResponseMessage,org.teleal.cling.model.action.ActionInvocation) -> writeBodyResponse
    org.teleal.cling.model.action.ActionException readBodyFailure(org.w3c.dom.Document,org.w3c.dom.Element) -> readBodyFailure
    void readBodyRequest(org.w3c.dom.Document,org.w3c.dom.Element,org.teleal.cling.model.message.control.ActionRequestMessage,org.teleal.cling.model.action.ActionInvocation) -> readBodyRequest
    void readBodyResponse(org.w3c.dom.Document,org.w3c.dom.Element,org.teleal.cling.model.message.control.ActionResponseMessage,org.teleal.cling.model.action.ActionInvocation) -> readBodyResponse
    org.w3c.dom.Element writeBodyElement(org.w3c.dom.Document) -> writeBodyElement
    org.w3c.dom.Element readBodyElement(org.w3c.dom.Document) -> readBodyElement
    org.w3c.dom.Element writeActionRequestElement(org.w3c.dom.Document,org.w3c.dom.Element,org.teleal.cling.model.message.control.ActionRequestMessage,org.teleal.cling.model.action.ActionInvocation) -> writeActionRequestElement
    org.w3c.dom.Element readActionRequestElement(org.w3c.dom.Element,org.teleal.cling.model.message.control.ActionRequestMessage,org.teleal.cling.model.action.ActionInvocation) -> readActionRequestElement
    org.w3c.dom.Element writeActionResponseElement(org.w3c.dom.Document,org.w3c.dom.Element,org.teleal.cling.model.message.control.ActionResponseMessage,org.teleal.cling.model.action.ActionInvocation) -> writeActionResponseElement
    org.w3c.dom.Element readActionResponseElement(org.w3c.dom.Element,org.teleal.cling.model.action.ActionInvocation) -> readActionResponseElement
    void writeActionInputArguments(org.w3c.dom.Document,org.w3c.dom.Element,org.teleal.cling.model.action.ActionInvocation) -> writeActionInputArguments
    void readActionInputArguments(org.w3c.dom.Element,org.teleal.cling.model.action.ActionInvocation) -> readActionInputArguments
    void writeActionOutputArguments(org.w3c.dom.Document,org.w3c.dom.Element,org.teleal.cling.model.action.ActionInvocation) -> writeActionOutputArguments
    void readActionOutputArguments(org.w3c.dom.Element,org.teleal.cling.model.action.ActionInvocation) -> readActionOutputArguments
    void writeFaultElement(org.w3c.dom.Document,org.w3c.dom.Element,org.teleal.cling.model.action.ActionInvocation) -> writeFaultElement
    org.teleal.cling.model.action.ActionException readFaultElement(org.w3c.dom.Element) -> readFaultElement
    java.lang.String toString(org.w3c.dom.Document) -> toString
    java.lang.String getUnprefixedNodeName(org.w3c.dom.Node) -> getUnprefixedNodeName
    org.teleal.cling.model.action.ActionArgumentValue[] readArgumentValues(org.w3c.dom.NodeList,org.teleal.cling.model.meta.ActionArgument[]) -> readArgumentValues
    java.util.List getMatchingNodes(org.w3c.dom.NodeList,org.teleal.cling.model.meta.ActionArgument[]) -> getMatchingNodes
    org.teleal.cling.model.action.ActionArgumentValue createValue(org.teleal.cling.model.meta.ActionArgument,java.lang.String) -> createValue
org.teleal.cling.transport.impl.StreamClientConfigurationImpl -> org.teleal.cling.transport.impl.StreamClientConfigurationImpl:
    boolean usePersistentConnections -> usePersistentConnections
    int connectionTimeoutSeconds -> connectionTimeoutSeconds
    int dataReadTimeoutSeconds -> dataReadTimeoutSeconds
    boolean isUsePersistentConnections() -> isUsePersistentConnections
    void setUsePersistentConnections(boolean) -> setUsePersistentConnections
    int getConnectionTimeoutSeconds() -> getConnectionTimeoutSeconds
    void setConnectionTimeoutSeconds(int) -> setConnectionTimeoutSeconds
    int getDataReadTimeoutSeconds() -> getDataReadTimeoutSeconds
    void setDataReadTimeoutSeconds(int) -> setDataReadTimeoutSeconds
    java.lang.String getUserAgentValue(int,int) -> getUserAgentValue
org.teleal.cling.transport.impl.StreamClientImpl -> org.teleal.cling.transport.impl.StreamClientImpl:
    java.lang.String HACK_STREAM_HANDLER_SYSTEM_PROPERTY -> HACK_STREAM_HANDLER_SYSTEM_PROPERTY
    java.util.logging.Logger log -> log
    org.teleal.cling.transport.impl.StreamClientConfigurationImpl configuration -> configuration
    org.teleal.cling.transport.impl.StreamClientConfigurationImpl getConfiguration() -> getConfiguration
    org.teleal.cling.model.message.StreamResponseMessage sendRequest(org.teleal.cling.model.message.StreamRequestMessage) -> sendRequest
    void stop() -> stop
    void applyRequestProperties(java.net.HttpURLConnection,org.teleal.cling.model.message.StreamRequestMessage) -> applyRequestProperties
    void applyHeaders(java.net.HttpURLConnection,org.teleal.common.http.Headers) -> applyHeaders
    void applyRequestBody(java.net.HttpURLConnection,org.teleal.cling.model.message.StreamRequestMessage) -> applyRequestBody
    org.teleal.cling.model.message.StreamResponseMessage createResponse(java.net.HttpURLConnection,java.io.InputStream) -> createResponse
    org.teleal.cling.transport.spi.StreamClientConfiguration getConfiguration() -> getConfiguration
    java.util.logging.Logger access$000() -> access$000
org.teleal.cling.transport.impl.StreamClientImpl$1 -> org.teleal.cling.transport.impl.StreamClientImpl$1:
    org.teleal.cling.transport.impl.StreamClientImpl this$0 -> this$0
    java.net.URLStreamHandler createURLStreamHandler(java.lang.String) -> createURLStreamHandler
org.teleal.cling.transport.impl.StreamClientImpl$1$1 -> org.teleal.cling.transport.impl.StreamClientImpl$1$1:
    org.teleal.cling.transport.impl.StreamClientImpl$1 this$1 -> this$1
    java.net.URLConnection openConnection(java.net.URL) -> openConnection
    java.net.URLConnection openConnection(java.net.URL,java.net.Proxy) -> openConnection
org.teleal.cling.transport.impl.StreamClientImpl$UpnpURLConnection -> org.teleal.cling.transport.impl.StreamClientImpl$UpnpURLConnection:
    java.lang.String[] methods -> methods
    java.io.OutputStream getOutputStream() -> getOutputStream
    void setRequestMethod(java.lang.String) -> setRequestMethod
org.teleal.cling.transport.impl.StreamServerConfigurationImpl -> org.teleal.cling.transport.impl.StreamServerConfigurationImpl:
    int listenPort -> listenPort
    int tcpConnectionBacklog -> tcpConnectionBacklog
    int getListenPort() -> getListenPort
    void setListenPort(int) -> setListenPort
    int getTcpConnectionBacklog() -> getTcpConnectionBacklog
    void setTcpConnectionBacklog(int) -> setTcpConnectionBacklog
org.teleal.cling.transport.impl.StreamServerImpl -> org.teleal.cling.transport.impl.StreamServerImpl:
    java.util.logging.Logger log -> log
    org.teleal.cling.transport.impl.StreamServerConfigurationImpl configuration -> configuration
    com.sun.net.httpserver.HttpServer server -> server
    void init(java.net.InetAddress,org.teleal.cling.transport.Router) -> init
    int getPort() -> getPort
    org.teleal.cling.transport.impl.StreamServerConfigurationImpl getConfiguration() -> getConfiguration
    void run() -> run
    void stop() -> stop
    org.teleal.cling.transport.spi.StreamServerConfiguration getConfiguration() -> getConfiguration
org.teleal.cling.transport.impl.StreamServerImpl$RequestHttpHandler -> org.teleal.cling.transport.impl.StreamServerImpl$RequestHttpHandler:
    java.util.logging.Logger log -> log
    org.teleal.cling.transport.Router router -> router
    void handle(com.sun.net.httpserver.HttpExchange) -> handle
org.teleal.cling.transport.impl.apache.HeaderUtil -> org.teleal.cling.transport.impl.apache.HeaderUtil:
    void add(org.apache.http.HttpMessage,org.teleal.common.http.Headers) -> add
    org.teleal.common.http.Headers get(org.apache.http.HttpMessage) -> get
org.teleal.cling.transport.impl.apache.HttpServerConnectionUpnpStream -> org.teleal.cling.transport.impl.apache.HttpServerConnectionUpnpStream:
    java.util.logging.Logger log -> log
    org.apache.http.HttpServerConnection connection -> connection
    org.apache.http.protocol.BasicHttpProcessor httpProcessor -> httpProcessor
    org.apache.http.protocol.HttpService httpService -> httpService
    org.apache.http.params.HttpParams params -> params
    org.apache.http.HttpServerConnection getConnection() -> getConnection
    void run() -> run
    java.util.logging.Logger access$000() -> access$000
    void access$100(org.teleal.cling.transport.impl.apache.HttpServerConnectionUpnpStream,java.lang.Throwable) -> access$100
    void access$200(org.teleal.cling.transport.impl.apache.HttpServerConnectionUpnpStream,org.teleal.cling.model.message.StreamResponseMessage) -> access$200
org.teleal.cling.transport.impl.apache.HttpServerConnectionUpnpStream$UpnpHttpService -> org.teleal.cling.transport.impl.apache.HttpServerConnectionUpnpStream$UpnpHttpService:
    org.teleal.cling.transport.impl.apache.HttpServerConnectionUpnpStream this$0 -> this$0
    void doService(org.apache.http.HttpRequest,org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> doService
    org.apache.http.params.HttpParams getResponseParams(org.teleal.cling.model.message.UpnpOperation) -> getResponseParams
org.teleal.cling.transport.impl.apache.StreamClientConfigurationImpl -> org.teleal.cling.transport.impl.apache.StreamClientConfigurationImpl:
    int maxTotalConnections -> maxTotalConnections
    int connectionTimeoutSeconds -> connectionTimeoutSeconds
    int dataReadTimeoutSeconds -> dataReadTimeoutSeconds
    java.lang.String contentCharset -> contentCharset
    int getMaxTotalConnections() -> getMaxTotalConnections
    void setMaxTotalConnections(int) -> setMaxTotalConnections
    int getConnectionTimeoutSeconds() -> getConnectionTimeoutSeconds
    void setConnectionTimeoutSeconds(int) -> setConnectionTimeoutSeconds
    int getDataReadTimeoutSeconds() -> getDataReadTimeoutSeconds
    void setDataReadTimeoutSeconds(int) -> setDataReadTimeoutSeconds
    java.lang.String getContentCharset() -> getContentCharset
    void setContentCharset(java.lang.String) -> setContentCharset
    java.lang.String getUserAgentValue(int,int) -> getUserAgentValue
    int getSocketBufferSize() -> getSocketBufferSize
    boolean getStaleCheckingEnabled() -> getStaleCheckingEnabled
    int getRequestRetryCount() -> getRequestRetryCount
org.teleal.cling.transport.impl.apache.StreamClientImpl -> org.teleal.cling.transport.impl.apache.StreamClientImpl:
    java.util.logging.Logger log -> log
    org.teleal.cling.transport.impl.apache.StreamClientConfigurationImpl configuration -> configuration
    org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager clientConnectionManager -> clientConnectionManager
    org.apache.http.impl.client.DefaultHttpClient httpClient -> httpClient
    org.apache.http.params.HttpParams globalParams -> globalParams
    org.teleal.cling.transport.impl.apache.StreamClientConfigurationImpl getConfiguration() -> getConfiguration
    org.teleal.cling.model.message.StreamResponseMessage sendRequest(org.teleal.cling.model.message.StreamRequestMessage) -> sendRequest
    void stop() -> stop
    org.apache.http.client.methods.HttpUriRequest createHttpRequest(org.teleal.cling.model.message.UpnpMessage,org.teleal.cling.model.message.UpnpRequest) -> createHttpRequest
    org.apache.http.HttpEntity createHttpRequestEntity(org.teleal.cling.model.message.UpnpMessage) -> createHttpRequestEntity
    org.apache.http.client.ResponseHandler createResponseHandler() -> createResponseHandler
    org.apache.http.params.HttpParams getRequestParams(org.teleal.cling.model.message.StreamRequestMessage) -> getRequestParams
    org.teleal.cling.transport.spi.StreamClientConfiguration getConfiguration() -> getConfiguration
    java.util.logging.Logger access$000() -> access$000
org.teleal.cling.transport.impl.apache.StreamClientImpl$1 -> org.teleal.cling.transport.impl.apache.StreamClientImpl$1:
    org.teleal.cling.transport.impl.apache.StreamClientImpl this$0 -> this$0
    java.lang.String getMethod() -> getMethod
org.teleal.cling.transport.impl.apache.StreamClientImpl$2 -> org.teleal.cling.transport.impl.apache.StreamClientImpl$2:
    org.teleal.cling.transport.impl.apache.StreamClientImpl this$0 -> this$0
    java.lang.String getMethod() -> getMethod
org.teleal.cling.transport.impl.apache.StreamClientImpl$3 -> org.teleal.cling.transport.impl.apache.StreamClientImpl$3:
    org.teleal.cling.transport.impl.apache.StreamClientImpl this$0 -> this$0
    java.lang.String getMethod() -> getMethod
org.teleal.cling.transport.impl.apache.StreamClientImpl$4 -> org.teleal.cling.transport.impl.apache.StreamClientImpl$4:
    org.teleal.cling.transport.impl.apache.StreamClientImpl this$0 -> this$0
    org.teleal.cling.model.message.StreamResponseMessage handleResponse(org.apache.http.HttpResponse) -> handleResponse
    java.lang.Object handleResponse(org.apache.http.HttpResponse) -> handleResponse
org.teleal.cling.transport.impl.apache.StreamClientImpl$5 -> org.teleal.cling.transport.impl.apache.StreamClientImpl$5:
    int[] $SwitchMap$org$teleal$cling$model$message$UpnpRequest$Method -> $SwitchMap$org$teleal$cling$model$message$UpnpRequest$Method
org.teleal.cling.transport.impl.apache.StreamServerConfigurationImpl -> org.teleal.cling.transport.impl.apache.StreamServerConfigurationImpl:
    int listenPort -> listenPort
    int dataWaitTimeoutSeconds -> dataWaitTimeoutSeconds
    int bufferSizeKilobytes -> bufferSizeKilobytes
    boolean staleConnectionCheck -> staleConnectionCheck
    boolean tcpNoDelay -> tcpNoDelay
    int tcpConnectionBacklog -> tcpConnectionBacklog
    int getListenPort() -> getListenPort
    void setListenPort(int) -> setListenPort
    int getDataWaitTimeoutSeconds() -> getDataWaitTimeoutSeconds
    void setDataWaitTimeoutSeconds(int) -> setDataWaitTimeoutSeconds
    int getBufferSizeKilobytes() -> getBufferSizeKilobytes
    void setBufferSizeKilobytes(int) -> setBufferSizeKilobytes
    boolean isStaleConnectionCheck() -> isStaleConnectionCheck
    void setStaleConnectionCheck(boolean) -> setStaleConnectionCheck
    boolean isTcpNoDelay() -> isTcpNoDelay
    void setTcpNoDelay(boolean) -> setTcpNoDelay
    int getTcpConnectionBacklog() -> getTcpConnectionBacklog
    void setTcpConnectionBacklog(int) -> setTcpConnectionBacklog
org.teleal.cling.transport.impl.apache.StreamServerImpl -> org.teleal.cling.transport.impl.apache.StreamServerImpl:
    java.util.logging.Logger log -> log
    org.teleal.cling.transport.impl.apache.StreamServerConfigurationImpl configuration -> configuration
    org.teleal.cling.transport.Router router -> router
    java.net.ServerSocket serverSocket -> serverSocket
    org.apache.http.params.HttpParams globalParams -> globalParams
    boolean stopped -> stopped
    org.teleal.cling.transport.impl.apache.StreamServerConfigurationImpl getConfiguration() -> getConfiguration
    void init(java.net.InetAddress,org.teleal.cling.transport.Router) -> init
    int getPort() -> getPort
    void stop() -> stop
    void run() -> run
    org.teleal.cling.transport.spi.StreamServerConfiguration getConfiguration() -> getConfiguration
org.teleal.cling.transport.impl.apache.StreamServerImpl$1 -> org.teleal.cling.transport.impl.apache.StreamServerImpl$1:
    org.teleal.cling.transport.impl.apache.StreamServerImpl this$0 -> this$0
    org.apache.http.HttpRequestFactory createHttpRequestFactory() -> createHttpRequestFactory
org.teleal.cling.transport.impl.apache.UpnpHttpRequestFactory -> org.teleal.cling.transport.impl.apache.UpnpHttpRequestFactory:
    java.lang.String[] BASIC -> BASIC
    java.lang.String[] WITH_ENTITY -> WITH_ENTITY
    boolean isOneOf(java.lang.String[],java.lang.String) -> isOneOf
    org.apache.http.HttpRequest newHttpRequest(org.apache.http.RequestLine) -> newHttpRequest
    org.apache.http.HttpRequest newHttpRequest(java.lang.String,java.lang.String) -> newHttpRequest
org.teleal.cling.transport.spi.DatagramIO -> org.teleal.cling.transport.spi.DatagramIO:
    void init(java.net.InetAddress,org.teleal.cling.transport.Router,org.teleal.cling.transport.spi.DatagramProcessor) -> init
    void stop() -> stop
    org.teleal.cling.transport.spi.DatagramIOConfiguration getConfiguration() -> getConfiguration
    void send(org.teleal.cling.model.message.OutgoingDatagramMessage) -> send
    void send(java.net.DatagramPacket) -> send
org.teleal.cling.transport.spi.DatagramIOConfiguration -> org.teleal.cling.transport.spi.DatagramIOConfiguration:
    int getTimeToLive() -> getTimeToLive
    int getMaxDatagramBytes() -> getMaxDatagramBytes
org.teleal.cling.transport.spi.DatagramProcessor -> org.teleal.cling.transport.spi.DatagramProcessor:
    org.teleal.cling.model.message.IncomingDatagramMessage read(java.net.InetAddress,java.net.DatagramPacket) -> read
    java.net.DatagramPacket write(org.teleal.cling.model.message.OutgoingDatagramMessage) -> write
org.teleal.cling.transport.spi.GENAEventProcessor -> org.teleal.cling.transport.spi.GENAEventProcessor:
    void writeBody(org.teleal.cling.model.message.gena.OutgoingEventRequestMessage) -> writeBody
    void readBody(org.teleal.cling.model.message.gena.IncomingEventRequestMessage) -> readBody
org.teleal.cling.transport.spi.InitializationException -> org.teleal.cling.transport.spi.InitializationException:
org.teleal.cling.transport.spi.MulticastReceiver -> org.teleal.cling.transport.spi.MulticastReceiver:
    void init(java.net.NetworkInterface,org.teleal.cling.transport.Router,org.teleal.cling.transport.spi.DatagramProcessor) -> init
    void stop() -> stop
    org.teleal.cling.transport.spi.MulticastReceiverConfiguration getConfiguration() -> getConfiguration
org.teleal.cling.transport.spi.MulticastReceiverConfiguration -> org.teleal.cling.transport.spi.MulticastReceiverConfiguration:
    java.net.InetAddress getGroup() -> getGroup
    int getPort() -> getPort
    int getMaxDatagramBytes() -> getMaxDatagramBytes
org.teleal.cling.transport.spi.NetworkAddressFactory -> org.teleal.cling.transport.spi.NetworkAddressFactory:
    java.lang.String SYSTEM_PROPERTY_NET_IFACES -> SYSTEM_PROPERTY_NET_IFACES
    java.lang.String SYSTEM_PROPERTY_NET_ADDRESSES -> SYSTEM_PROPERTY_NET_ADDRESSES
    java.net.InetAddress getMulticastGroup() -> getMulticastGroup
    int getMulticastPort() -> getMulticastPort
    int getStreamListenPort() -> getStreamListenPort
    java.net.NetworkInterface[] getNetworkInterfaces() -> getNetworkInterfaces
    java.net.InetAddress[] getBindAddresses() -> getBindAddresses
    byte[] getHardwareAddress(java.net.InetAddress) -> getHardwareAddress
    java.net.InetAddress getBroadcastAddress(java.net.InetAddress) -> getBroadcastAddress
    java.net.InetAddress getLocalAddress(java.net.NetworkInterface,boolean,java.net.InetAddress) -> getLocalAddress
org.teleal.cling.transport.spi.SOAPActionProcessor -> org.teleal.cling.transport.spi.SOAPActionProcessor:
    void writeBody(org.teleal.cling.model.message.control.ActionRequestMessage,org.teleal.cling.model.action.ActionInvocation) -> writeBody
    void writeBody(org.teleal.cling.model.message.control.ActionResponseMessage,org.teleal.cling.model.action.ActionInvocation) -> writeBody
    void readBody(org.teleal.cling.model.message.control.ActionRequestMessage,org.teleal.cling.model.action.ActionInvocation) -> readBody
    void readBody(org.teleal.cling.model.message.control.ActionResponseMessage,org.teleal.cling.model.action.ActionInvocation) -> readBody
org.teleal.cling.transport.spi.StreamClient -> org.teleal.cling.transport.spi.StreamClient:
    org.teleal.cling.model.message.StreamResponseMessage sendRequest(org.teleal.cling.model.message.StreamRequestMessage) -> sendRequest
    void stop() -> stop
    org.teleal.cling.transport.spi.StreamClientConfiguration getConfiguration() -> getConfiguration
org.teleal.cling.transport.spi.StreamClientConfiguration -> org.teleal.cling.transport.spi.StreamClientConfiguration:
    java.lang.String getUserAgentValue(int,int) -> getUserAgentValue
org.teleal.cling.transport.spi.StreamServer -> org.teleal.cling.transport.spi.StreamServer:
    void init(java.net.InetAddress,org.teleal.cling.transport.Router) -> init
    int getPort() -> getPort
    void stop() -> stop
    org.teleal.cling.transport.spi.StreamServerConfiguration getConfiguration() -> getConfiguration
org.teleal.cling.transport.spi.StreamServerConfiguration -> org.teleal.cling.transport.spi.StreamServerConfiguration:
    int getListenPort() -> getListenPort
org.teleal.cling.transport.spi.UnsupportedDataException -> org.teleal.cling.transport.spi.UnsupportedDataException:
org.teleal.cling.transport.spi.UpnpStream -> org.teleal.cling.transport.spi.UpnpStream:
    java.util.logging.Logger log -> log
    org.teleal.cling.protocol.ProtocolFactory protocolFactory -> protocolFactory
    org.teleal.cling.protocol.ReceivingSync syncProtocol -> syncProtocol
    org.teleal.cling.protocol.ProtocolFactory getProtocolFactory() -> getProtocolFactory
    org.teleal.cling.model.message.StreamResponseMessage process(org.teleal.cling.model.message.StreamRequestMessage) -> process
    void responseSent(org.teleal.cling.model.message.StreamResponseMessage) -> responseSent
    void responseException(java.lang.Throwable) -> responseException
    java.lang.String toString() -> toString
org.teleal.common.http.Headers -> org.teleal.a.a.a:
    byte CR -> CR
    byte LF -> LF
    java.util.Map map -> map
    int size() -> size
    boolean isEmpty() -> isEmpty
    boolean containsKey(java.lang.Object) -> containsKey
    boolean containsValue(java.lang.Object) -> containsValue
    java.util.List get(java.lang.Object) -> get
    java.util.List put(java.lang.String,java.util.List) -> put
    java.util.List remove(java.lang.Object) -> remove
    void putAll(java.util.Map) -> putAll
    void clear() -> clear
    java.util.Set keySet() -> keySet
    java.util.Collection values() -> values
    java.util.Set entrySet() -> entrySet
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String getFirstHeader(java.lang.String) -> getFirstHeader
    void add(java.lang.String,java.lang.String) -> add
    void set(java.lang.String,java.lang.String) -> set
    java.lang.String normalize(java.lang.String) -> normalize
    java.lang.String readLine(java.io.ByteArrayInputStream) -> readLine
    java.lang.String[] splitHeader(java.lang.String) -> splitHeader
    int findNonWhitespace(java.lang.String,int) -> findNonWhitespace
    int findEndOfString(java.lang.String) -> findEndOfString
    java.lang.String toString() -> toString
    java.lang.Object remove(java.lang.Object) -> remove
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    java.lang.Object get(java.lang.Object) -> get
org.teleal.common.http.Query -> org.teleal.a.a.b:
    java.lang.String qs -> a
    java.util.Map parameters -> b
    java.lang.String get(java.lang.String) -> a
    java.lang.String toString() -> toString
org.teleal.common.io.IO -> org.teleal.a.b.a:
    java.lang.String LINE_SEPARATOR -> a
    byte[] readBytes(java.io.InputStream) -> a
    byte[] readBytes(java.io.File) -> a
    void writeBytes(java.io.OutputStream,byte[]) -> a
    void writeUTF8(java.io.OutputStream,java.lang.String) -> a
    java.lang.String readLines(java.io.InputStream) -> b
    long copyLarge(java.io.InputStream,java.io.OutputStream) -> a
org.teleal.common.logging.LoggingUtil -> org.teleal.a.c.a:
    void resetRootHandler(java.util.logging.Handler[]) -> a
org.teleal.common.logging.SystemOutLoggingHandler -> org.teleal.a.c.b:
    void close() -> close
    void publish(java.util.logging.LogRecord) -> publish
org.teleal.common.logging.SystemOutLoggingHandler$SimpleFormatter -> org.teleal.a.c.c:
    java.lang.String format(java.util.logging.LogRecord) -> format
    java.lang.String pad(java.lang.String,int) -> a
org.teleal.common.statemachine.StateMachine -> org.teleal.a.d.a:
    java.lang.Object getCurrentState() -> a
org.teleal.common.statemachine.StateMachineBuilder -> org.teleal.a.d.b:
    org.teleal.common.statemachine.StateMachine build(java.lang.Class,java.lang.Class,java.lang.Class[],java.lang.Object[]) -> a
org.teleal.common.statemachine.StateMachineInvocationHandler -> org.teleal.a.d.c:
    java.util.logging.Logger log -> d
    java.lang.Class initialStateClass -> a
    java.util.Map stateObjects -> b
    java.lang.Object currentState -> c
    java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[]) -> invoke
    java.lang.reflect.Method getMethodOfCurrentState(java.lang.reflect.Method) -> a
    void invokeEntryMethod(java.lang.Object) -> a
    void invokeExitMethod(java.lang.Object) -> b
org.teleal.common.statemachine.States -> org.teleal.a.d.d:
    java.lang.Class[] value() -> a
org.teleal.common.statemachine.TransitionException -> org.teleal.a.d.e:
org.teleal.common.swingfwk.AbstractController -> org.teleal.a.e.a:
    java.util.logging.Logger log -> log
    java.awt.Container view -> view
    org.teleal.common.swingfwk.Controller parentController -> parentController
    java.util.List subControllers -> subControllers
    java.util.Map actions -> actions
    java.util.Map eventListeners -> eventListeners
    java.awt.Container getView() -> getView
    org.teleal.common.swingfwk.Controller getParentController() -> getParentController
    java.util.List getSubControllers() -> getSubControllers
    void dispose() -> dispose
    void registerAction(javax.swing.AbstractButton,org.teleal.common.swingfwk.DefaultAction) -> registerAction
    void registerAction(javax.swing.AbstractButton,java.lang.String,org.teleal.common.swingfwk.DefaultAction) -> registerAction
    void deregisterAction(java.lang.String) -> deregisterAction
    void registerEventListener(java.lang.Class,org.teleal.common.swingfwk.EventListener) -> registerEventListener
    void fireEvent(org.teleal.common.swingfwk.Event) -> fireEvent
    void fireEventGlobal(org.teleal.common.swingfwk.Event) -> fireEventGlobal
    void fireEvent(org.teleal.common.swingfwk.Event,boolean) -> fireEvent
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
    void preActionExecute() -> preActionExecute
    void postActionExecute() -> postActionExecute
    void failedActionExecute() -> failedActionExecute
    void finalActionExecute() -> finalActionExecute
    void windowClosing(java.awt.event.WindowEvent) -> windowClosing
    void windowOpened(java.awt.event.WindowEvent) -> windowOpened
    void windowClosed(java.awt.event.WindowEvent) -> windowClosed
    void windowIconified(java.awt.event.WindowEvent) -> windowIconified
    void windowDeiconified(java.awt.event.WindowEvent) -> windowDeiconified
    void windowActivated(java.awt.event.WindowEvent) -> windowActivated
    void windowDeactivated(java.awt.event.WindowEvent) -> windowDeactivated
org.teleal.common.swingfwk.Application -> org.teleal.a.e.b:
    java.awt.Window center(java.awt.Window) -> a
    java.awt.Window center(java.awt.Window,java.awt.Window) -> a
    javax.swing.ImageIcon createImageIcon(java.lang.Class,java.lang.String) -> a
org.teleal.common.swingfwk.Controller -> org.teleal.a.e.c:
    java.awt.Container getView() -> getView
    java.util.List getSubControllers() -> getSubControllers
    void dispose() -> dispose
    void fireEvent(org.teleal.common.swingfwk.Event,boolean) -> fireEvent
org.teleal.common.swingfwk.DefaultAction -> org.teleal.a.e.d:
org.teleal.common.swingfwk.DefaultEvent -> org.teleal.a.e.e:
    java.lang.Object payload -> payload
    java.util.Set firedInControllers -> firedInControllers
    java.lang.Object getPayload() -> getPayload
    void setPayload(java.lang.Object) -> setPayload
    void addFiredInController(org.teleal.common.swingfwk.Controller) -> addFiredInController
    boolean alreadyFired(org.teleal.common.swingfwk.Controller) -> alreadyFired
org.teleal.common.swingfwk.Event -> org.teleal.a.e.f:
    void addFiredInController(org.teleal.common.swingfwk.Controller) -> addFiredInController
    boolean alreadyFired(org.teleal.common.swingfwk.Controller) -> alreadyFired
org.teleal.common.swingfwk.EventListener -> org.teleal.a.e.g:
org.teleal.common.swingfwk.logging.LogCategory -> org.teleal.a.e.a.a:
    java.lang.String name -> a
    java.util.List groups -> b
    java.lang.String getName() -> a
    java.util.List getGroups() -> b
org.teleal.common.swingfwk.logging.LogCategory$Group -> org.teleal.a.e.a.b:
    java.lang.String name -> a
    java.util.List loggerLevels -> b
    java.util.List previousLevels -> c
    boolean enabled -> d
    java.lang.String getName() -> a
    boolean isEnabled() -> b
org.teleal.common.swingfwk.logging.LogCategory$LoggerLevel -> org.teleal.a.e.a.c:
    java.lang.String logger -> a
    java.util.logging.Level level -> b
org.teleal.common.swingfwk.logging.LogCategorySelector -> org.teleal.a.e.a.d:
    javax.swing.JPanel mainPanel -> a
    void addLogCategories(java.util.List) -> a
    void addLoggerGroups(org.teleal.common.swingfwk.logging.LogCategory,javax.swing.JPanel) -> a
org.teleal.common.swingfwk.logging.LogCategorySelector$1 -> org.teleal.a.e.a.e:
    org.teleal.common.swingfwk.logging.LogCategory$Group val$group -> a
    org.teleal.common.swingfwk.logging.LogCategorySelector this$0 -> b
org.teleal.common.swingfwk.logging.LogCategorySelector$2 -> org.teleal.a.e.a.f:
    org.teleal.common.swingfwk.logging.LogCategory val$logCategory -> a
    javax.swing.JPanel val$categoryPanel -> b
    org.teleal.common.swingfwk.logging.LogCategorySelector this$0 -> c
org.teleal.common.swingfwk.logging.LogCategorySelector$3 -> org.teleal.a.e.a.g:
    org.teleal.common.swingfwk.logging.LogCategory val$logCategory -> a
    javax.swing.JPanel val$categoryPanel -> b
    org.teleal.common.swingfwk.logging.LogCategorySelector this$0 -> c
org.teleal.common.swingfwk.logging.LogController -> org.teleal.a.e.a.h:
    org.teleal.common.swingfwk.logging.LogCategorySelector logCategorySelector -> logCategorySelector
    javax.swing.JTable logTable -> logTable
    org.teleal.common.swingfwk.logging.LogTableModel logTableModel -> logTableModel
    javax.swing.JToolBar toolBar -> toolBar
    javax.swing.JButton configureButton -> configureButton
    javax.swing.JButton clearButton -> clearButton
    javax.swing.JButton copyButton -> copyButton
    javax.swing.JButton expandButton -> expandButton
    javax.swing.JButton pauseButton -> pauseButton
    javax.swing.JLabel pauseLabel -> pauseLabel
    javax.swing.JComboBox expirationComboBox -> expirationComboBox
    void pushMessage(org.teleal.common.swingfwk.logging.LogMessage) -> pushMessage
    void adjustTableUI() -> adjustTableUI
    void initializeToolBar(org.teleal.common.swingfwk.logging.LogController$Expiration) -> initializeToolBar
    java.util.List getSelectedMessages() -> getSelectedMessages
    int getExpandMessageCharacterLimit() -> getExpandMessageCharacterLimit
    org.teleal.common.swingfwk.logging.LogTableModel getLogTableModel() -> getLogTableModel
    javax.swing.JButton createConfigureButton() -> createConfigureButton
    javax.swing.JButton createClearButton() -> createClearButton
    javax.swing.JButton createCopyButton() -> createCopyButton
    javax.swing.JButton createExpandButton() -> createExpandButton
    javax.swing.JButton createPauseButton() -> createPauseButton
    javax.swing.ImageIcon getWarnErrorIcon() -> getWarnErrorIcon
    javax.swing.ImageIcon getDebugIcon() -> getDebugIcon
    javax.swing.ImageIcon getTraceIcon() -> getTraceIcon
    javax.swing.ImageIcon getInfoIcon() -> getInfoIcon
    void expand(org.teleal.common.swingfwk.logging.LogMessage) -> expand
    java.awt.Frame getParentWindow() -> getParentWindow
    javax.swing.JTable access$000(org.teleal.common.swingfwk.logging.LogController) -> access$000
    javax.swing.JButton access$100(org.teleal.common.swingfwk.logging.LogController) -> access$100
    javax.swing.JButton access$200(org.teleal.common.swingfwk.logging.LogController) -> access$200
    org.teleal.common.swingfwk.logging.LogTableModel access$300(org.teleal.common.swingfwk.logging.LogController) -> access$300
    org.teleal.common.swingfwk.logging.LogCategorySelector access$400(org.teleal.common.swingfwk.logging.LogController) -> access$400
    javax.swing.JLabel access$500(org.teleal.common.swingfwk.logging.LogController) -> access$500
org.teleal.common.swingfwk.logging.LogController$1 -> org.teleal.a.e.a.i:
    org.teleal.common.swingfwk.logging.LogController this$0 -> a
org.teleal.common.swingfwk.logging.LogController$2 -> org.teleal.a.e.a.j:
    org.teleal.common.swingfwk.logging.LogController this$0 -> a
org.teleal.common.swingfwk.logging.LogController$3 -> org.teleal.a.e.a.k:
    org.teleal.common.swingfwk.logging.LogMessage val$message -> a
    org.teleal.common.swingfwk.logging.LogController this$0 -> b
    void run() -> run
org.teleal.common.swingfwk.logging.LogController$4 -> org.teleal.a.e.a.l:
    org.teleal.common.swingfwk.logging.LogController this$0 -> a
org.teleal.common.swingfwk.logging.LogController$5 -> org.teleal.a.e.a.m:
    org.teleal.common.swingfwk.logging.LogController this$0 -> a
org.teleal.common.swingfwk.logging.LogController$6 -> org.teleal.a.e.a.n:
    org.teleal.common.swingfwk.logging.LogController this$0 -> a
org.teleal.common.swingfwk.logging.LogController$7 -> org.teleal.a.e.a.o:
    org.teleal.common.swingfwk.logging.LogController this$0 -> a
org.teleal.common.swingfwk.logging.LogController$8 -> org.teleal.a.e.a.p:
    org.teleal.common.swingfwk.logging.LogController this$0 -> a
org.teleal.common.swingfwk.logging.LogController$9 -> org.teleal.a.e.a.q:
    org.teleal.common.swingfwk.logging.LogController this$0 -> a
org.teleal.common.swingfwk.logging.LogController$Expiration -> org.teleal.a.e.a.r:
    org.teleal.common.swingfwk.logging.LogController$Expiration TEN_SECONDS -> a
    org.teleal.common.swingfwk.logging.LogController$Expiration SIXTY_SECONDS -> b
    org.teleal.common.swingfwk.logging.LogController$Expiration FIVE_MINUTES -> c
    org.teleal.common.swingfwk.logging.LogController$Expiration NEVER -> d
    int seconds -> e
    java.lang.String label -> f
    org.teleal.common.swingfwk.logging.LogController$Expiration[] $VALUES -> g
    org.teleal.common.swingfwk.logging.LogController$Expiration[] values() -> values
    org.teleal.common.swingfwk.logging.LogController$Expiration valueOf(java.lang.String) -> valueOf
    int getSeconds() -> a
    java.lang.String toString() -> toString
org.teleal.common.swingfwk.logging.LogMessage -> org.teleal.a.e.a.s:
    java.util.logging.Level level -> a
    java.lang.Long createdOn -> b
    java.lang.String thread -> c
    java.lang.String source -> d
    java.lang.String message -> e
    java.lang.Long getCreatedOn() -> a
    java.lang.String getMessage() -> b
    java.lang.String toString() -> toString
org.teleal.common.swingfwk.logging.LogTableCellRenderer -> org.teleal.a.e.a.t:
    java.text.SimpleDateFormat dateFormat -> b
org.teleal.common.swingfwk.logging.LogTableModel -> org.teleal.a.e.a.u:
    int maxAgeSeconds -> a
    boolean paused -> b
    java.util.List messages -> c
    boolean isPaused() -> a
    void pushMessage(org.teleal.common.swingfwk.logging.LogMessage) -> a
    java.lang.Object getValueAt$693fec3(int) -> a
    int getRowCount() -> b
org.teleal.common.swingfwk.logging.LoggingHandler -> org.teleal.a.e.a.v:
    int sourcePathElements -> sourcePathElements
    void publish(java.util.logging.LogRecord) -> publish
    void flush() -> flush
    void close() -> close
    java.lang.String getSource(java.util.logging.LogRecord) -> getSource
    void log(org.teleal.common.swingfwk.logging.LogMessage) -> log
org.teleal.common.util.Base64Coder -> org.teleal.a.f.a:
    char[] map1 -> a
    byte[] map2 -> b
    char[] encode(byte[]) -> a
    byte[] decode(java.lang.String) -> a
org.teleal.common.util.ByteArray -> org.teleal.a.f.b:
    byte[] toPrimitive(java.lang.Byte[]) -> a
    java.lang.Byte[] toWrapper(byte[]) -> a
org.teleal.common.util.Exceptions -> org.teleal.a.f.c:
    java.lang.Throwable unwrap(java.lang.Throwable) -> a
org.teleal.common.util.HexBin -> org.teleal.a.f.d:
    byte[] hexNumberTable -> a
    byte[] lookUpHexAlphabet -> b
    boolean isHex(byte) -> a
    java.lang.String bytesToString(byte[]) -> a
    java.lang.String bytesToString(byte[],java.lang.String) -> a
    byte[] stringToBytes(java.lang.String) -> a
    byte[] stringToBytes(java.lang.String,java.lang.String) -> a
    byte[] encode(byte[]) -> b
    byte[] decode(byte[]) -> c
org.teleal.common.util.MimeType -> org.teleal.a.f.e:
    java.lang.String type -> a
    java.lang.String subtype -> b
    java.util.Map parameters -> c
    java.lang.String getType() -> a
    java.lang.String getSubtype() -> b
    java.util.Map getParameters() -> c
    org.teleal.common.util.MimeType valueOf(java.lang.String) -> a
    int readParamsIntoMap(java.util.Map,java.lang.String,int) -> a
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
org.teleal.common.util.MimeType$1 -> org.teleal.a.f.f:
    org.teleal.common.util.MimeType this$0 -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
org.teleal.common.util.OS -> org.teleal.a.f.g:
    boolean checkForLinux() -> a
    boolean checkForPresence(java.lang.String,java.lang.String) -> a
org.teleal.common.util.Reflections -> org.teleal.a.f.h:
    java.lang.Object invoke(java.lang.reflect.Method,java.lang.Object,java.lang.Object[]) -> a
    java.lang.Object get(java.lang.reflect.Field,java.lang.Object) -> a
    java.lang.reflect.Method getMethod(java.lang.Class,java.lang.String) -> a
    java.lang.String getMethodPropertyName(java.lang.String) -> a
    java.lang.reflect.Method getGetterMethod(java.lang.Class,java.lang.String) -> b
    java.util.List getMethods(java.lang.Class,java.lang.Class) -> a
    java.lang.reflect.Field getField(java.lang.Class,java.lang.String) -> c
    java.util.List getFields(java.lang.Class,java.lang.Class) -> b
    java.util.List getTypeArguments(java.lang.Class,java.lang.Class) -> c
    java.lang.Class getClass(java.lang.reflect.Type) -> a
    java.lang.String toString(java.lang.reflect.Member) -> a
    java.lang.String toClassNameString(java.lang.String,java.lang.Object[]) -> a
    java.lang.String decapitalize(java.lang.String) -> b
org.teleal.common.util.URIUtil -> org.teleal.a.f.i:
    java.util.BitSet GEN_DELIMS -> a
    java.util.BitSet SUB_DELIMS -> b
    java.util.BitSet RESERVED -> c
    java.util.BitSet LOW_ALPHA -> d
    java.util.BitSet UP_ALPHA -> e
    java.util.BitSet ALPHA -> f
    java.util.BitSet DIGIT -> g
    java.util.BitSet ALPHANUM -> h
    java.util.BitSet UNRESERVED -> i
    java.util.BitSet PCHAR -> j
    java.util.BitSet PATH_SEGMENT -> k
    java.util.BitSet PATH_PARAM_NAME -> l
    java.util.BitSet PATH_PARAM_VALUE -> m
    java.util.BitSet QUERY -> n
    java.util.BitSet FRAGMENT -> o
    boolean $assertionsDisabled -> p
    java.net.URI createAbsoluteURI(java.net.URI,java.net.URI) -> a
    java.net.URL createAbsoluteURL(java.net.URL,java.net.URI) -> a
    java.net.URL createAbsoluteURL(java.net.InetAddress,int,java.net.URI) -> a
    java.net.URL toURL(java.net.URI) -> a
    java.net.URI toURI(java.net.URL) -> a
    java.lang.String percentEncode(java.lang.String) -> a
    java.lang.String percentDecode(java.lang.String) -> b
    java.lang.String encodePathSegment(java.lang.String) -> c
org.teleal.common.xhtml.Body -> org.teleal.a.g.a:
org.teleal.common.xhtml.Root -> org.teleal.a.g.b:
    org.teleal.common.xhtml.Body getBody() -> a
org.teleal.common.xhtml.Root$2 -> org.teleal.a.g.c:
    org.teleal.common.xhtml.Root this$0 -> a
    org.teleal.common.xml.DOMElement build(org.w3c.dom.Element) -> build
org.teleal.common.xhtml.XHTML -> org.teleal.a.g.d:
    javax.xml.transform.Source[] createSchemaSources() -> a
    org.teleal.common.xhtml.Root createRoot(javax.xml.xpath.XPath,org.teleal.common.xhtml.XHTML$ELEMENT) -> a
    java.lang.String getRootElementNamespace() -> getRootElementNamespace
    org.teleal.common.xhtml.Root getRoot(javax.xml.xpath.XPath) -> a
    org.teleal.common.xml.DOM copy() -> copy
    org.teleal.common.xml.DOMElement getRoot(javax.xml.xpath.XPath) -> getRoot
org.teleal.common.xhtml.XHTML$ATTR -> org.teleal.a.g.e:
    org.teleal.common.xhtml.XHTML$ATTR id -> a
    org.teleal.common.xhtml.XHTML$ATTR style -> b
    org.teleal.common.xhtml.XHTML$ATTR title -> c
    org.teleal.common.xhtml.XHTML$ATTR type -> d
    org.teleal.common.xhtml.XHTML$ATTR href -> e
    org.teleal.common.xhtml.XHTML$ATTR name -> f
    org.teleal.common.xhtml.XHTML$ATTR content -> g
    org.teleal.common.xhtml.XHTML$ATTR scheme -> h
    org.teleal.common.xhtml.XHTML$ATTR rel -> i
    org.teleal.common.xhtml.XHTML$ATTR rev -> j
    org.teleal.common.xhtml.XHTML$ATTR colspan -> k
    org.teleal.common.xhtml.XHTML$ATTR rowspan -> l
    org.teleal.common.xhtml.XHTML$ATTR src -> m
    org.teleal.common.xhtml.XHTML$ATTR alt -> n
    org.teleal.common.xhtml.XHTML$ATTR action -> o
    org.teleal.common.xhtml.XHTML$ATTR method -> p
    org.teleal.common.xhtml.XHTML$ATTR[] $VALUES -> q
    org.teleal.common.xhtml.XHTML$ATTR[] values() -> values
    org.teleal.common.xhtml.XHTML$ATTR valueOf(java.lang.String) -> valueOf
org.teleal.common.xhtml.XHTML$ELEMENT -> org.teleal.a.g.f:
    org.teleal.common.xhtml.XHTML$ELEMENT html -> a
    org.teleal.common.xhtml.XHTML$ELEMENT head -> b
    org.teleal.common.xhtml.XHTML$ELEMENT title -> c
    org.teleal.common.xhtml.XHTML$ELEMENT meta -> d
    org.teleal.common.xhtml.XHTML$ELEMENT link -> e
    org.teleal.common.xhtml.XHTML$ELEMENT script -> f
    org.teleal.common.xhtml.XHTML$ELEMENT style -> g
    org.teleal.common.xhtml.XHTML$ELEMENT body -> h
    org.teleal.common.xhtml.XHTML$ELEMENT div -> i
    org.teleal.common.xhtml.XHTML$ELEMENT span -> j
    org.teleal.common.xhtml.XHTML$ELEMENT p -> k
    org.teleal.common.xhtml.XHTML$ELEMENT object -> l
    org.teleal.common.xhtml.XHTML$ELEMENT a -> m
    org.teleal.common.xhtml.XHTML$ELEMENT img -> n
    org.teleal.common.xhtml.XHTML$ELEMENT pre -> o
    org.teleal.common.xhtml.XHTML$ELEMENT h1 -> p
    org.teleal.common.xhtml.XHTML$ELEMENT h2 -> q
    org.teleal.common.xhtml.XHTML$ELEMENT h3 -> r
    org.teleal.common.xhtml.XHTML$ELEMENT h4 -> s
    org.teleal.common.xhtml.XHTML$ELEMENT h5 -> t
    org.teleal.common.xhtml.XHTML$ELEMENT h6 -> u
    org.teleal.common.xhtml.XHTML$ELEMENT table -> v
    org.teleal.common.xhtml.XHTML$ELEMENT thead -> w
    org.teleal.common.xhtml.XHTML$ELEMENT tfoot -> x
    org.teleal.common.xhtml.XHTML$ELEMENT tbody -> y
    org.teleal.common.xhtml.XHTML$ELEMENT tr -> z
    org.teleal.common.xhtml.XHTML$ELEMENT th -> A
    org.teleal.common.xhtml.XHTML$ELEMENT td -> B
    org.teleal.common.xhtml.XHTML$ELEMENT ul -> C
    org.teleal.common.xhtml.XHTML$ELEMENT ol -> D
    org.teleal.common.xhtml.XHTML$ELEMENT li -> E
    org.teleal.common.xhtml.XHTML$ELEMENT dl -> F
    org.teleal.common.xhtml.XHTML$ELEMENT dt -> G
    org.teleal.common.xhtml.XHTML$ELEMENT dd -> H
    org.teleal.common.xhtml.XHTML$ELEMENT form -> I
    org.teleal.common.xhtml.XHTML$ELEMENT input -> J
    org.teleal.common.xhtml.XHTML$ELEMENT select -> K
    org.teleal.common.xhtml.XHTML$ELEMENT option -> L
    org.teleal.common.xhtml.XHTML$ELEMENT[] $VALUES -> M
    org.teleal.common.xhtml.XHTML$ELEMENT[] values() -> values
    org.teleal.common.xhtml.XHTML$ELEMENT valueOf(java.lang.String) -> valueOf
org.teleal.common.xhtml.XHTMLElement -> org.teleal.a.g.g:
    org.teleal.common.xml.DOMElement$Builder createParentBuilder(org.teleal.common.xml.DOMElement) -> createParentBuilder
    org.teleal.common.xml.DOMElement$ArrayBuilder createChildBuilder(org.teleal.common.xml.DOMElement) -> createChildBuilder
    java.lang.String prefix(java.lang.String) -> prefix
    org.teleal.common.xhtml.XHTMLElement createChild(org.teleal.common.xhtml.XHTML$ELEMENT) -> a
    org.teleal.common.xhtml.XHTMLElement setAttribute(org.teleal.common.xhtml.XHTML$ATTR,java.lang.String) -> a
    org.teleal.common.xhtml.XHTMLElement setId(java.lang.String) -> a
    org.teleal.common.xhtml.XHTMLElement setClasses(java.lang.String) -> b
    org.teleal.common.xhtml.XHTMLElement setContent(java.lang.String) -> c
    org.teleal.common.xhtml.XHTMLElement setAttribute(java.lang.String,java.lang.String) -> a
    org.teleal.common.xml.DOMElement setAttribute(java.lang.String,java.lang.String) -> setAttribute
    org.teleal.common.xml.DOMElement setContent(java.lang.String) -> setContent
org.teleal.common.xhtml.XHTMLElement$1 -> org.teleal.a.g.h:
    org.teleal.common.xhtml.XHTMLElement this$0 -> a
    org.teleal.common.xml.DOMElement build(org.w3c.dom.Element) -> build
org.teleal.common.xhtml.XHTMLElement$2 -> org.teleal.a.g.i:
    org.teleal.common.xhtml.XHTMLElement this$0 -> a
    org.teleal.common.xml.DOMElement[] newChildrenArray(int) -> newChildrenArray
    org.teleal.common.xml.DOMElement build(org.w3c.dom.Element) -> build
org.teleal.common.xhtml.XHTMLParser -> org.teleal.a.g.j:
    javax.xml.xpath.XPath createXPath() -> a
    org.teleal.common.xml.DOM createDOM(org.w3c.dom.Document) -> createDOM
org.teleal.common.xhtml.XHTMLParser$2 -> org.teleal.a.g.k:
    org.teleal.common.xhtml.XHTMLParser this$0 -> a
    java.lang.String getDefaultNamespaceURI() -> getDefaultNamespaceURI
org.teleal.common.xml.CatalogResourceResolver -> org.teleal.a.h.a:
    java.util.logging.Logger log -> a
    java.util.Map catalog -> b
    org.w3c.dom.ls.LSInput resolveResource(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> resolveResource
org.teleal.common.xml.CatalogResourceResolver$Input -> org.teleal.a.h.b:
    java.io.InputStream in -> a
    java.io.Reader getCharacterStream() -> getCharacterStream
    void setCharacterStream(java.io.Reader) -> setCharacterStream
    java.io.InputStream getByteStream() -> getByteStream
    void setByteStream(java.io.InputStream) -> setByteStream
    java.lang.String getStringData() -> getStringData
    void setStringData(java.lang.String) -> setStringData
    java.lang.String getSystemId() -> getSystemId
    void setSystemId(java.lang.String) -> setSystemId
    java.lang.String getPublicId() -> getPublicId
    void setPublicId(java.lang.String) -> setPublicId
    java.lang.String getBaseURI() -> getBaseURI
    void setBaseURI(java.lang.String) -> setBaseURI
    java.lang.String getEncoding() -> getEncoding
    void setEncoding(java.lang.String) -> setEncoding
    boolean getCertifiedText() -> getCertifiedText
    void setCertifiedText(boolean) -> setCertifiedText
org.teleal.common.xml.DOM -> org.teleal.a.h.c:
    java.net.URI XML_SCHEMA_NAMESPACE -> XML_SCHEMA_NAMESPACE
    java.lang.String CDATA_BEGIN -> CDATA_BEGIN
    java.lang.String CDATA_END -> CDATA_END
    org.w3c.dom.Document dom -> dom
    org.w3c.dom.Document getW3CDocument() -> getW3CDocument
    org.w3c.dom.Element createRoot(java.lang.String) -> createRoot
    java.lang.String getRootElementNamespace() -> getRootElementNamespace
    org.teleal.common.xml.DOMElement getRoot(javax.xml.xpath.XPath) -> getRoot
    org.teleal.common.xml.DOM copy() -> copy
org.teleal.common.xml.DOMElement -> org.teleal.a.h.d:
    org.teleal.common.xml.DOMElement$Builder PARENT_BUILDER -> PARENT_BUILDER
    org.teleal.common.xml.DOMElement$ArrayBuilder CHILD_BUILDER -> CHILD_BUILDER
    javax.xml.xpath.XPath xpath -> xpath
    org.w3c.dom.Element element -> element
    org.w3c.dom.Element getW3CElement() -> getW3CElement
    java.lang.String getElementName() -> getElementName
    java.lang.String getContent() -> getContent
    org.teleal.common.xml.DOMElement setContent(java.lang.String) -> setContent
    java.lang.String getAttribute(java.lang.String) -> getAttribute
    org.teleal.common.xml.DOMElement setAttribute(java.lang.String,java.lang.String) -> setAttribute
    org.teleal.common.xml.DOMElement getParent() -> getParent
    org.teleal.common.xml.DOMElement[] getChildren() -> getChildren
    org.teleal.common.xml.DOMElement[] getChildren(java.lang.String) -> getChildren
    org.teleal.common.xml.DOMElement getRequiredChild(java.lang.String) -> getRequiredChild
    org.teleal.common.xml.DOMElement[] findChildren(java.lang.String) -> findChildren
    org.teleal.common.xml.DOMElement findChildWithIdentifier(java.lang.String) -> findChildWithIdentifier
    org.teleal.common.xml.DOMElement getFirstChild(java.lang.String) -> getFirstChild
    org.teleal.common.xml.DOMElement createChild(java.lang.String) -> createChild
    org.teleal.common.xml.DOMElement createChild(java.lang.String,java.lang.String) -> createChild
    org.teleal.common.xml.DOMElement appendChild(org.teleal.common.xml.DOMElement,boolean) -> appendChild
    org.teleal.common.xml.DOMElement replaceChild(org.teleal.common.xml.DOMElement,org.teleal.common.xml.DOMElement,boolean) -> replaceChild
    void replaceEqualChild(org.teleal.common.xml.DOMElement,java.lang.String) -> replaceEqualChild
    void removeChild(org.teleal.common.xml.DOMElement) -> removeChild
    void removeChildren() -> removeChildren
    org.teleal.common.xml.DOMElement adoptOrImport(org.w3c.dom.Document,org.teleal.common.xml.DOMElement,boolean) -> adoptOrImport
    org.teleal.common.xml.DOMElement$Builder createParentBuilder(org.teleal.common.xml.DOMElement) -> createParentBuilder
    org.teleal.common.xml.DOMElement$ArrayBuilder createChildBuilder(org.teleal.common.xml.DOMElement) -> createChildBuilder
    java.lang.String toSimpleXMLString() -> toSimpleXMLString
    java.lang.String toString() -> toString
    javax.xml.xpath.XPath getXpath() -> getXpath
    java.lang.String prefix(java.lang.String) -> prefix
    java.util.Collection getXPathParentElements(org.teleal.common.xml.DOMElement$Builder,java.lang.String) -> getXPathParentElements
    java.util.Collection getXPathChildElements(org.teleal.common.xml.DOMElement$Builder,java.lang.String) -> getXPathChildElements
    org.teleal.common.xml.DOMElement getXPathParentElement(org.teleal.common.xml.DOMElement$Builder,java.lang.String) -> getXPathParentElement
    org.teleal.common.xml.DOMElement getXPathChildElement(org.teleal.common.xml.DOMElement$Builder,java.lang.String) -> getXPathChildElement
    java.util.Collection getXPathElements(org.teleal.common.xml.DOMElement$Builder,java.lang.String) -> getXPathElements
    java.lang.String getXPathString(javax.xml.xpath.XPath,java.lang.String) -> getXPathString
    java.lang.Object getXPathResult(java.lang.String,javax.xml.namespace.QName) -> getXPathResult
    java.lang.Object getXPathResult(org.w3c.dom.Node,java.lang.String,javax.xml.namespace.QName) -> getXPathResult
org.teleal.common.xml.DOMElement$ArrayBuilder -> org.teleal.a.h.e:
    org.teleal.common.xml.DOMElement this$0 -> this$0
    org.teleal.common.xml.DOMElement[] newChildrenArray(int) -> newChildrenArray
    org.teleal.common.xml.DOMElement[] getChildElements() -> getChildElements
    org.teleal.common.xml.DOMElement[] getChildElements(java.lang.String) -> getChildElements
    org.teleal.common.xml.DOMElement[] buildArray(org.teleal.common.xml.DOMElement[]) -> buildArray
org.teleal.common.xml.DOMElement$Builder -> org.teleal.a.h.f:
    org.teleal.common.xml.DOMElement element -> element
    org.teleal.common.xml.DOMElement this$0 -> this$0
    org.teleal.common.xml.DOMElement build(org.w3c.dom.Element) -> build
    org.teleal.common.xml.DOMElement firstChildOrNull(java.lang.String) -> firstChildOrNull
org.teleal.common.xml.DOMParser -> org.teleal.a.h.g:
    java.util.logging.Logger log -> log
    java.net.URL XML_SCHEMA_RESOURCE -> XML_SCHEMA_RESOURCE
    javax.xml.transform.Source[] schemaSources -> schemaSources
    javax.xml.validation.Schema schema -> schema
    javax.xml.validation.Schema getSchema() -> getSchema
    org.teleal.common.xml.DOM createDOM(org.w3c.dom.Document) -> createDOM
    javax.xml.parsers.DocumentBuilderFactory createFactory(boolean) -> createFactory
    javax.xml.transform.Transformer createTransformer(java.lang.String,int,boolean) -> createTransformer
    org.teleal.common.xml.DOM createDocument() -> createDocument
    org.teleal.common.xml.DOM parse(java.net.URL) -> parse
    org.teleal.common.xml.DOM parse(java.lang.String) -> parse
    org.teleal.common.xml.DOM parse(java.io.File) -> parse
    org.teleal.common.xml.DOM parse(java.io.InputStream) -> parse
    org.teleal.common.xml.DOM parse(java.net.URL,boolean) -> parse
    org.teleal.common.xml.DOM parse(java.lang.String,boolean) -> parse
    org.teleal.common.xml.DOM parse(java.io.File,boolean) -> parse
    org.teleal.common.xml.DOM parse(java.io.InputStream,boolean) -> parse
    org.teleal.common.xml.DOM parse(org.xml.sax.InputSource,boolean) -> parse
    void validate(java.net.URL) -> validate
    void validate(java.lang.String) -> validate
    void validate(org.w3c.dom.Document) -> validate
    void validate(org.teleal.common.xml.DOM) -> validate
    void validate(javax.xml.transform.Source) -> validate
    javax.xml.xpath.XPathFactory createXPathFactory() -> createXPathFactory
    javax.xml.xpath.XPath createXPath(javax.xml.namespace.NamespaceContext) -> createXPath
    javax.xml.xpath.XPath createXPath(javax.xml.xpath.XPathFactory,javax.xml.namespace.NamespaceContext) -> createXPath
    java.lang.Object getXPathResult(org.teleal.common.xml.DOM,javax.xml.xpath.XPath,java.lang.String,javax.xml.namespace.QName) -> getXPathResult
    java.lang.Object getXPathResult(org.teleal.common.xml.DOMElement,javax.xml.xpath.XPath,java.lang.String,javax.xml.namespace.QName) -> getXPathResult
    java.lang.Object getXPathResult(org.w3c.dom.Node,javax.xml.xpath.XPath,java.lang.String,javax.xml.namespace.QName) -> getXPathResult
    java.lang.String print(org.teleal.common.xml.DOM) -> print
    java.lang.String print(org.teleal.common.xml.DOM,int) -> print
    java.lang.String print(org.teleal.common.xml.DOM,boolean) -> print
    java.lang.String print(org.teleal.common.xml.DOM,int,boolean) -> print
    java.lang.String print(org.w3c.dom.Document,int,boolean) -> print
    java.lang.String print(java.lang.String,int,boolean) -> print
    java.lang.String print(javax.xml.transform.Source,int,boolean) -> print
    java.lang.String printHTML(org.w3c.dom.Document) -> printHTML
    java.lang.String printHTML(org.w3c.dom.Document,int,boolean,boolean) -> printHTML
    void removeIgnorableWSNodes(org.w3c.dom.Element) -> removeIgnorableWSNodes
    boolean isIgnorableWSNode(org.w3c.dom.Node) -> isIgnorableWSNode
    void warning(org.xml.sax.SAXParseException) -> warning
    void error(org.xml.sax.SAXParseException) -> error
    void fatalError(org.xml.sax.SAXParseException) -> fatalError
    org.teleal.common.xml.ParserException unwrapException(java.lang.Exception) -> unwrapException
    org.xml.sax.InputSource resolveEntity(java.lang.String,java.lang.String) -> resolveEntity
    java.lang.String escape(java.lang.String) -> escape
    java.lang.String escape(java.lang.String,boolean,boolean) -> escape
    java.lang.String stripElements(java.lang.String) -> stripElements
    void accept(org.w3c.dom.Node,org.teleal.common.xml.DOMParser$NodeVisitor) -> accept
    java.lang.String wrap(java.lang.String,java.lang.String) -> wrap
    java.lang.String wrap(java.lang.String,java.lang.String,java.lang.String) -> wrap
org.teleal.common.xml.DOMParser$1 -> org.teleal.a.h.h:
    org.teleal.common.xml.DOMParser this$0 -> a
org.teleal.common.xml.DOMParser$2 -> org.teleal.a.h.i:
    org.teleal.common.xml.DOMParser this$0 -> a
    void visit(org.w3c.dom.Node) -> a
org.teleal.common.xml.DOMParser$NodeVisitor -> org.teleal.a.h.j:
    short nodeType -> a
    boolean $assertionsDisabled -> b
    boolean isHalted() -> a
    void visit(org.w3c.dom.Node) -> a
    short access$000(org.teleal.common.xml.DOMParser$NodeVisitor) -> a
org.teleal.common.xml.NamespaceContextMap -> org.teleal.a.h.k:
    java.lang.String getNamespaceURI(java.lang.String) -> getNamespaceURI
    java.lang.String getPrefix(java.lang.String) -> getPrefix
    java.util.Iterator getPrefixes(java.lang.String) -> getPrefixes
    java.lang.String getDefaultNamespaceURI() -> getDefaultNamespaceURI
org.teleal.common.xml.ParserException -> org.teleal.a.h.l:
org.teleal.common.xml.SAXParser -> org.teleal.a.h.m:
    java.util.logging.Logger log -> log
    java.net.URI XML_SCHEMA_NAMESPACE -> XML_SCHEMA_NAMESPACE
    java.net.URL XML_SCHEMA_RESOURCE -> XML_SCHEMA_RESOURCE
    org.xml.sax.XMLReader xr -> xr
    void setContentHandler(org.xml.sax.ContentHandler) -> setContentHandler
    org.xml.sax.XMLReader create() -> create
    javax.xml.validation.Schema createSchema(javax.xml.transform.Source[]) -> createSchema
    javax.xml.transform.Source[] getSchemaSources() -> getSchemaSources
    org.xml.sax.ErrorHandler getErrorHandler() -> getErrorHandler
    void parse(org.xml.sax.InputSource) -> parse
    java.util.logging.Logger access$000() -> access$000
org.teleal.common.xml.SAXParser$1 -> org.teleal.a.h.n:
    org.teleal.common.xml.SAXParser this$0 -> a
org.teleal.common.xml.SAXParser$Handler -> org.teleal.a.h.o:
    org.teleal.common.xml.SAXParser parser -> parser
    java.lang.Object instance -> instance
    org.teleal.common.xml.SAXParser$Handler parent -> parent
    java.lang.StringBuilder characters -> characters
    org.xml.sax.Attributes attributes -> attributes
    java.lang.Object getInstance() -> getInstance
    org.teleal.common.xml.SAXParser getParser() -> getParser
    org.teleal.common.xml.SAXParser$Handler getParent() -> getParent
    void switchToParent() -> switchToParent
    java.lang.String getCharacters() -> getCharacters
    void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes) -> startElement
    void characters(char[],int,int) -> characters
    void endElement(java.lang.String,java.lang.String,java.lang.String) -> endElement
    boolean isLastElement(java.lang.String,java.lang.String,java.lang.String) -> isLastElement
    org.xml.sax.Attributes getAttributes() -> getAttributes
org.teleal.common.xml.SAXParser$SimpleErrorHandler -> org.teleal.a.h.p:
    org.teleal.common.xml.SAXParser this$0 -> a
    void warning(org.xml.sax.SAXParseException) -> warning
    void error(org.xml.sax.SAXParseException) -> error
    void fatalError(org.xml.sax.SAXParseException) -> fatalError
org.vradio.R -> org.vradio.R:
org.vradio.R$anim -> org.vradio.R$anim:
    int buffanim -> buffanim
    int down -> down
    int invplayerani -> invplayerani
    int listani -> listani
    int listani_inv -> listani_inv
    int logoani -> logoani
    int playerani -> playerani
    int quiticker -> quiticker
    int ticker -> ticker
    int ticker_inv -> ticker_inv
    int waitani -> waitani
org.vradio.R$array -> org.vradio.R$array:
    int favarr -> favarr
    int favocom -> favocom
    int mon -> mon
    int searr -> searr
    int strar -> strar
org.vradio.R$attr -> org.vradio.R$attr:
org.vradio.R$color -> org.vradio.R$color:
    int black -> black
    int bluegrey -> bluegrey
    int bright_foreground_dark -> bright_foreground_dark
    int redgrey -> redgrey
    int rgray1 -> rgray1
    int rgray2 -> rgray2
    int rgray3 -> rgray3
    int translucent_dark -> translucent_dark
    int translucent_dark2 -> translucent_dark2
    int translucent_dark3 -> translucent_dark3
    int transp -> transp
    int white -> white
org.vradio.R$drawable -> org.vradio.R$drawable:
    int bg_glit_gold -> bg_glit_gold
    int bg_glit_purp -> bg_glit_purp
    int bg_grow_blue -> bg_grow_blue
    int bg_grow_green -> bg_grow_green
    int blackrose_1 -> blackrose_1
    int del -> del
    int delon -> delon
    int dotway_blu_1 -> dotway_blu_1
    int exit -> exit
    int fav -> fav
    int favon -> favon
    int icon -> icon
    int icontx -> icontx
    int like -> like
    int like_but -> like_but
    int likeon -> likeon
    int mainfield -> mainfield
    int men_search_ov -> men_search_ov
    int player_field -> player_field
    int player_left -> player_left
    int player_pause -> player_pause
    int player_pause_rec_g -> player_pause_rec_g
    int player_play -> player_play
    int player_play_rec_g -> player_play_rec_g
    int player_power -> player_power
    int player_quit_rec -> player_quit_rec
    int player_rec_off -> player_rec_off
    int player_rec_on -> player_rec_on
    int player_shop -> player_shop
    int speak -> speak
    int speakon -> speakon
    int star_but -> star_but
    int tab_fav -> tab_fav
    int tab_opt -> tab_opt
    int tab_rec -> tab_rec
    int tab_sea -> tab_sea
    int tab_str -> tab_str
    int tabon_fav -> tabon_fav
    int tabon_opt -> tabon_opt
    int tabon_rec -> tabon_rec
    int tabon_sea -> tabon_sea
    int tabon_str -> tabon_str
    int tabs_left -> tabs_left
    int tabs_right -> tabs_right
    int train_red_1 -> train_red_1
    int trope_ora_1 -> trope_ora_1
    int vra_welcome -> vra_welcome
    int wait_00 -> wait_00
    int wait_01 -> wait_01
    int wait_02 -> wait_02
    int wait_03 -> wait_03
    int wait_04 -> wait_04
    int wait_05 -> wait_05
    int wait_06 -> wait_06
    int wait_07 -> wait_07
    int wait_08 -> wait_08
    int wait_09 -> wait_09
    int wait_10 -> wait_10
    int wait_11 -> wait_11
    int wing_red_1 -> wing_red_1
org.vradio.R$id -> org.vradio.R$id:
    int arlayout -> arlayout
    int b1 -> b1
    int b2 -> b2
    int b3 -> b3
    int b4 -> b4
    int botn -> botn
    int butcanc -> butcanc
    int butok -> butok
    int button1 -> button1
    int button_w1 -> button_w1
    int buydialogtx -> buydialogtx
    int cachealways -> cachealways
    int cachecb2 -> cachecb2
    int cachenever -> cachenever
    int cacheonce -> cacheonce
    int cachetx -> cachetx
    int cb -> cb
    int cutx1 -> cutx1
    int cutx2 -> cutx2
    int httx -> httx
    int ibu -> ibu
    int ibuparent -> ibuparent
    int imib1 -> imib1
    int imib2 -> imib2
    int imib3 -> imib3
    int like_on -> like_on
    int lil -> lil
    int listparent -> listparent
    int listparentitem -> listparentitem
    int litx -> litx
    int ll -> ll
    int llnavi -> llnavi
    int mainlist -> mainlist
    int mobnetbu -> mobnetbu
    int mobshowagain -> mobshowagain
    int mobstabu -> mobstabu
    int mobtx -> mobtx
    int more_overlay -> more_overlay
    int netbu -> netbu
    int nix -> nix
    int pbgll -> pbgll
    int pdiaid -> pdiaid
    int pfield -> pfield
    int pwrap -> pwrap
    int qb1 -> qb1
    int qb2 -> qb2
    int qb3 -> qb3
    int sadib1 -> sadib1
    int sadib2 -> sadib2
    int sadib4 -> sadib4
    int save_del -> save_del
    int save_row_text1 -> save_row_text1
    int save_row_text2 -> save_row_text2
    int savecb -> savecb
    int scb -> scb
    int servcb -> servcb
    int setmocon -> setmocon
    int setskb1 -> setskb1
    int setskb12 -> setskb12
    int setskb13 -> setskb13
    int setskb15 -> setskb15
    int setskb2 -> setskb2
    int setskb3 -> setskb3
    int setskb4 -> setskb4
    int setskb5 -> setskb5
    int setskb6 -> setskb6
    int setskb7 -> setskb7
    int setskb8 -> setskb8
    int setskb9 -> setskb9
    int showagain -> showagain
    int speakers -> speakers
    int srowt -> srowt
    int srowt2 -> srowt2
    int stabu -> stabu
    int startplay -> startplay
    int statx -> statx
    int statx2 -> statx2
    int sv -> sv
    int text1 -> text1
    int text2 -> text2
    int text_bit -> text_bit
    int text_overlay -> text_overlay
    int titeltx -> titeltx
    int tl -> tl
    int totx -> totx
    int totxparent -> totxparent
    int urltx -> urltx
    int vparent -> vparent
    int waitani -> waitani
    int waitaniparent -> waitaniparent
org.vradio.R$layout -> org.vradio.R$layout:
    int buydialog -> buydialog
    int cachedialog -> cachedialog
    int check_row -> check_row
    int customurl -> customurl
    int cut -> cut
    int favdialog -> favdialog
    int fileplayer -> fileplayer
    int logodialog -> logodialog
    int main -> main
    int mobdialog -> mobdialog
    int netsetdialog -> netsetdialog
    int notes_row -> notes_row
    int playerdialog -> playerdialog
    int quitdialog -> quitdialog
    int save_row -> save_row
    int savedialog -> savedialog
    int settings -> settings
    int slist -> slist
    int srow -> srow
    int startdialog -> startdialog
    int streamplayer -> streamplayer
    int toast -> toast
    int widget -> widget
org.vradio.R$string -> org.vradio.R$string:
    int add1 -> add1
    int addfavorites -> addfavorites
    int app_name -> app_name
    int bitrate -> bitrate
    int body -> body
    int buffering -> buffering
    int buytx1 -> buytx1
    int buytx2 -> buytx2
    int cachetx1 -> cachetx1
    int cachetx2 -> cachetx2
    int cachetx3 -> cachetx3
    int cachetx4 -> cachetx4
    int cachetx5 -> cachetx5
    int cancel -> cancel
    int cate -> cate
    int clock1 -> clock1
    int clock2 -> clock2
    int clock3 -> clock3
    int confirm -> confirm
    int control -> control
    int custurlcom -> custurlcom
    int custurlcom1 -> custurlcom1
    int custurlcom2 -> custurlcom2
    int custurlcom3 -> custurlcom3
    int custurlcom4 -> custurlcom4
    int custurlcom5 -> custurlcom5
    int custurlcom6 -> custurlcom6
    int custurlcom7 -> custurlcom7
    int custurlcom8 -> custurlcom8
    int custurltx1 -> custurltx1
    int custurltx2 -> custurltx2
    int custurltxt -> custurltxt
    int favorites -> favorites
    int favotx -> favotx
    int hello -> hello
    int helptext -> helptext
    int helptext2 -> helptext2
    int helptext3 -> helptext3
    int helptext4 -> helptext4
    int helptext5 -> helptext5
    int http_inf -> http_inf
    int http_infb -> http_infb
    int http_tx -> http_tx
    int listi_name -> listi_name
    int memlo1 -> memlo1
    int memlo2 -> memlo2
    int menu_help -> menu_help
    int menu_play -> menu_play
    int menu_stop -> menu_stop
    int mocon1 -> mocon1
    int mocon2 -> mocon2
    int mocon3 -> mocon3
    int nocon -> nocon
    int nocon2 -> nocon2
    int nocon3 -> nocon3
    int ok -> ok
    int parsedat -> parsedat
    int parsedat2 -> parsedat2
    int play -> play
    int quit1 -> quit1
    int quit2 -> quit2
    int quit3 -> quit3
    int recmp3 -> recmp3
    int remfavorites -> remfavorites
    int save -> save
    int save_cache -> save_cache
    int save_cb -> save_cb
    int save_del -> save_del
    int save_tx -> save_tx
    int save_tx2 -> save_tx2
    int save_tx3 -> save_tx3
    int save_tx4 -> save_tx4
    int savedia1 -> savedia1
    int savedia2 -> savedia2
    int savedia3 -> savedia3
    int savedia4 -> savedia4
    int search -> search
    int searchtext -> searchtext
    int selbackg -> selbackg
    int spause -> spause
    int sresume -> sresume
    int stations -> stations
    int title -> title
    int upnp1 -> upnp1
    int upnp2 -> upnp2
    int upnp3 -> upnp3
    int upnp4 -> upnp4
org.vradio.R$style -> org.vradio.R$style:
    int DetailsLabel -> DetailsLabel
    int DetailsLabel_Large -> DetailsLabel_Large
    int DetailsLabel_Medium -> DetailsLabel_Medium
    int DetailsLabel_Small -> DetailsLabel_Small
org.vradio.R$xml -> org.vradio.R$xml:
    int vradio_wprovider -> vradio_wprovider
org.vradio.io.IcyInputStream -> org.vradio.a.a:
    java.io.InputStream fInputStream -> b
    int fIcyMetaInt -> c
    int fBytesToRead -> d
    java.lang.String fStreamTitle -> e
    java.lang.String fStreamUrl -> a
    java.lang.String fArtist -> f
    java.lang.String fTitle -> g
    org.vradio.phone.iUiListener fListener -> h
    void close() -> close
    int read() -> read
    int read(byte[],int,int) -> read
    int readMetaData() -> a
    java.util.Vector strToVector(java.lang.String,java.lang.String) -> a
org.vradio.io.RadioProxyProducer -> org.vradio.a.b:
    java.lang.String id -> a
    boolean playing -> b
    java.io.PipedInputStream pis -> c
    java.io.PipedInputStream ppis -> d
    java.util.Hashtable ppht -> e
    java.lang.String prepared -> f
    void prepare(java.lang.String) -> a
    org.vradio.io.RadioProxyProducer getPrepared(java.lang.String) -> b
    void dock(java.io.PipedOutputStream) -> a
    void writeTo(java.io.OutputStream) -> writeTo
org.vradio.io.Xmlparser -> org.vradio.a.c:
    org.vradio.io.Xmlparser xmp -> a
    java.lang.String parent -> b
    boolean bitrate -> c
    java.util.LinkedHashMap m_reclib -> d
    java.util.Vector vc -> e
    java.util.Hashtable ht -> f
    org.vradio.io.Xmlparser getParser() -> a
    java.util.Vector getGroup() -> b
    void prepareRecLib(java.lang.String) -> a
    java.lang.String getRecString(long) -> a
    java.util.Hashtable search(java.lang.String) -> b
    org.vradio.phone.Channel searchC(java.lang.String) -> c
    java.lang.String getGroup(java.lang.String) -> d
    java.util.Hashtable getChannels(java.lang.String) -> e
    java.lang.String parsePls(java.lang.String) -> f
    java.lang.String parseM3u(java.lang.String) -> g
    java.util.LinkedHashMap parseLikes(boolean) -> a
    boolean parseG(boolean) -> b
    org.vradio.phone.Channel extractChannel(java.lang.String) -> h
    java.lang.String readHttpLine(java.io.InputStream) -> a
    java.lang.String readLine(java.io.InputStream) -> b
    void checkHttpResponse(int) -> a
org.vradio.phone.CacheDialog -> org.vradio.phone.a:
    android.app.Dialog onCreateDialog(android.os.Bundle) -> onCreateDialog
org.vradio.phone.CacheDialog$1 -> org.vradio.phone.b:
    org.vradio.phone.CacheDialog this$0 -> a
    void onClick(android.view.View) -> onClick
org.vradio.phone.CacheDialog$2 -> org.vradio.phone.c:
    org.vradio.phone.CacheDialog this$0 -> a
    void onClick(android.view.View) -> onClick
org.vradio.phone.CacheDialog$3 -> org.vradio.phone.d:
    org.vradio.phone.CacheDialog this$0 -> a
    void onClick(android.view.View) -> onClick
org.vradio.phone.CacheDialog$4 -> org.vradio.phone.e:
    org.vradio.phone.CacheDialog this$0 -> a
    void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
org.vradio.phone.Channel -> org.vradio.phone.f:
    java.lang.Long id -> a
    java.lang.Long t -> b
    java.lang.String text -> c
    java.lang.String url -> d
    java.lang.String parent -> e
    boolean bitrate -> f
    boolean isGroup -> g
    java.lang.String getText() -> a
    java.lang.String getUrl() -> b
    java.lang.Long getT() -> c
    boolean getBitrate() -> d
    void setBitrate(boolean) -> a
    void setText(java.lang.String) -> a
    void setUrl(java.lang.String) -> b
    void setParent(java.lang.String) -> c
    void setIsGroup$1385ff() -> e
    void setT(java.lang.Long) -> a
org.vradio.phone.NetSetDialog -> org.vradio.phone.g:
    android.app.Dialog onCreateDialog(android.os.Bundle) -> onCreateDialog
org.vradio.phone.NetSetDialog$1 -> org.vradio.phone.h:
    org.vradio.phone.NetSetDialog this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
org.vradio.phone.NetSetDialog$2 -> org.vradio.phone.i:
    org.vradio.phone.NetSetDialog this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
org.vradio.phone.QuitDialog -> org.vradio.phone.j:
    android.app.Dialog onCreateDialog(android.os.Bundle) -> onCreateDialog
org.vradio.phone.QuitDialog$1 -> org.vradio.phone.k:
    org.vradio.phone.QuitDialog this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
org.vradio.phone.QuitDialog$2 -> org.vradio.phone.l:
    org.vradio.phone.QuitDialog this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
org.vradio.phone.QuitDialog$3 -> org.vradio.phone.m:
    org.vradio.phone.QuitDialog this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
org.vradio.phone.Start -> org.vradio.phone.Start:
    org.teleal.cling.model.meta.Service serviceip -> a
    org.teleal.cling.model.meta.Service servicedir -> b
    android.content.Context m_context -> c
    android.widget.Toast ttoast -> d
    java.lang.String volumeSelected -> e
    java.lang.String groupSelected -> f
    java.lang.String gsel2 -> g
    java.lang.String streamSelected -> h
    java.lang.String urlSelected -> i
    boolean xmlReady -> j
    boolean selected -> k
    boolean memo -> l
    boolean settingsready -> m
    boolean parsed -> n
    boolean sek -> o
    boolean shttp -> p
    boolean sgoset -> q
    boolean sfile -> r
    boolean scache -> s
    boolean sshowagain -> t
    boolean nsdialogopen -> u
    boolean swarnmob -> v
    boolean ses_swarnmob -> w
    org.vradio.phone.Start strt -> x
    int sstate -> y
    int slpos -> z
    int sbgcol -> A
    int sostate -> B
    int retryupnp -> C
    int iui_state -> bh
    java.lang.String searchTerm -> D
    java.lang.String searchTerm2 -> E
    java.lang.String streamInfo -> F
    java.lang.String bitrate -> G
    com.giantrabbit.nagare.INagareService m_nagare_service -> H
    java.lang.String[] s2 -> I
    org.vradio.io.Xmlparser xmp -> J
    java.util.Hashtable searchResults -> K
    java.util.Hashtable shoutResults -> L
    java.util.Hashtable mHt -> M
    java.util.Hashtable favht -> N
    java.util.Hashtable avtrans_dev -> O
    java.util.LinkedHashMap likes -> P
    float seekfac -> bi
    android.widget.TextView clview -> bj
    java.lang.String[] list_content -> bk
    java.lang.String[] mFiles -> Q
    android.view.View view -> R
    android.view.View pimib2 -> S
    android.widget.TextView tex -> T
    android.widget.TextView tex2 -> U
    android.widget.TextView tex3 -> V
    android.widget.LinearLayout pfield -> W
    android.widget.LinearLayout wrap -> X
    android.widget.EditText et -> bl
    boolean mRun -> Y
    boolean popen -> Z
    boolean likeonce -> aa
    boolean vronce -> ab
    boolean startURLFlag -> ac
    boolean startExtFlag -> ad
    boolean startonceFlag -> ae
    java.lang.String temptext -> af
    java.lang.String temptext2 -> ag
    java.lang.String mDelFile -> ah
    java.lang.String startURL -> ai
    java.lang.String supnpdev -> aj
    java.lang.String mobname -> ak
    java.lang.String moburl -> al
    android.app.Dialog alert -> am
    android.app.Dialog alert2 -> an
    android.widget.ImageButton cat -> ao
    android.widget.ImageButton ser -> ap
    android.widget.ImageButton recb -> aq
    android.widget.ImageButton my -> ar
    android.widget.ImageButton set -> as
    android.widget.ImageButton pbut -> at
    android.view.ViewGroup main -> au
    android.view.ViewGroup sets -> av
    java.lang.String[] emti -> aw
    android.os.Vibrator vib -> ax
    java.lang.String edurl -> ay
    java.lang.String edname -> az
    java.lang.String uuid -> aA
    java.lang.String mmeta -> aB
    java.lang.String actualIpAddress -> aC
    boolean ssave -> aD
    boolean sshake -> aE
    boolean ssensorwait -> aF
    boolean supnp -> aG
    boolean sad -> aH
    int mAppWidgetId -> aI
    org.vradio.server.Httpserver hts -> aJ
    android.widget.SeekBar skb -> aK
    int bgdrawid -> aL
    int bgdrawcol -> aM
    int currentad -> aN
    android.graphics.drawable.AnimationDrawable frameAnimation -> aO
    android.util.DisplayMetrics metrics -> aP
    java.net.URL avtrans_url -> aQ
    android.graphics.drawable.Drawable[] bg_drawables -> aR
    android.graphics.drawable.Drawable[] buttons -> aS
    android.graphics.drawable.Drawable[] speaker -> aT
    int timeout -> aU
    boolean adshowing -> aV
    org.teleal.cling.android.AndroidUpnpService upnpService -> bm
    org.teleal.cling.registry.RegistryListener registryListener -> bn
    android.content.ServiceConnection serviceConnection -> bo
    android.content.ServiceConnection m_nagare_service_connection -> bp
    java.lang.Runnable m_stop2 -> aW
    java.lang.Runnable m_stop -> aX
    java.lang.Runnable m_finish -> aY
    java.lang.Runnable m_popen -> bq
    java.lang.Runnable m_pclose -> br
    java.lang.Runnable logodialog -> bs
    java.lang.Runnable m_cachedialog -> bt
    java.lang.Runnable m_standartdialog -> bu
    java.lang.Runnable m_netsetdialog -> bv
    java.lang.Runnable m_mobdialog -> bw
    java.lang.Runnable m_runfiledel -> bx
    java.lang.Runnable m_runbuy -> by
    java.lang.Runnable m_runbuy2 -> bz
    java.lang.Runnable ref_settings -> bA
    java.lang.Runnable m_settings -> bB
    java.lang.Runnable m_postlike -> bC
    java.lang.Runnable m_edifav -> bD
    java.lang.Runnable m_ref_stations -> bE
    java.lang.Runnable m_ref_likes -> bF
    java.lang.Runnable m_favs -> bG
    java.lang.Runnable showQuitDialog -> bH
    java.lang.Runnable m_search -> bI
    java.lang.Runnable m_play -> aZ
    java.lang.Runnable m_rec -> bJ
    java.lang.Runnable m_ref_list -> bK
    java.lang.Runnable m_run_sensor_wait -> bL
    android.os.Handler m_handler -> ba
    java.lang.Runnable m_playext -> bb
    java.lang.Runnable m_remalert -> bM
    java.lang.Runnable m_overlay_refresh -> bN
    java.lang.Runnable m_seek_refresh -> bO
    int waitanicounter -> bc
    java.lang.Runnable runwaitani -> bP
    java.lang.Runnable runwaitanistop -> bd
    android.telephony.PhoneStateListener mPhoneListener -> be
    java.util.LinkedHashMap metaDB -> bf
    java.util.Properties streamProps -> bg
    void onResume() -> onResume
    android.util.DisplayMetrics getMetrics() -> j
    android.graphics.drawable.Drawable makeib(int) -> b
    android.graphics.drawable.Drawable scale_imi(int,int) -> a
    android.graphics.drawable.Drawable scale_imi(android.graphics.Bitmap,int) -> a
    android.graphics.drawable.Drawable makeskin() -> k
    android.widget.ArrayAdapter getFavAdapter(java.lang.String[]) -> a
    android.widget.ArrayAdapter getRecAdapter(java.lang.String[]) -> b
    void postAV(java.lang.String) -> a
    org.vradio.phone.Start getStart() -> a
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void setBg() -> b
    void onStop() -> onStop
    boolean checkWiFi() -> l
    void onDestroy() -> onDestroy
    void onCreate(android.os.Bundle) -> onCreate
    void setNaviButtons() -> c
    void setOverlay$4d3af60(android.view.ViewGroup) -> a
    void setOverlay(android.view.ViewGroup) -> b
    boolean getSaved() -> m
    void putSaved() -> d
    void updateSeekBar(android.view.View) -> updateSeekBar
    void event$6c297392(int,java.lang.Object) -> a
    void refreshOverlay(android.view.View) -> refreshOverlay
    int duration() -> e
    java.lang.String durationHM() -> n
    boolean play(java.lang.String,java.lang.String) -> a
    boolean seek(int) -> a
    boolean stopPlay() -> f
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    java.lang.String[] searchS() -> g
    void onPause() -> onPause
    java.lang.String[] getFiles() -> h
    android.widget.Toast getToastS(java.lang.String) -> b
    void makeMetaDB$552c4e01() -> o
    void storeMetaDB() -> p
    void putMeta(java.lang.String) -> f
    void getFHT() -> i
    java.lang.String getBitrate(java.lang.String) -> c
    java.lang.String getMetaInf(java.lang.String) -> d
    void putStreamProp(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
    void delStreamProp(java.lang.String) -> e
    java.lang.Runnable access$000(org.vradio.phone.Start) -> a
    org.teleal.cling.android.AndroidUpnpService access$102(org.vradio.phone.Start,org.teleal.cling.android.AndroidUpnpService) -> a
    org.teleal.cling.android.AndroidUpnpService access$100(org.vradio.phone.Start) -> b
    org.teleal.cling.registry.RegistryListener access$200(org.vradio.phone.Start) -> c
    java.lang.Runnable access$300(org.vradio.phone.Start) -> d
    java.lang.Runnable access$400(org.vradio.phone.Start) -> e
    java.lang.Runnable access$500(org.vradio.phone.Start) -> f
    android.util.DisplayMetrics access$600(org.vradio.phone.Start) -> g
    java.lang.Runnable access$700(org.vradio.phone.Start) -> h
    void access$800(org.vradio.phone.Start) -> i
    android.graphics.drawable.Drawable access$900(org.vradio.phone.Start,int,int) -> a
    java.lang.Runnable access$1000(org.vradio.phone.Start) -> j
    java.lang.String[] access$1102(org.vradio.phone.Start,java.lang.String[]) -> a
    java.lang.String[] access$1100(org.vradio.phone.Start) -> k
    java.lang.Runnable access$1200(org.vradio.phone.Start) -> l
    android.widget.EditText access$1302(org.vradio.phone.Start,android.widget.EditText) -> a
    android.widget.EditText access$1300(org.vradio.phone.Start) -> m
    java.lang.Runnable access$1400(org.vradio.phone.Start) -> n
    java.lang.Runnable access$1500(org.vradio.phone.Start) -> o
    java.lang.Runnable access$1600(org.vradio.phone.Start) -> p
    java.lang.Runnable access$1700(org.vradio.phone.Start) -> q
    java.lang.Runnable access$1800(org.vradio.phone.Start) -> r
    java.lang.Runnable access$1900(org.vradio.phone.Start) -> s
    java.lang.Runnable access$2000(org.vradio.phone.Start) -> t
    java.lang.Runnable access$2100(org.vradio.phone.Start) -> u
    java.lang.Runnable access$2200(org.vradio.phone.Start) -> v
    java.lang.Runnable access$2300(org.vradio.phone.Start) -> w
    android.widget.TextView access$2402(org.vradio.phone.Start,android.widget.TextView) -> a
    android.widget.TextView access$2400(org.vradio.phone.Start) -> x
org.vradio.phone.Start$1 -> org.vradio.phone.n:
    org.vradio.phone.Start this$0 -> a
    void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
org.vradio.phone.Start$10 -> org.vradio.phone.o:
    org.vradio.phone.Start this$0 -> a
    void run() -> run
org.vradio.phone.Start$11 -> org.vradio.phone.p:
    org.vradio.phone.Start this$0 -> a
    void run() -> run
org.vradio.phone.Start$12 -> org.vradio.phone.q:
    org.vradio.phone.Start this$0 -> a
    void run() -> run
org.vradio.phone.Start$12$1 -> org.vradio.phone.r:
    org.vradio.phone.Start$12 this$1 -> a
    android.app.Dialog onCreateDialog(android.os.Bundle) -> onCreateDialog
org.vradio.phone.Start$12$1$1 -> org.vradio.phone.s:
    org.vradio.phone.Start$12$1 this$2 -> a
    void onClick(android.view.View) -> onClick
org.vradio.phone.Start$12$1$2 -> org.vradio.phone.t:
    org.vradio.phone.Start$12$1 this$2 -> a
    void onClick(android.view.View) -> onClick
org.vradio.phone.Start$12$1$3 -> org.vradio.phone.u:
    org.vradio.phone.Start$12$1 this$2 -> a
    void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
org.vradio.phone.Start$13 -> org.vradio.phone.v:
    org.vradio.phone.Start this$0 -> a
    void run() -> run
org.vradio.phone.Start$13$1 -> org.vradio.phone.w:
    org.vradio.phone.Start$13 this$1 -> a
    android.app.Dialog onCreateDialog(android.os.Bundle) -> onCreateDialog
org.vradio.phone.Start$13$1$1 -> org.vradio.phone.x:
    org.vradio.phone.Start$13$1 this$2 -> a
    void onClick(android.view.View) -> onClick
org.vradio.phone.Start$13$1$2 -> org.vradio.phone.y:
    org.vradio.phone.Start$13$1 this$2 -> a
    void onClick(android.view.View) -> onClick
org.vradio.phone.Start$14 -> org.vradio.phone.z:
    org.vradio.phone.Start this$0 -> a
    void run() -> run
org.vradio.phone.Start$14$1 -> org.vradio.phone.aa:
    org.vradio.phone.Start$14 this$1 -> a
    android.app.Dialog onCreateDialog(android.os.Bundle) -> onCreateDialog
org.vradio.phone.Start$14$1$1 -> org.vradio.phone.ab:
    org.vradio.phone.Start$14$1 this$2 -> a
    void onClick(android.view.View) -> onClick
org.vradio.phone.Start$14$1$2 -> org.vradio.phone.ac:
    org.vradio.phone.Start$14$1 this$2 -> a
    void onClick(android.view.View) -> onClick
org.vradio.phone.Start$15 -> org.vradio.phone.ad:
    org.vradio.phone.Start this$0 -> a
    void run() -> run
org.vradio.phone.Start$15$1 -> org.vradio.phone.ae:
    org.vradio.phone.Start$15 this$1 -> a
    void onClick(android.view.View) -> onClick
org.vradio.phone.Start$15$2 -> org.vradio.phone.af:
    org.vradio.phone.Start$15 this$1 -> a
    void onClick(android.view.View) -> onClick
org.vradio.phone.Start$16 -> org.vradio.phone.ag:
    org.vradio.phone.Start this$0 -> a
    void run() -> run
org.vradio.phone.Start$16$1 -> org.vradio.phone.ah:
    org.vradio.phone.Start$16 this$1 -> a
    void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
org.vradio.phone.Start$16$2 -> org.vradio.phone.ai:
    org.teleal.cling.model.meta.Device val$d -> a
    android.widget.ImageButton val$rb -> b
    org.vradio.phone.Start$16 this$1 -> c
    void onClick(android.view.View) -> onClick
org.vradio.phone.Start$16$3 -> org.vradio.phone.aj:
    org.teleal.cling.model.meta.Device val$d -> a
    android.widget.ImageButton val$rb -> b
    org.vradio.phone.Start$16 this$1 -> c
    void onClick(android.view.View) -> onClick
org.vradio.phone.Start$16$4 -> org.vradio.phone.ak:
    org.vradio.phone.Start$16 this$1 -> a
    void onProgressChanged(android.widget.SeekBar,int,boolean) -> onProgressChanged
    void onStartTrackingTouch(android.widget.SeekBar) -> onStartTrackingTouch
    void onStopTrackingTouch(android.widget.SeekBar) -> onStopTrackingTouch
org.vradio.phone.Start$17 -> org.vradio.phone.al:
    org.vradio.phone.Start this$0 -> a
    void run() -> run
org.vradio.phone.Start$17$1 -> org.vradio.phone.am:
    org.vradio.phone.Start$17 this$1 -> a
    void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
org.vradio.phone.Start$17$10 -> org.vradio.phone.an:
    org.vradio.phone.Start$17 this$1 -> a
    boolean onLongClick(android.view.View) -> onLongClick
org.vradio.phone.Start$17$11 -> org.vradio.phone.ao:
    org.vradio.phone.Start$17 this$1 -> a
    boolean onLongClick(android.view.View) -> onLongClick
org.vradio.phone.Start$17$12 -> org.vradio.phone.ap:
    org.vradio.phone.Start$17 this$1 -> a
    boolean onLongClick(android.view.View) -> onLongClick
org.vradio.phone.Start$17$13 -> org.vradio.phone.aq:
    org.vradio.phone.Start$17 this$1 -> a
    boolean onLongClick(android.view.View) -> onLongClick
org.vradio.phone.Start$17$14 -> org.vradio.phone.ar:
    org.vradio.phone.Start$17 this$1 -> a
    boolean onLongClick(android.view.View) -> onLongClick
org.vradio.phone.Start$17$15 -> org.vradio.phone.as:
    org.vradio.phone.Start$17 this$1 -> a
    boolean onLongClick(android.view.View) -> onLongClick
org.vradio.phone.Start$17$16 -> org.vradio.phone.at:
    org.vradio.phone.Start$17 this$1 -> a
    boolean onLongClick(android.view.View) -> onLongClick
org.vradio.phone.Start$17$2 -> org.vradio.phone.au:
    org.vradio.phone.Start$17 this$1 -> a
    void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
org.vradio.phone.Start$17$3 -> org.vradio.phone.av:
    org.vradio.phone.Start$17 this$1 -> a
    void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
org.vradio.phone.Start$17$4 -> org.vradio.phone.aw:
    org.vradio.phone.Start$17 this$1 -> a
    void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
org.vradio.phone.Start$17$5 -> org.vradio.phone.ax:
    org.vradio.phone.Start$17 this$1 -> a
    boolean onLongClick(android.view.View) -> onLongClick
org.vradio.phone.Start$17$6 -> org.vradio.phone.ay:
    org.vradio.phone.Start$17 this$1 -> a
    boolean onLongClick(android.view.View) -> onLongClick
org.vradio.phone.Start$17$7 -> org.vradio.phone.az:
    org.vradio.phone.Start$17 this$1 -> a
    boolean onLongClick(android.view.View) -> onLongClick
org.vradio.phone.Start$17$8 -> org.vradio.phone.ba:
    org.vradio.phone.Start$17 this$1 -> a
    boolean onLongClick(android.view.View) -> onLongClick
org.vradio.phone.Start$17$9 -> org.vradio.phone.bb:
    org.vradio.phone.Start$17 this$1 -> a
    boolean onLongClick(android.view.View) -> onLongClick
org.vradio.phone.Start$18 -> org.vradio.phone.bc:
    org.vradio.phone.Start this$0 -> a
    void run() -> run
org.vradio.phone.Start$19 -> org.vradio.phone.bd:
    org.vradio.phone.Start this$0 -> a
    void run() -> run
org.vradio.phone.Start$19$1 -> org.vradio.phone.be:
    android.widget.EditText val$et1 -> a
    android.widget.EditText val$et2 -> b
    org.vradio.phone.Start$19 this$1 -> c
    void onClick(android.view.View) -> onClick
org.vradio.phone.Start$19$2 -> org.vradio.phone.bf:
    org.vradio.phone.Start$19 this$1 -> a
    void onClick(android.view.View) -> onClick
org.vradio.phone.Start$2 -> org.vradio.phone.bg:
    org.vradio.phone.Start this$0 -> a
    void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
org.vradio.phone.Start$20 -> org.vradio.phone.bh:
    org.vradio.phone.Start this$0 -> a
    void run() -> run
org.vradio.phone.Start$21 -> org.vradio.phone.bi:
    org.vradio.phone.Start this$0 -> a
    void run() -> run
org.vradio.phone.Start$22 -> org.vradio.phone.bj:
    org.vradio.phone.Start this$0 -> a
    void run() -> run
org.vradio.phone.Start$22$1 -> org.vradio.phone.bk:
    org.vradio.phone.Start$22 this$1 -> a
    boolean onLongClick(android.view.View) -> onLongClick
org.vradio.phone.Start$22$2 -> org.vradio.phone.bl:
    org.vradio.phone.Start$22 this$1 -> a
    boolean onLongClick(android.view.View) -> onLongClick
org.vradio.phone.Start$23 -> org.vradio.phone.bm:
    org.vradio.phone.Start this$0 -> a
    void run() -> run
org.vradio.phone.Start$24 -> org.vradio.phone.bn:
    org.vradio.phone.Start this$0 -> a
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
org.vradio.phone.Start$24$1 -> org.vradio.phone.bo:
    int val$position -> a
    org.vradio.phone.Start$24 this$1 -> b
    boolean onLongClick(android.view.View) -> onLongClick
org.vradio.phone.Start$24$1$1 -> org.vradio.phone.bp:
    org.vradio.phone.Start$24$1 this$2 -> a
    android.app.Dialog onCreateDialog(android.os.Bundle) -> onCreateDialog
org.vradio.phone.Start$24$1$1$1 -> org.vradio.phone.bq:
    org.vradio.phone.Start$24$1$1 this$3 -> a
    void onClick(android.view.View) -> onClick
org.vradio.phone.Start$24$1$1$2 -> org.vradio.phone.br:
    org.vradio.phone.Start$24$1$1 this$3 -> a
    void onClick(android.view.View) -> onClick
org.vradio.phone.Start$24$1$1$3 -> org.vradio.phone.bs:
    org.vradio.phone.Start$24$1$1 this$3 -> a
    void onClick(android.view.View) -> onClick
org.vradio.phone.Start$24$1$1$4 -> org.vradio.phone.bt:
    org.vradio.phone.Start$24$1$1 this$3 -> a
    void onClick(android.view.View) -> onClick
org.vradio.phone.Start$24$2 -> org.vradio.phone.bu:
    org.vradio.phone.Start$24 this$1 -> a
    void onClick(android.view.View) -> onClick
org.vradio.phone.Start$25 -> org.vradio.phone.bv:
    org.vradio.phone.Start this$0 -> a
    void run() -> run
org.vradio.phone.Start$26 -> org.vradio.phone.bw:
    org.vradio.phone.Start this$0 -> a
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
org.vradio.phone.Start$26$1 -> org.vradio.phone.bx:
    org.vradio.phone.Start$26 this$1 -> a
    void onClick(android.view.View) -> onClick
org.vradio.phone.Start$26$2 -> org.vradio.phone.by:
    android.widget.TextView val$tv -> a
    org.vradio.phone.Start$26 this$1 -> b
    boolean onLongClick(android.view.View) -> onLongClick
org.vradio.phone.Start$26$2$1 -> org.vradio.phone.bz:
    org.vradio.phone.Start$26$2 this$2 -> a
    android.app.Dialog onCreateDialog(android.os.Bundle) -> onCreateDialog
org.vradio.phone.Start$26$2$1$1 -> org.vradio.phone.ca:
    org.vradio.phone.Start$26$2$1 this$3 -> a
    void onClick(android.view.View) -> onClick
org.vradio.phone.Start$26$2$1$2 -> org.vradio.phone.cb:
    org.vradio.phone.Start$26$2$1 this$3 -> a
    void onClick(android.view.View) -> onClick
org.vradio.phone.Start$26$2$1$3 -> org.vradio.phone.cc:
    org.vradio.phone.Start$26$2$1 this$3 -> a
    void onClick(android.view.View) -> onClick
org.vradio.phone.Start$27 -> org.vradio.phone.cd:
    org.vradio.phone.Start this$0 -> a
    void run() -> run
org.vradio.phone.Start$28 -> org.vradio.phone.ce:
    org.vradio.phone.Start this$0 -> a
    void run() -> run
org.vradio.phone.Start$29 -> org.vradio.phone.cf:
    org.vradio.phone.Start this$0 -> a
    void run() -> run
org.vradio.phone.Start$3 -> org.vradio.phone.cg:
    org.vradio.phone.Start this$0 -> a
    void run() -> run
org.vradio.phone.Start$30 -> org.vradio.phone.ch:
    org.vradio.phone.Start this$0 -> a
    void run() -> run
org.vradio.phone.Start$31 -> org.vradio.phone.ci:
    org.vradio.phone.Start this$0 -> a
    void onClick(android.view.View) -> onClick
org.vradio.phone.Start$32 -> org.vradio.phone.cj:
    org.vradio.phone.Start this$0 -> a
    void onClick(android.view.View) -> onClick
org.vradio.phone.Start$33 -> org.vradio.phone.ck:
    org.vradio.phone.Start this$0 -> a
    void onClick(android.view.View) -> onClick
org.vradio.phone.Start$34 -> org.vradio.phone.cl:
    org.vradio.phone.Start this$0 -> a
    void onClick(android.view.View) -> onClick
org.vradio.phone.Start$35 -> org.vradio.phone.cm:
    org.vradio.phone.Start this$0 -> a
    void onClick(android.view.View) -> onClick
org.vradio.phone.Start$36 -> org.vradio.phone.cn:
    org.vradio.phone.Start this$0 -> a
    void run() -> run
org.vradio.phone.Start$37 -> org.vradio.phone.co:
    org.vradio.phone.Start this$0 -> a
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
org.vradio.phone.Start$38 -> org.vradio.phone.cp:
    org.vradio.phone.Start this$0 -> a
    void onClick(android.view.View) -> onClick
org.vradio.phone.Start$39 -> org.vradio.phone.cq:
    org.vradio.phone.Start this$0 -> a
    boolean onLongClick(android.view.View) -> onLongClick
org.vradio.phone.Start$4 -> org.vradio.phone.cr:
    org.vradio.phone.Start this$0 -> a
    void run() -> run
org.vradio.phone.Start$40 -> org.vradio.phone.cs:
    org.vradio.phone.Start this$0 -> a
    void onProgressChanged(android.widget.SeekBar,int,boolean) -> onProgressChanged
    void onStartTrackingTouch(android.widget.SeekBar) -> onStartTrackingTouch
    void onStopTrackingTouch(android.widget.SeekBar) -> onStopTrackingTouch
org.vradio.phone.Start$41 -> org.vradio.phone.ct:
    org.vradio.phone.Start this$0 -> a
    void onClick(android.view.View) -> onClick
org.vradio.phone.Start$42 -> org.vradio.phone.cu:
    org.vradio.phone.Start this$0 -> a
    void run() -> run
org.vradio.phone.Start$43 -> org.vradio.phone.cv:
    org.vradio.phone.Start this$0 -> a
    void run() -> run
org.vradio.phone.Start$44 -> org.vradio.phone.cw:
    org.vradio.phone.Start this$0 -> a
    void run() -> run
org.vradio.phone.Start$45 -> org.vradio.phone.cx:
    org.vradio.phone.Start this$0 -> a
    void run() -> run
org.vradio.phone.Start$46 -> org.vradio.phone.cy:
    org.vradio.phone.Start this$0 -> a
    void run() -> run
org.vradio.phone.Start$47 -> org.vradio.phone.cz:
    org.vradio.phone.Start this$0 -> a
    void onCallStateChanged(int,java.lang.String) -> onCallStateChanged
org.vradio.phone.Start$5 -> org.vradio.phone.da:
    org.vradio.phone.Start this$0 -> a
    void run() -> run
org.vradio.phone.Start$6 -> org.vradio.phone.db:
    org.vradio.phone.Start this$0 -> a
    void run() -> run
org.vradio.phone.Start$7 -> org.vradio.phone.dc:
    org.vradio.phone.Start this$0 -> a
    void run() -> run
org.vradio.phone.Start$8 -> org.vradio.phone.dd:
    org.vradio.phone.Start this$0 -> a
    void run() -> run
org.vradio.phone.Start$8$1 -> org.vradio.phone.de:
    android.app.Dialog val$lalert -> a
    org.vradio.phone.Start$8 this$1 -> b
    void onClick(android.view.View) -> onClick
org.vradio.phone.Start$9 -> org.vradio.phone.df:
    org.vradio.phone.Start this$0 -> a
    void run() -> run
org.vradio.phone.Start$BrowseRegistryListener -> org.vradio.phone.dg:
    org.vradio.phone.Start this$0 -> a
    void remoteDeviceDiscoveryStarted(org.teleal.cling.registry.Registry,org.teleal.cling.model.meta.RemoteDevice) -> remoteDeviceDiscoveryStarted
    void remoteDeviceDiscoveryFailed(org.teleal.cling.registry.Registry,org.teleal.cling.model.meta.RemoteDevice,java.lang.Exception) -> remoteDeviceDiscoveryFailed
    void remoteDeviceAdded(org.teleal.cling.registry.Registry,org.teleal.cling.model.meta.RemoteDevice) -> remoteDeviceAdded
    void remoteDeviceRemoved(org.teleal.cling.registry.Registry,org.teleal.cling.model.meta.RemoteDevice) -> remoteDeviceRemoved
    void localDeviceAdded(org.teleal.cling.registry.Registry,org.teleal.cling.model.meta.LocalDevice) -> localDeviceAdded
    void localDeviceRemoved(org.teleal.cling.registry.Registry,org.teleal.cling.model.meta.LocalDevice) -> localDeviceRemoved
    void deviceAdded(org.teleal.cling.model.meta.Device) -> a
    void deviceRemoved(org.teleal.cling.model.meta.Device) -> b
org.vradio.phone.Start$BrowseRegistryListener$1 -> org.vradio.phone.dh:
    org.teleal.cling.model.meta.RemoteDevice val$device -> a
    java.lang.Exception val$ex -> b
    org.vradio.phone.Start$BrowseRegistryListener this$1 -> c
    void run() -> run
org.vradio.phone.Start$BrowseRegistryListener$2 -> org.vradio.phone.di:
    org.teleal.cling.model.meta.Device val$device -> a
    org.vradio.phone.Start$BrowseRegistryListener this$1 -> b
    void run() -> run
org.vradio.phone.Start$BrowseRegistryListener$3 -> org.vradio.phone.dj:
    org.teleal.cling.model.meta.Device val$device -> a
    org.vradio.phone.Start$BrowseRegistryListener this$1 -> b
    void run() -> run
org.vradio.phone.Start$DownloadFilesTask -> org.vradio.phone.dk:
    org.vradio.phone.Start this$0 -> a
    java.lang.String doInBackground$4af589aa() -> a
    void onProgressUpdate(java.lang.Object[]) -> onProgressUpdate
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
org.vradio.phone.Start$MyAdapter -> org.vradio.phone.dl:
    java.lang.String[] arr -> a
    org.vradio.phone.Start this$0 -> b
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
org.vradio.phone.Start$MyAdapter$1 -> org.vradio.phone.dm:
    org.vradio.phone.Start$MyAdapter this$1 -> a
    boolean onLongClick(android.view.View) -> onLongClick
org.vradio.phone.Start$MyAdapter$2 -> org.vradio.phone.dn:
    org.vradio.phone.Start$MyAdapter this$1 -> a
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
org.vradio.phone.Start$MyAdapter$3 -> org.vradio.phone.do:
    android.widget.ImageButton val$favs -> a
    org.vradio.phone.Start$MyAdapter this$1 -> b
    void onClick(android.view.View) -> onClick
org.vradio.phone.Start$MyAdapter$4 -> org.vradio.phone.dp:
    org.vradio.phone.Start$MyAdapter this$1 -> a
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
org.vradio.phone.Start$MyAdapter2 -> org.vradio.phone.dq:
    java.lang.String[] arr -> a
    org.vradio.phone.Start this$0 -> b
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
org.vradio.phone.Start$MyAdapter2$1 -> org.vradio.phone.dr:
    org.vradio.phone.Start$MyAdapter2 this$1 -> a
    boolean onLongClick(android.view.View) -> onLongClick
org.vradio.phone.Start$MyAdapter2$2 -> org.vradio.phone.ds:
    org.vradio.phone.Start$MyAdapter2 this$1 -> a
    boolean onLongClick(android.view.View) -> onLongClick
org.vradio.phone.Start$MyAdapter2$3 -> org.vradio.phone.dt:
    org.vradio.phone.Start$MyAdapter2 this$1 -> a
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
org.vradio.phone.Start$SearchTask -> org.vradio.phone.du:
    org.vradio.phone.Start this$0 -> a
    java.lang.String doInBackground$4af589aa() -> a
    void onProgressUpdate(java.lang.Object[]) -> onProgressUpdate
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
org.vradio.phone.Start$getLikes -> org.vradio.phone.dv:
    org.vradio.phone.Start this$0 -> a
    java.lang.String doInBackground$4af589aa() -> a
    void onProgressUpdate(java.lang.Object[]) -> onProgressUpdate
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
org.vradio.phone.Start$getVol -> org.vradio.phone.dw:
    org.vradio.phone.Start this$0 -> a
    java.lang.String doInBackground(java.lang.String[]) -> a
    void onProgressUpdate(java.lang.Object[]) -> onProgressUpdate
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
org.vradio.phone.Start$loadLikes -> org.vradio.phone.dx:
    org.vradio.phone.Start this$0 -> a
    java.lang.String doInBackground$4af589aa() -> a
    void onProgressUpdate(java.lang.Object[]) -> onProgressUpdate
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
org.vradio.phone.Start$postAVTransportUri -> org.vradio.phone.dy:
    org.vradio.phone.Start this$0 -> a
    java.lang.String doInBackground(java.lang.String[]) -> a
    void onProgressUpdate(java.lang.Object[]) -> onProgressUpdate
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
org.vradio.phone.Start$postLikes -> org.vradio.phone.dz:
    org.vradio.phone.Start this$0 -> a
    java.lang.String doInBackground$4af589aa() -> a
    void onProgressUpdate(java.lang.Object[]) -> onProgressUpdate
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
org.vradio.phone.Start$postPlay -> org.vradio.phone.ea:
    org.vradio.phone.Start this$0 -> a
    java.lang.String doInBackground$4af589aa() -> a
    void onProgressUpdate(java.lang.Object[]) -> onProgressUpdate
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
org.vradio.phone.Start$postStop -> org.vradio.phone.eb:
    org.vradio.phone.Start this$0 -> a
    java.lang.String doInBackground(java.lang.String[]) -> a
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
org.vradio.phone.Start$postVol -> org.vradio.phone.ec:
    org.vradio.phone.Start this$0 -> a
    java.lang.String doInBackground(java.lang.String[]) -> a
    void onProgressUpdate(java.lang.Object[]) -> onProgressUpdate
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
org.vradio.phone.StartDialog -> org.vradio.phone.ed:
    android.app.Dialog onCreateDialog(android.os.Bundle) -> onCreateDialog
org.vradio.phone.StartDialog$1 -> org.vradio.phone.ee:
    org.vradio.phone.StartDialog this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
org.vradio.phone.Widget -> org.vradio.phone.Widget:
    void onUpdate(android.content.Context,android.appwidget.AppWidgetManager,int[]) -> onUpdate
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
org.vradio.phone.cutter -> org.vradio.phone.cutter:
    android.os.Handler m_handler -> a
    android.media.MediaPlayer mp -> b
    android.media.MediaPlayer ap -> c
    android.media.audiofx.Visualizer mv -> d
    org.vradio.phone.cutter$VisualizerView vv -> e
    java.util.LinkedHashMap metaDB -> f
    java.lang.String icybr -> g
    java.lang.String icymetaint -> h
    java.lang.String icygenre -> i
    java.lang.String icyname -> j
    long starttime -> k
    long duration -> l
    float sf -> m
    float ef -> n
    java.lang.Thread td -> o
    org.vradio.phone.cutter$Song currentSong -> p
    java.lang.Runnable m_stop -> q
    java.lang.Runnable m_cut -> r
    java.lang.String[] getMetaData(java.lang.String) -> a
    void cutMp3$1cbb9b16(float,float) -> a
    void playFromTo(float,float) -> b
    void onCreate(android.os.Bundle) -> onCreate
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void printSamples(android.view.MotionEvent) -> a
    java.lang.String durationHM(int) -> a
    java.lang.Runnable access$000(org.vradio.phone.cutter) -> a
org.vradio.phone.cutter$1 -> org.vradio.phone.ef:
    org.vradio.phone.cutter$Song val$song -> a
    org.vradio.phone.cutter this$0 -> b
    void run() -> run
org.vradio.phone.cutter$2 -> org.vradio.phone.eg:
    org.vradio.phone.cutter this$0 -> a
    void onCompletion(android.media.MediaPlayer) -> onCompletion
org.vradio.phone.cutter$3 -> org.vradio.phone.eh:
    org.vradio.phone.cutter this$0 -> a
    void run() -> run
org.vradio.phone.cutter$4 -> org.vradio.phone.ei:
    int seekpos -> a
    int cnt -> b
    org.vradio.phone.cutter this$0 -> c
    void run() -> run
org.vradio.phone.cutter$4$1 -> org.vradio.phone.ej:
    org.vradio.phone.cutter$4 this$1 -> a
    void onCompletion(android.media.MediaPlayer) -> onCompletion
org.vradio.phone.cutter$4$2 -> org.vradio.phone.ek:
    org.vradio.phone.cutter$4 this$1 -> a
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
org.vradio.phone.cutter$4$3 -> org.vradio.phone.el:
    org.vradio.phone.cutter$4 this$1 -> a
    void onWaveFormDataCapture(android.media.audiofx.Visualizer,byte[],int) -> onWaveFormDataCapture
    void onFftDataCapture(android.media.audiofx.Visualizer,byte[],int) -> onFftDataCapture
org.vradio.phone.cutter$Song -> org.vradio.phone.em:
    long start -> a
    long end -> b
    java.lang.String Artist -> c
    java.lang.String Title -> d
    boolean high -> e
    boolean selected -> f
    org.vradio.phone.cutter this$0 -> g
org.vradio.phone.cutter$VisualizerView -> org.vradio.phone.en:
    byte[] mBytes -> b
    float[] mPoints -> c
    float top -> d
    float bottom -> e
    android.graphics.Rect mRect -> f
    android.graphics.Paint mForePaint -> g
    android.graphics.Paint linePaint -> h
    android.graphics.Paint selPaint -> i
    android.graphics.Paint hiPaint -> j
    android.graphics.Paint tp -> k
    java.util.Vector vec -> l
    org.vradio.phone.cutter this$0 -> a
    void updateVisualizer(byte) -> a
    void updateSelection(float,float) -> a
    void onDraw(android.graphics.Canvas) -> onDraw
org.vradio.phone.iUiListener -> org.vradio.phone.eo:
    void event$6c297392(int,java.lang.Object) -> a
org.vradio.server.Httpserver -> org.vradio.b.a:
    org.vradio.server.Httpserver$RequestListenerThread t -> a
    java.lang.String docroot -> b
    java.lang.String port -> c
    void stop() -> a
    java.lang.String getLocalIpAddress() -> b
org.vradio.server.Httpserver$HttpFileHandler -> org.vradio.b.b:
    java.lang.String docRoot -> a
    void handle(org.apache.http.HttpRequest,org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> handle
org.vradio.server.Httpserver$HttpFileHandler$1 -> org.vradio.b.c:
    java.io.File val$file -> a
    org.vradio.server.Httpserver$HttpFileHandler this$0 -> b
    void writeTo(java.io.OutputStream) -> writeTo
org.vradio.server.Httpserver$HttpFileHandler$2 -> org.vradio.b.d:
    java.io.File val$file -> a
    org.vradio.server.Httpserver$HttpFileHandler this$0 -> b
    void writeTo(java.io.OutputStream) -> writeTo
org.vradio.server.Httpserver$HttpFileHandler$3 -> org.vradio.b.e:
    org.vradio.server.Httpserver$HttpFileHandler this$0 -> a
    void writeTo(java.io.OutputStream) -> writeTo
org.vradio.server.Httpserver$RequestListenerThread -> org.vradio.b.f:
    java.net.ServerSocket serversocket -> a
    org.apache.http.params.HttpParams params -> b
    org.apache.http.protocol.HttpService httpService -> c
    void run() -> run
    java.net.ServerSocket access$000(org.vradio.server.Httpserver$RequestListenerThread) -> a
org.vradio.server.Httpserver$WorkerThread -> org.vradio.b.g:
    org.apache.http.protocol.HttpService httpservice -> a
    org.apache.http.HttpServerConnection conn -> b
    void run() -> run
